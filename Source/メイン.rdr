「rdrFirstChanceException.dll」を利用する

// C# ライブラリー (マウスカーソルロック / ディスプレイ解像度変更 / 画像処理(OpenCvSharp) / Zipファイル処理)
「LegendUtil.SharpLibrary.dll」を利用する

// DiscordRPC ライブラリー
「FuwaFuwaPresence.dll」を利用する

「Milkeyyy.ControlSR.dll」を利用する
//「Transitions.rdr.dll」を利用する
「Produire.WebView2.dll」を利用する
「rdrReadWriteTextReader.dll」を利用する
「RdrWindows7API.dll」を利用する


未処理例外処理器を初期化する
未処理例外処理器の検知した時の手順は、未処理例外検知した

もしプログラムの起動時設定が空ならアプリの起動引数=空の配列
そうでなければアプリの起動引数=プログラムの起動時設定
アプリのデバッグモード値=(アプリの起動引数から「/Debug」を完全一致で探したものの個数が1以上)

もしプログラムが起動中なら
	「[アプリの名前] は既に起動しています。」を「警告アイコン」で表示する
	終了する
もし終わり

// 必要なフォルダーを作成する
アプリのコンフィグフォルダー=フォルダ情報(「[マイドキュメント][アプリの名前]」)を作ったもの
もしアプリの起動引数から「/ConfigFolder」を完全一致で探したものの個数が1以上なら
	例外監視
		アプリのコンフィグフォルダー=フォルダ情報(アプリの起動引数(アプリの起動引数から「/ConfigFolder」を完全一致で探したもの(1)+1))を作ったもの
	発生した場合
		アプリのコンフィグフォルダー=フォルダ情報(「[マイドキュメント][アプリの名前]」)を作ったもの
	監視終わり
もし終わり
コンフィグ管理器でフォルダー作成する

デバッグログを書き込み開始する
エラーログを書き込み開始する

言語管理器で初回読み込みする

もしアプリの起動引数から「/Debug」を完全一致で探したものの個数が1以上なら
	休憩する
	デバッグログを接続する
	//テスト画面を表示する
もし終わり

// コンフィグチェック
メイン設定という設定ファイルを作る
コンフィグ管理器でコンフィグチェックする

コンフィグ管理器を初期化する

// 実験的機能の初期化/読み込み
実験的機能管理器で初期化する

// 実験的機能の認証チェック
実験的機能管理器で認証チェックする

// プロファイルを読み込む
プロファイル管理器でプロファイル読み込む

// アカウントデータを読み込む (存在しない場合は新規作成)
EAappでアカウントデータ読み込む

追加ファイル管理器で一括存在確認する

// DiscordRPCを初期化
RPC管理器で初期化する

// システム情報: 一時的に無効化
// システム情報種類を初期化する
//システム情報:初期化する

もしアプリの起動引数から「/Play」を完全一致で探したものの個数が1以上でないならスプラッシュ画面を表示する

// 設計スケールモード
もしアプリの起動引数から「/AutoScaleMode」を完全一致で探したものの個数が1以上なら
	アプリの設計スケールモード=アプリの起動引数(アプリの起動引数から「/AutoScaleMode」を完全一致で探したもの(1)+1)
もし終わり

// 設計スケール比率
もしアプリの起動引数から「/AutoScaleDimensions」を完全一致で探したものの個数が1以上なら
	アプリの設計スケール比率=アプリの起動引数(アプリの起動引数から「/AutoScaleDimensions」を完全一致で探したもの(1)+1)を「,」で区切ったもの
もし終わり

// 指定されたプロファイルで起動する
もしアプリの起動引数から「/Play」を完全一致で探したものの個数が1以上なら
	例外監視
		【プロファイル名】=アプリの起動引数(アプリの起動引数から「/Play」を完全一致で探したもの(1)+1)
		もしプロファイル名が「/」で始まるなら
			「プロファイルIDが指定されていません。」を「中止アイコン」で表示する
			終了する
		もし終わり
	発生した場合
		「プロファイルIDが指定されていません。」を「中止アイコン」で表示する
		終了する
	監視終わり
	
	ApexLegendsをプロファイル名で{「ショートカット」}として起動する
	待機する
もし終わり

もしセットアップ画面の表示が○でないなら
	スプラッシュ画面の状況=言語管理器で「SplashWindow.Status.LoadingWindow」を取得したもの
	メイン画面を表示する
もし終わり

スプラッシュ画面を閉じる

// アップデートを確認する
もしメイン設定について「Update」から「CheckForUpdatesOnAppLaunch」を取得したものが○なら
	アップデーターでアップデート確認する
もし終わり

待機する

// 例外発生時にデバッグログへエラー内容を出力する
未処理例外検知した時の手順
	「[この時の内容]」をエラーログへ出力する
終わり

/*テスト画面とは
	ウィンドウを継承する
	
	+例外部品一覧={}
	+アイコン一覧={}
	
	はじめの手順
		初期化する
		この内容=「[アプリの名前]」
		この設計スケール比率=アプリの設計スケール比率
		このアイコン=アプリのアイコン
		ーー貼り付けた部品に対する操作をここに書きます
	終わり
	初期化する手順
		ーー自動生成された手順です。ここにプログラムを書き加えても消える場合があります
		初期化開始する
		この実質大きさを｛705,382｝に変える
		この初期位置を「中央」に変える
		この内容を「テスト画面」に変える
		このフォントを「Yu Gothic UI,9」に変える
		テキスト領域1というテキスト領域を作る
			その位置と大きさを｛0,0,705,347｝に変える
			その行間を18に変える
			その移動順を1に変える
			そのフォントを「Yu Gothic UI,9.75」に変える
			そのドッキング方向を「全体」に変える
		ボタン1というボタンを作る
			その位置と大きさを｛0,347,705,35｝に変える
			その見た目を「フラット」に変える
			その内容を「実行」に変える
			その移動順を2に変える
			そのフォントを「Yu Gothic UI,9」に変える
			そのドッキング方向を「下」に変える
		初期化終了する
	終わり
	
	開いた時の手順
		ウィンドウ管理器の部品一覧へ「[自分]」として[ウィンドウ管理器:自分から子部品取得したもの]を設定する
		ウィンドウ管理器:自分を例外部品一覧でデザイン適用する
		
		もし「_TestProgram.txt」というファイルが存在するならテキスト領域1の内容=「[今の位置]_TestProgram.txt」から「UTF-8」で読み込んだもの
	終わり
	
	閉じる時の手順
		テキスト領域1の内容を「_TestProgram.txt」へ「UTF-8」で保存する
	終わり
	
	ボタン1がクリックされた時の手順
		例外監視
			テキスト領域1の内容を命令する
		発生した場合
			「[エラーのメッセージ]」を「中止アイコン」で表示する
		監視終わり
	終わり
終わり*/
