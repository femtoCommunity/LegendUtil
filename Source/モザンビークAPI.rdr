モザンビークAPIとは
	単一種類
	
	-APIURL:文字列=「[アプリのAPIURL]」
	
	はじめの手順
		サーバーステータス最終取得日時=日時形式(「2000/01/01」)を作る
		ニュースデータ=エラーニュースデータ
		ニュース最終取得日時=日時形式(「2000/01/01」)を作る
	終わり
	
	-エラーサーバーステータスデータ:辞書={「_error」=「Failed to get server status」}
	+サーバーステータス地域:文字列=「Asia」
	+サーバーステータスデータ:辞書
	+サーバーステータス最終取得日時:日時形式
	自分でサーバーステータス更新する手順
		// 10秒間隔を空けないと取得できないようにする
		【経過時間:日時期間形式】=サーバーステータス最終取得日時と今の日付差
		もし経過時間の合計秒数が10未満なら
			//「間隔が短すぎます。[改行][10-経過時間の合計秒数の整数]秒後にもう一度お試しください。」というエラーを発生させる
			手順から抜け出す
		もし終わり
		
		サーバーステータス最終取得日時=今
		
		サーバーステータス地域=メイン設定について「UI_MainMenu」から「ServerStatus_Region」を取得したもの
		
		【データ】
		例外監視
			データ=「[APIURL]/servers」をHTTPで取得したもの
			「サーバーステータスデータ取得 - ステータスコード: [HTTPのステータスコード]」をデバッグログへ出力する
			もしHTTPのステータスコードが200でないなら
				サーバーステータスデータ=エラーサーバーステータスデータ
				サーバーステータスデータ(「_error」)=「ステータスコード: [HTTPのステータスコード]」
				手順から抜け出す
			もし終わり
			サーバーステータスデータ=データをJSON形式として読み取ったもの
		発生した場合
			サーバーステータスデータ=エラーサーバーステータスデータ
			サーバーステータスデータ(「_error」)=「[エラーのメッセージ]」
			手順から抜け出す
		監視終わり
	終わり
	
	-エラーニュースデータ:配列={
		{
			「title」=「ニュースの取得に失敗しました」,
			「link」=「」,
			「img」=「」,
			「short_desc」=「」
		}
	}
	+ニュースデータ:配列
	-ニュース最終取得日時:日時形式
	+ニュース最大取得数:整数=5
	自分でニュース更新する手順
		// 10秒間隔を空けないと取得できないようにする
		【経過時間:日時期間形式】=ニュース最終取得日時と今の日付差
		もし経過時間の合計秒数が10未満なら
			//「間隔が短すぎます。[改行][10-経過時間の合計秒数の整数]秒後にもう一度お試しください。」というエラーを発生させる
			手順から抜け出す
		もし終わり
		
		ニュース最終取得日時=今
		
		// ニュースを取得する
		【データ】
		【画像パス:文字列】=「[アプリのコンフィグフォルダー]Resources\News\Image\1.jpg」
		例外監視
			データ=「[APIURL]/news?language=ja-jp」をHTTPで取得したもの
			「モザンビークAPI ニュースデータ取得 - ステータスコード: [HTTPのステータスコード]」をデバッグログへ出力する
			もしHTTPのステータスコードが200でないなら
				ニュースデータ=エラーニュースデータ
				ニュースデータ(1)(「short_desc」)=「ステータスコード: [HTTPのステータスコード]」
				もし画像パスが存在するなら画像パスを削除する
				手順から抜け出す
			もし終わり
			ニュースデータ=データをJSON形式として読み取ったもの
			ニュースデータ=ニュースデータの1番目から[ニュース最大取得数]個切り出したもの
		発生した場合
			エラーのメッセージをデバッグログへ出力する
			ニュースデータ=エラーニュースデータ
			ニュースデータ(1)(「short_desc」)=「内部エラー: [エラーのメッセージ]」
			もし画像パスが存在するなら画像パスを削除する
			手順から抜け出す
		監視終わり
		
		// 画像を取得する
		【カウント:整数】=1
		ニュースデータを【ニュース】へそれぞれ繰り返す
			画像パス=画像パスのフォルダだけ&「[カウント].jpg」
			例外監視
				もし画像パスが存在するなら画像パスを削除する
				[ニュース(「img」)]を画像パスへHTTPでダウンロードする
				もしHTTPのステータスコードが200でないなら「画像を取得できませんでした - ステータスコード: [HTTPのステータスコード]」というエラーを発生させる
			発生した場合
				エラーのメッセージをデバッグログへ出力する
				もし画像パスが存在するなら画像パスを削除する
			監視終わり
			カウント=カウント+1
			// 最大取得数に達したら繰り返しから抜ける
			もしカウントがニュース最大取得数+1以上なら手順から抜け出す
		繰り返し終わり
	終わり
終わり