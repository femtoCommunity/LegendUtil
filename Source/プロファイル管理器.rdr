プロファイル管理器とは
	単一種類
	
	初期プロファイルという属性
		取得する手順
			設定初期プロファイルを返す
		終わり
	終わり
	
	はじめの手順
		一覧=空の辞書
		プロファイルテーブル=空の辞書
	終わり
	
	+一覧:辞書
	+プロファイルテーブル:辞書
	自分でプロファイル読み込む手順
		【プロファイルID】
		【プロファイル名前】
		【プロファイル辞書】
		【プロファイル見出し】
		【プロファイル子見出し】
		【プロファイル子子見出し】
		
		【初期プロファイル見出し】
		【v1プロファイル見出し】
		【v1プロファイル子見出し】
		【v1:真偽値】
		【v2プロファイル:辞書】
		【変換テーブル見出し】
		【変換テーブル見出し文字列】
		【変換値型】
		
		プロファイル管理器の一覧=空の辞書
		フルパスで「[アプリのコンフィグフォルダー]Profile」のファイルの一覧を【ファイルパス】へそれぞれ繰り返す
			もしファイルパスの拡張子だけが「json」なら
				// プロファイルをファイルから読み込む
				プロファイル辞書=ファイルパスから「UTF-8」で読み込んだものをJSON形式として読み取ったもの
				「[改行]プロファイルチェック: [ファイルパスのファイル名だけ][改行]」をデバッグログへ出力する
				
				// 読み込んだファイルがバージョン1のプロファイルかチェックする
				v1=○
				もしプロファイル辞書に「Info」が存在しないなら
					設定初期プロファイル(「v1」)の見出しを初期プロファイル見出しへそれぞれ繰り返す
						もしプロファイル辞書に初期プロファイル見出しが存在しないならv1=×
					繰り返し終わり
					
				そうでなければ
					v1=×
					
				もし終わり
				
				// バージョン1のプロファイルの場合は変換処理を実行する
				もしv1が○なら
					「v1 -> v2 変換処理を実行」をデバッグログへ出力する
					
					v2プロファイル=設定初期プロファイル(「v2」)を複製したもの
					
					プロファイル辞書の見出しをv1プロファイル見出しへそれぞれ繰り返す
						もしv1プロファイル見出しがプロファイル変換テーブル(「v1_v2」)に存在するなら
							プロファイル変換テーブル(「v1_v2」)(v1プロファイル見出し)の見出しをv1プロファイル子見出しへそれぞれ繰り返す
								もしv1プロファイル子見出しがプロファイル変換テーブル(「v1_v2」)(v1プロファイル見出し)に存在するなら
									変換テーブル見出し文字列=「「(「」」&[[プロファイル変換テーブル(「v1_v2」)(v1プロファイル見出し)(v1プロファイル子見出し)]で「/」を「「」)(「」」に置換したもの]&「「」)」」
									
									「「変換値型=[設定初期プロファイル(「v2」)」」&[変換テーブル見出し文字列]&「「]の種類名」」を命令する
									「 - 変換値型: [変換値型]」をデバッグログへ出力する
									
									もし変換値型が「文字列」なら
										「 - 変換([変換値型])」をデバッグログへ出力する
										「v2プロファイル[変換テーブル見出し文字列]=」&[「]&[プロファイル辞書(v1プロファイル見出し)(v1プロファイル子見出し)]&[」]を命令する
										
									そうでなければ
										「 - 変換([変換値型])」をデバッグログへ出力する
										「v2プロファイル[変換テーブル見出し文字列]=」&[プロファイル辞書(v1プロファイル見出し)(v1プロファイル子見出し)]を命令する
										
									もし終わり
									
									//「「 - [v2プロファイル」」&[変換テーブル見出し文字列]&「「]をデバッグログへ出力する」」を命令する
								もし終わり
							繰り返し終わり
						もし終わり
					繰り返し終わり
					
					もしファイルパスの名前だけが「Default」なら
						v2プロファイル(「Info」)(「Id」)=「Default」
						v2プロファイル(「Info」)(「Name」)=「デフォルト」
						
					そうでなければ
						v2プロファイル(「Info」)(「Id」)=GUID値を生成したもの
						v2プロファイル(「Info」)(「Name」)=ファイルパスの名前だけ
						
					もし終わり
					プロファイル辞書=v2プロファイルを複製したもの
					プロファイルID=プロファイル辞書(「Info」)(「Id」)
					プロファイル名前=プロファイル辞書(「Info」)(「Name」)
					// 変換したプロファイル(v1)は別のフォルダーにバックアップ(移動)しておく
					「[ファイルパス]」を「[アプリのコンフィグフォルダー]Profile\v1」へコピーする
					「[ファイルパス]」を削除する
					//v2プロファイルをJSON形式として書き出したものを「[アプリのコンフィグフォルダー]Profile\[v2プロファイル(「Info」)(「Id」)].json」へ「UTF-8」で保存する
					
				そうでなければ
					プロファイルID=ファイルパスの名前だけ
					プロファイル名前=プロファイル辞書(「Info」)(「Name」)
					
				もし終わり
				
				もしプロファイル辞書に「Info」が存在するなら
					もし(プロファイル辞書(「Info」)に「Name」が存在する)かつ(プロファイル辞書(「Info」)に「Id」が存在する)かつ(プロファイル辞書(「Info」)に「Version」が存在する)なら
						// プロファイルの内容をチェック 存在しない項目があった場合は追加する
						設定初期プロファイル(「v2」)の見出しをプロファイル見出しへそれぞれ繰り返す
							//「- 確認: [プロファイル見出し]」をデバッグログへ出力する
							もしプロファイル辞書にプロファイル見出しが存在しないなら
								//「 - 設定: [設定初期プロファイル(「v2」)(プロファイル見出し)]」をデバッグログへ出力する
								プロファイル辞書(プロファイル見出し)=空の辞書
							もし終わり
							
							設定初期プロファイル(「v2」)(プロファイル見出し)の見出しをプロファイル子見出しへそれぞれ繰り返す
								//「  - 確認: [プロファイル子見出し]」をデバッグログへ出力する
								もしプロファイル辞書(プロファイル見出し)にプロファイル子見出しが存在しないなら
									//「   - 設定: [設定初期プロファイル(「v2」)(プロファイル見出し)(プロファイル子見出し)]」をデバッグログへ出力する
									プロファイル辞書(プロファイル見出し)(プロファイル子見出し)=設定初期プロファイル(「v2」)(プロファイル見出し)(プロファイル子見出し)
								もし終わり
								
								もし設定初期プロファイル(「v2」)(プロファイル見出し)(プロファイル子見出し)が辞書であるなら
									設定初期プロファイル(「v2」)(プロファイル見出し)(プロファイル子見出し)の見出しをプロファイル子子見出しへそれぞれ繰り返す
										//「  - 確認: [プロファイル子子見出し]」をデバッグログへ出力する
										もしプロファイル辞書(プロファイル見出し)(プロファイル子見出し)にプロファイル子子見出しが存在しないなら
											//「   - 設定: [設定初期プロファイル(「v2」)(プロファイル見出し)(プロファイル子見出し)(プロファイル子子見出し)]」をデバッグログへ出力する
											プロファイル辞書(プロファイル見出し)(プロファイル子見出し)(プロファイル子子見出し)=設定初期プロファイル(「v2」)(プロファイル見出し)(プロファイル子見出し)(プロファイル子子見出し)
										もし終わり
									繰り返し終わり
								もし終わり
								
							繰り返し終わり
							
						繰り返し終わり
						プロファイル管理器のプロファイルテーブルへ[プロファイルID]として[プロファイルを作ったもの]を設定する
						プロファイル管理器のプロファイルテーブル(プロファイルID)のプロファイルデータ=プロファイル辞書
						
						// autoexec ファイルを作成
						/*もし「[アプリのコンフィグフォルダー]Profile\AutoExecute\autoexec_[プロファイルデータ(「Info」)(「Id」)].cfg」というファイルが存在しないなら
							「// Auto Execute Config (autoexec)[改行]// Generated by [アプリの名前][改行]」を「[アプリのコンフィグフォルダー]Profile\AutoExecute\autoexec_[プロファイルデータ(「Info」)(「Id」)].cfg」へ「UTF-8」で保存する
						もし終わり*/
						
						もしv1が○ならプロファイル管理器のプロファイルテーブル(プロファイルID)を保存する
					もし終わり
				もし終わり
			もし終わり
		繰り返し終わり
	終わり
	
	自分でプロファイル保存する手順
		// 読み込まれているすべてのプロファイルを書き出す
		プロファイルテーブルの見出しを【プロファイルID】へそれぞれ繰り返す
			例外監視
				プロファイルテーブル(プロファイルID)を保存する
			発生した場合
				「プロファイル[「][プロファイルデータの名前][」]([プロファイルデータのID]) の保存に失敗しました。[改行][改行][エラーのメッセージ]」を「中止アイコン」で表示する
			監視終わり
		繰り返し終わり
	終わり
	
	自分で【並び替え方法:文字列】としてプロファイル並び替える手順
		【並び替え対象】=空の配列
		【並び替え対象見出し】=プロファイル管理器のプロファイルテーブルの見出し
		//【詳細:配列】
		【対象】
		【対象見出し:文字列】
		
		「プロファイル並び替え実行: [並び替え方法]」をデバッグログへ出力する
		
		並び替え方法について分岐
		「名前 (昇順)」の場合
			並び替え対象見出しを『
				それを{左,右}とみなす
				左=プロファイル管理器のプロファイルテーブル(左)
				右=プロファイル管理器のプロファイルテーブル(右)
				
				左=[左の名前]
				右=[右の名前]
				「- プロファイル名: [左]/[右]」をデバッグログへ出力する
				もし左>右なら
					1を返す
				他でもし左<右なら
					-1を返す
				そうでなければ
					0を返す
				もし終わり
			』で並び替える
			
		「名前 (降順)」の場合
			並び替え対象見出しを『
				それを{左,右}とみなす
				左=プロファイル管理器のプロファイルテーブル(左)
				右=プロファイル管理器のプロファイルテーブル(右)
				
				左=[左の名前]
				右=[右の名前]
				「- プロファイル名: [左]/[右]」をデバッグログへ出力する
				もし左>右なら
					-1を返す
				他でもし左<右なら
					1を返す
				そうでなければ
					0を返す
				もし終わり
			』で並び替える
			
		「ディスプレイ設定 (昇順)」の場合
			「名前 (昇順)」としてプロファイル並び替える
			並び替え対象見出しを『
				それを{左,右}とみなす
				左=プロファイル管理器のプロファイルテーブル(左)
				右=プロファイル管理器のプロファイルテーブル(右)
				
				もし左のゲーム解像度変更が×なら左=「0」
				そうでなければ左=「1_[左のディスプレイ解像度幅][左のディスプレイ解像度高さ]」
				もし右のゲーム解像度変更が×なら右=「0」
				そうでなければ右=「1_[右のディスプレイ解像度幅][右のディスプレイ解像度高さ]」
				「- プロファイル名: [左]/[右]」をデバッグログへ出力する
				もし左>右なら
					1を返す
				他でもし左<右なら
					-1を返す
				そうでなければ
					0を返す
				もし終わり
			』で並び替える
			
		「ディスプレイ設定 (降順)」の場合
			「名前 (降順)」としてプロファイル並び替える
			並び替え対象見出しを『
				それを{左,右}とみなす
				左=プロファイル管理器のプロファイルテーブル(左)
				右=プロファイル管理器のプロファイルテーブル(右)
				
				もし左のゲーム解像度変更が×なら左=「0」
				そうでなければ左=「1_[左のディスプレイ解像度幅][左のディスプレイ解像度高さ]」
				もし右のゲーム解像度変更が×なら右=「0」
				そうでなければ右=「1_[右のディスプレイ解像度幅][右のディスプレイ解像度高さ]」
				「- プロファイル名: [左]/[右]」をデバッグログへ出力する
				もし左>右なら
					-1を返す
				他でもし左<右なら
					1を返す
				そうでなければ
					0を返す
				もし終わり
			』で並び替える
			
		「プラットフォーム (昇順)」の場合
			並び替え対象見出しを『
				それを{左,右}とみなす
				左=プロファイル管理器のプロファイルテーブル(左)
				右=プロファイル管理器のプロファイルテーブル(右)
				
				左=[左のApexLegendsプラットフォーム]
				右=[右のApexLegendsプラットフォーム]
				「- プロファイル名: [左]/[右]」をデバッグログへ出力する
				もし左>右なら
					1を返す
				他でもし左<右なら
					-1を返す
				そうでなければ
					0を返す
				もし終わり
			』で並び替える
			
		「プラットフォーム (降順)」の場合
			並び替え対象見出しを『
				それを{左,右}とみなす
				左=プロファイル管理器のプロファイルテーブル(左)
				右=プロファイル管理器のプロファイルテーブル(右)
				
				左=[左のApexLegendsプラットフォーム]
				右=[右のApexLegendsプラットフォーム]
				「- プロファイル名: [左]/[右]」をデバッグログへ出力する
				もし左>右なら
					-1を返す
				他でもし左<右なら
					1を返す
				そうでなければ
					0を返す
				もし終わり
			』で並び替える
			
		分岐終わり
		
		【並び替え辞書:辞書】=空の辞書
		並び替え対象見出しを対象見出しへそれぞれ繰り返す
			並び替え辞書(対象見出し)=プロファイル管理器のプロファイルテーブル(対象見出し)
		繰り返し終わり
		プロファイル管理器のプロファイルテーブル=空
		プロファイル管理器のプロファイルテーブル=並び替え辞書
	終わり
	
	自分で【ID:文字列】としてプロファイルショートカット作成する手順:真偽値
		もしIDが無なら手順から抜け出す
		
		もし「プロファイル[「][プロファイル管理器のプロファイルテーブル(ID)の名前][」]のショートカットを作成してもよろしいですか？」を「情報アイコン」にして質問したものが「はい」でないなら手順から抜け出す
		
		ショートカットファイルとして「[プログラムのフォルダ][プログラムのファイル名]」を「/Play "[ID]"」で「[デスクトップ][プロファイル管理器のプロファイルテーブル(ID)の名前] ([アプリの名前]).lnk」へ作成する
		
		「プロファイル[「][プロファイル管理器のプロファイルテーブル(ID)の名前][」]のショートカットをデスクトップへ作成しました。」を「情報アイコン」で表示する
	終わり
	
	自分で【名前:文字列】としてプロファイル新規作成する手順:プロファイル
		もし名前が無なら手順から抜け出す
		
		【新規プロファイル:プロファイル】=プロファイルを作ったもの
		【プロファイルID】=新規プロファイルのID
		プロファイル管理器のプロファイルテーブルに[プロファイルID]として[新規プロファイル]を設定する
		プロファイル管理器のプロファイルテーブル(プロファイルID)の名前=名前
		プロファイル管理器のプロファイルテーブル(プロファイルID)を保存する
		
		プロファイル管理器のプロファイルテーブル(プロファイルID)を返す
	終わり
	
	自分で【ID:文字列】を【新規名称:文字列】へプロファイル名称変更する手順:真偽値
		もしIDが無なら手順から抜け出す
		
		// プロファイルがDefaultの場合は変更をキャンセルする
		もしIDが「Default」なら
			「プロファイル[「]デフォルト[」]の名前は変更できません。」を「中止アイコン」で表示する
			×を返す
		もし終わり
		
		もしプロファイル管理器のプロファイルテーブルにIDが存在するなら
			プロファイル管理器のプロファイルテーブル(ID)の名前=新規名称
			
		そうでなければ
			「指定されたプロファイル [ID] は存在しません。」を「警告アイコン」で表示する
			×を返す
			
		もし終わり
		○を返す
	終わり
	
	自分で【ID:文字列】をプロファイル削除する手順:真偽値
		もしIDが無なら手順から抜け出す
		
		もしプロファイル管理器のプロファイルテーブルにIDが存在しないなら
			「指定されたプロファイル [ID] は存在しません。」を「警告アイコン」で表示する
			×を返す
		もし終わり
		
		もし「プロファイル[「][プロファイル管理器のプロファイルテーブル(ID)の名前][」]([ID]) を削除してもよろしいですか？」を「警告アイコン」にして質問したものが「はい」でないなら手順から抜け出す
		
		// プロファイルがDefaultの場合は変更をキャンセルする
		もしIDが「Default」なら
			「プロファイル[「]デフォルト[」]は削除できません。」を「中止アイコン」で表示する
			×を返す
		もし終わり
		
		プロファイル管理器のプロファイルテーブルからIDを削除する
		// ファイルが存在する場合はファイルを削除する
		もし「[アプリのコンフィグフォルダー]Profile\[ID].json」というファイルが存在するなら「[アプリのコンフィグフォルダー]Profile\[ID].json」を削除する
		// autoexec ファイルが存在する場合は削除する
		もし「[アプリのコンフィグフォルダー]Profile\AutoExecute\autoexec_[ID].cfg」というファイルが存在するなら「[アプリのコンフィグフォルダー]Profile\AutoExecute\autoexec_[ID].cfg」を削除する
		
		○を返す
	終わり
	
	// データ
	+プロファイル名正規表現:文字列=「「[\\\/:\*\?\"<>\|]」」
	
	+設定初期プロファイル:辞書={
		「v1」={
			「Apex_Legends」={
				「Platform」=「Steam」,
				「BinaryPath」=「」,
				「BinaryPath_AutoDetection」=○,
				「EACBinaryPath」=「」
			},
			「Change_Display_Resolution」={
				「Enable」=×,
				「Change_System_Resolution」=×,
				「Display_Scaling_Mode」=0,
				「ResolutionWidth」=「1920」,
				「ResolutionHeight」=「1080」,
				「Refresh_Rate」=「60」,
				「Alt_Enter_Automatic_Press」=×,
				「Alt_Enter_Automatic_Press_Wait_Second」=「20」
			},
			「Command_Line_Arguments」={
				「Value」=「」
			}
		},
		「v2」={
			「Info」={
				「Name」=「」,
				「Id」=「」,
				「Version」=「2」
			},
			「Game」={
				「Exe_Path」={
					「R5」=「」,
					「R5_DX12」=「」,
					「EAC」=「」
				},
				「Exe_Path_Auto_Detection」=○,
				「Platform」=「Steam」,
				「Launch_EAapp_Via_Steam」={
					「Enable」=×,
					「AppID」=「」
				},
				「CursorLocker」=○,
				「Arguments」=「」
			},
			「Display」={
				「Change_Game_Resolution」=×,
				「Change_Display_Resolution」=×,
				「Scaling_Mode」=1,
				「Resolution」={
					「Width」=1920,
					「Height」=1080
				},
				「Refresh_Rate」=60,
				「Alt_Enter_Automatic_Press」={
					「Enable」=×,
					「Wait_Second」=60,
					「Image_Matcher」=×
				}
			}
		}
	}
	
	-プロファイル変換テーブル:辞書={
		「v1_v2」={
			「Apex_Legends」={
				「Platform」=「Game/Platform」,
				「BinaryPath」=「Game/Exe_Path/R5」,
				「BinaryPath_AutoDetection」=「Game/Exe_Path/R5_DX12」,
				「EACBinaryPath」=「Game/Exe_Path/EAC」
			},
			「Change_Display_Resolution」={
				「Enable」=「Display/Change_Game_Resolution」,
				「Change_System_Resolution」=「Display/Change_Display_Resolution」,
				「Display_Scaling_Mode」=「Display/Scaling_Mode」,
				「ResolutionWidth」=「Display/Resolution/Width」,
				「ResolutionHeight」=「Display/Resolution/Height」,
				「Refresh_Rate」=「Display/Refresh_Rate」,
				「Alt_Enter_Automatic_Press」=「Display/Alt_Enter_Automatic_Press/Enable」,
				「Alt_Enter_Automatic_Press_Wait_Second」=「Display/Alt_Enter_Automatic_Press/Wait_Second」,
				「Alt_Enter_Automatic_Press_Use_Image_Matcher」=「Display/Alt_Enter_Automatic_Press/Image_Matcher」
			},
			「Command_Line_Arguments」={
				「Value」=「Game/Arguments」
			}
		}
	}
	
	+起動引数カテゴリー一覧:配列={「コンフィグ」,「全般」,「グラフィック」,「システム」,「CPU」,「マウス/コントローラー」,「Live API」}
	+起動引数テーブル:辞書={
		////////// コンフィグ //////////
		「+exec」={
			「カテゴリー」=「コンフィグ」,
			「名前」=「autoexec を読み込む」,
			「説明」=「ゲームの起動時に autoexec ファイルを読み込んでコンフィグを適用します。[改行]autoexec は[「]コンフィグ[」]タブから編集できます。」,
			「編集可能」=○,
			「入力」=○,
			「入力初期値」=「"autoexec.cfg"」,
			「オプション指定」=○,
			「無効選択肢」=「無効」,
			「選択肢」={
				{「」,2,「プロファイル」,×},
				{「^".*.cfg"$」,3,「指定」,○}
			}
		},
		
		////////// 全般 //////////
		「-novid」={
			「名前」=「スプラッシュムービーを無効化」,
			「説明」=「EA特有の爆音スプラッシュムービーを無効化して、起動時間の短縮、及び鼓膜の破壊を防止します。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=×,
			「無効選択肢」=「無効化しない (スプラッシュムービーを再生する)」,
			「選択肢」={
				{「」,2,「スプラッシュムービーを再生しない」,×}
			}
		},
		
		////////// グラフィック //////////
		「-eac_launcher_settings」={
			「カテゴリー」=「グラフィック」,
			「名前」=「DirectX 12 を有効化 (ベータ)」,
			「説明」=「DirectX 12 でゲームを起動します。
DirectX 12 を使用すると、ゲームがCPU グラフィック コードを複数のコアに分散できるようになり、フレームレートの向上が期待できます。
環境によっては、テクスチャーが正常に表示されないなど、不具合が発生する可能性があります。」,
			「拡張ボタン」={「DirectX 12 に関する詳しい情報はこちら (Reddit)」,「「「https://www.reddit.com/r/apexlegends/comments/yiek6d/dev_team_update_directx_12_beta_on_pcshare_your/」を「標準」で開く」」},
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「SettingsDX12.json」,
			「オプション指定」=○,
			「無効選択肢」=「無効」,
			「選択肢」={
				{「SettingsDX12.json」,2,「有効」,×}
			}
		},
		「-fullscreen」={
			「カテゴリー」=「グラフィック」,
			「名前」=「フルスクリーン」,
			「説明」=「ウィンドウをフルスクリーンにした状態でゲームを起動します。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「」,
			「オプション指定」=×,
			「無効選択肢」=「無効」,
			「選択肢」={
				{「」,2,「有効」,×}
			}
		},
		「+fps_max」={
			「カテゴリー」=「グラフィック」,
			「名前」=「FPS上限」,
			「説明」=「FPSの上限値を設定します。」,
			「編集可能」=○,
			「入力」=○,
			「入力初期値」=「60」,
			「オプション指定」=○,
			「無効選択肢」=「設定しない」,
			「選択肢」={
				{「^0$」,2,「無制限」,×}, // 正規表現, 選択リストの選択番号, 選択肢の名前, 入力可能
				{「「[0-9]{1,3}」」,3,「指定入力」,○},
				{「60」,4,「60 FPS」,×},
				{「95」,5,「95 FPS」,×},
				{「120」,6,「120 FPS」,×},
				{「144」,7,「144 FPS」,×},
				{「240」,8,「240 FPS」,×},
				{「360」,9,「360 FPS」,×} 
			}
		},
		「-refresh」={
			「カテゴリー」=「グラフィック」,
			「名前」=「リフレッシュレート上限」,
			「説明」=「リフレッシュレートの上限値を設定します。」,
			「編集可能」=○,
			「入力」=○,
			「入力初期値」=「60」,
			「オプション指定」=○,
			「無効選択肢」=「設定しない」,
			「選択肢」={
				//{「^0$」,2,「無制限」,×}, // 正規表現, 選択リストの選択番号, 選択肢の名前, 入力可能
				{「「[0-9]{1,3}」」,2,「指定入力」,○},
				{「60」,3,「60 Hz」,×},
				{「95」,4,「95 Hz」,×},
				{「120」,5,「120 Hz」,×},
				{「144」,6,「144 Hz」,×},
				{「240」,7,「240 Hz」,×},
				{「360」,8,「360 Hz」,×} 
			}
		},
		「-forcenovsync」={
			「カテゴリー」=「グラフィック」,
			「名前」=「垂直同期(V-SYNC)を無効化」,
			「説明」=「垂直同期(V-SYNC)を強制的に無効化します。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=×,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「」,2,「垂直同期(V-SYNC)を無効化」,×}
			}
		},
		「+cl_fovScale」={
			「カテゴリー」=「グラフィック」,
			「名前」=「視野角(FOV)を変更」,
			「説明」=「視野角(FOV)を変更します。」,
			「編集可能」=○,
			「入力」=○,
			「入力初期値」=「1.275」,
			「オプション指定」=○,
			「無効選択肢」=「変更しない」,
			「選択肢」={
				{「「[0-9](\.[0-9][0-9]?[0-9]?)?」」,2,「変更する」,○} 
			}
		},
		「-limitvsconst」={
			「カテゴリー」=「グラフィック」,
			「名前」=「頂点シェーダー数を変更」,
			「説明」=「頂点シェーダー数を256に変更します。変更すると、パフォーマンス向上に繋がる可能性があります。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=×,
			「無効選択肢」=「変更しない」,
			「選択肢」={
				{「」,2,「頂点シェーダー数を変更する」,×}
			}
		},
		「+cl_ragdoll_collide」={
			「カテゴリー」=「グラフィック」,
			「名前」=「物理挙動変更」,
			「説明」=「死体などの物理挙動を変更します。変更すると、パフォーマンス向上に繋がる可能性があります。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=○,
			「無効選択肢」=「変更しない」,
			「選択肢」={
				{「^0$」,2,「有効」,×}
			}
		},
		「+building_cubemaps」={
			「カテゴリー」=「グラフィック」,
			「名前」=「解像度変更設定専用 | +building_cubemaps」,
			「説明」=「この引数は、解像度の変更が有効化されている時、自動的に有効になります。」,
			「編集可能」=×,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=○,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「^1$」,2,「」,×}
			}
		},
		
		////////// システム //////////
		「-preload」={
			「カテゴリー」=「システム」,
			「名前」=「起動時に必要なデータを優先的に読み込む」,
			「説明」=「ゲームの起動時に必要なデータを優先して読み込みます。
プレイ時のパフォーマンス向上に繋がる可能性がありますが、RAMの使用量が増加したり、読み込み時間が長くなる可能性があります。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=×,
			「無効選択肢」=「無効」,
			「選択肢」={
				{「」,2,「有効」,×}
			}
		},
		「+cl_forcepreload」={
			「カテゴリー」=「システム」,
			「名前」=「プレイ時に必要なデータを事前に読み込む」,
			「説明」=「プレイ時に必要なマップやサウンドなどのデータを事前に読み込みます。
プレイ時のパフォーマンス向上に繋がる可能性がありますが、RAMの使用量が増加したり、読み込み時間が長くなる可能性があります。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=○,
			「無効選択肢」=「無効」,
			「選択肢」={
				{「^1$」,2,「有効」,×}
			}
		},
		「+cl_showfps」={
			「カテゴリー」=「システム」,
			「名前」=「パフォーマンス情報のオーバーレイ表示を有効化」,
			「説明」=「FPSやサーバーに対してのPingなどのパフォーマンス情報のオーバーレイ表示を有効化します。[改行]この設定はゲーム内設定の[「]パフォーマンス表示[」]と同様の設定です。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=○,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「^4$」,2,「有効」,×}
			}
		},
		「+cl_showpos」={
			「カテゴリー」=「システム」,
			「名前」=「プレイヤー情報のオーバーレイ表示を有効化」,
			「説明」=「ユーザー名や位置座標、移動速度などの情報のオーバーレイ表示を有効化します。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=○,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「^1$」,2,「有効」,×}
			}
		},
		「+CrossPlay_user_optin」={
			「カテゴリー」=「システム」,
			「名前」=「クロスプレイを無効化」,
			「説明」=「クロスプレイを強制的に無効化します。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=○,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「^0$」,2,「クロスプレイを無効化する」,×}
			}
		},
		
		////////// CPU関連 //////////
		「+mat_queue_mode」={
			「カテゴリー」=「CPU」,
			「名前」=「スレッドモードを変更」,
			「説明」=「CPUのスレッドモードを変更します。設定によっては、パフォーマンス向上に繋がる可能性があります。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「2」,
			「オプション指定」=○,
			「無効選択肢」=「変更しない」,
			「選択肢」={
				{「^2$」,2,「<推奨> マルチ」,×},
				{「^1$」,3,「シングル (非同期)」,×},
				{「^0$」,4,「シングル (同期)」,×},
				{「-1」,5,「システム」,×},
				{「-2」,6,「レガシー」,×}
			}
		},
		「-high」={
			「カテゴリー」=「CPU」,
			「名前」=「優先度を[「]高[」]へ変更」,
			「説明」=「Apex Legends のCPU優先度を[「]高[」]へ変更します。
変更すると、パフォーマンス向上に繋がる可能性がありますが、
Apex Legends のCPU使用率が増加し、システムや他のアプリケーションが不安定になる可能性があります。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=×,
			「無効選択肢」=「無効」,
			「選択肢」={
				{「」,2,「CPU優先度を[「]高[」]へ変更する」,×}
			}
		},
		「-threads」={
			「カテゴリー」=「CPU」,
			「名前」=「スレッド数を変更」,
			「説明」=「Apex Legends が使用するCPUのスレッド数を変更します。
通常、Apex Legends は自動的にすべてのスレッドを使用するため、設定は不要です。
Apex Legends が使用するスレッド数を制限したい場合にこの設定を変更してください。」,
			「編集可能」=○,
			「入力」=○,
			「入力初期値」=「2」,
			「オプション指定」=○,
			「無効選択肢」=「変更しない」,
			「選択肢」={
				{「「[0-9]{1,3}」」,2,「変更する」,○}
			}
		},
		
		////////// 操作関連 //////////
		「+m_rawinput」={
			「カテゴリー」=「マウス/コントローラー」,
			「名前」=「ローインプットを有効化」,
			「説明」=「マウスのローインプットを有効化します。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「」,
			「オプション指定」=○,
			「無効選択肢」=「有効化しない」,
			「選択肢」={
				{「^1$」,2,「有効」,×}
			}
		},
		「-nomouse」={
			「カテゴリー」=「マウス/コントローラー」,
			「名前」=「マウス機能を無効化」,
			「説明」=「マウス機能を無効化します。ゲーム内でマウスを使った操作が行えなくなります。[改行]無効化すると、パフォーマンス向上に繋がる可能性があります。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=×,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「」,2,「マウス機能を無効化する」,×}
			}
		},
		「-nojoy」={
			「カテゴリー」=「マウス/コントローラー」,
			「名前」=「コントローラーのジョイスティック機能を無効化」,
			「説明」=「コントローラーのジョイスティック機能を無効化します。ゲーム内でジョイスティックを使った操作が行えなくなります。[改行]無効化すると、パフォーマンス向上に繋がる可能性があります。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=×,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「」,2,「スティック機能を無効化する」,×}
			}
		},
		「-noff」={
			「カテゴリー」=「マウス/コントローラー」,
			「名前」=「コントローラーの振動機能を無効化」,
			「説明」=「ゲーム内でのコントローラーの振動機能を無効化します。ゲーム内で振動機能が機能しなくなります。[改行]無効化すると、パフォーマンス向上に繋がる可能性があります。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=×,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「」,2,「振動機能を無効化する」,×}
			}
		},
		
		////////// Live API //////////
		「+cl_liveapi_enabled」={
			「カテゴリー」=「Live API」,
			「名前」=「Live API を有効化」,
			「説明」=「Live API を有効化します。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=○,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「^1$」,2,「有効」,×}
			}
		},
		「+cl_liveapi_allow_requests」={
			「カテゴリー」=「Live API」,
			「名前」=「受信したリクエストの処理と実行を許可」,
			「説明」=「受信したリクエストの処理と実行を許可します。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=○,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「^1$」,2,「有効」,×}
			}
		},
		「+cl_liveapi_pretty_print_log」={
			「カテゴリー」=「Live API」,
			「名前」=「JSON出力を整形」,
			「説明」=「JSON出力をより人間に読みやすいものに整形します。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=○,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「^1$」,2,「有効」,×}
			}
		},
		「+cl_liveapi_use_protobuf」={
			「カテゴリー」=「Live API」,
			「名前」=「シリアライズフォーマットとして protobuf を使用」,
			「説明」=「有効にすると、シリアライズフォーマットとして protobuf を使用します。[改行]無効にすると、シリアライズフォーマットとして JSON を使用します。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=○,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「^1$」,2,「有効」,×}
			}
		},
		「+cl_liveapi_ws_servers」={
			「カテゴリー」=「Live API」,
			「名前」=「WebSocket | サーバー一覧」,
			「説明」=「WebSocket サーバーを指定します。[改行]複数指定する場合は[「],[」]で区切ります。」,
			「編集可能」=○,
			「入力」=○,
			「入力初期値」=「"ws://127.0.0.1:7777"」,
			「オプション指定」=○,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「.*」,2,「有効」,○}
			}
		},
		「+cl_liveapi_ws_keepalive」={
			「カテゴリー」=「Live API」,
			「名前」=「WebSocket | Ping送信間隔」,
			「説明」=「接続された任意のサーバーにPingを送信する間隔を指定します。」,
			「編集可能」=○,
			「入力」=○,
			「入力初期値」=「30」,
			「オプション指定」=○,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「「[0-9]{1,3}」」,2,「指定」,○}
			}
		},
		「+cl_liveapi_ws_retry_count」={
			「カテゴリー」=「Live API」,
			「名前」=「WebSocket | 再試行回数」,
			「説明」=「接続不可とするまでの再試行回数を指定します。」,
			「編集可能」=○,
			「入力」=○,
			「入力初期値」=「5」,
			「オプション指定」=○,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「「[0-9]{1,3}」」,2,「有効」,○}
			}
		},
		「+cl_liveapi_ws_retry_time」={
			「カテゴリー」=「Live API」,
			「名前」=「WebSocket | 再試行時間」,
			「説明」=「再試行までの時間(秒)を指定します。」,
			「編集可能」=○,
			「入力」=○,
			「入力初期値」=「30」,
			「オプション指定」=○,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「「[0-9]{1,3}」」,2,「有効」,○}
			}
		},
		「+cl_liveapi_ws_timeout」={
			「カテゴリー」=「Live API」,
			「名前」=「WebSocket | タイムアウト時間」,
			「説明」=「タイムアウトまでの時間(秒)を指定します。」,
			「編集可能」=○,
			「入力」=○,
			「入力初期値」=「300」,
			「オプション指定」=○,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「「[0-9]{1,3}」」,2,「有効」,○}
			}
		}
	}
終わり

プロファイルとは
	
	+プロファイルデータ:辞書
	
	はじめの手順
		プロファイルデータ=プロファイル管理器の設定初期プロファイル(「v2」)を複製したもの
		プロファイルデータ(「Info」)(「Id」)=GUID値を生成したもの
		プロファイルデータ(「Info」)(「Name」)=「Profile_[プロファイルデータ(「Info」)(「Id」)]」
		
		// autoexec ファイルを作成
		/*もし「[アプリのコンフィグフォルダー]Profile\AutoExecute\autoexec_[プロファイルデータ(「Info」)(「Id」)].cfg」というファイルが存在しないなら
			「// Auto Execute Config (autoexec)[改行]// Generated by [アプリの名前][改行]」を「[アプリのコンフィグフォルダー]Profile\AutoExecute\autoexec_[プロファイルデータ(「Info」)(「Id」)].cfg」へ「UTF-8」で保存する
		もし終わり*/
	終わり
	
	自分を保存する手順
		プロファイルデータをJSON形式として書き出したものを「[アプリのコンフィグフォルダー]Profile\[ID].json」へ「UTF-8」で保存する
	終わり
	
	自分でコンフィグファイル生成する手順
		// autoexec ファイルを作成
		もし「[アプリのコンフィグフォルダー]Profile\AutoExecute\autoexec_[ID].cfg」というファイルが存在しないなら
			「// Auto Execute Config (autoexec)[改行]// Generated by [アプリの名前][改行]」を「[アプリのコンフィグフォルダー]Profile\AutoExecute\autoexec_[ID].cfg」へ「UTF-8」で保存する
		もし終わり
	終わり
	
	-設定ファイル名:文字列
	ファイル名という属性
		取得する手順
			設定ファイル名を返す
		終わり
		設定する手順
			設定ファイル名=設定値
		終わり
	終わり
	
	// セクション Info
	IDという属性
		取得する手順
			プロファイルデータ(「Info」)(「Id」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Info」)(「Id」)=設定値
		終わり
	終わり
	
	名前という属性
		取得する手順
			プロファイルデータ(「Info」)(「Name」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Info」)(「Name」)=設定値
		終わり
	終わり
	
	バージョンという属性
		取得する手順
			プロファイルデータ(「Info」)(「Version」)を返す
		終わり
	終わり
	
	// セクション Game
	ApexLegendsバイナリーパスという属性
		取得する手順
			プロファイルデータ(「Game」)(「Exe_Path」)(「R5」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Game」)(「Exe_Path」)(「R5」)=設定値
		終わり
	終わり
	
	ApexLegendsDX12バイナリーパスという属性
		取得する手順
			プロファイルデータ(「Game」)(「Exe_Path」)(「R5_DX12」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Game」)(「Exe_Path」)(「R5_DX12」)=設定値
		終わり
	終わり
	
	EACバイナリーパスという属性
		取得する手順
			プロファイルデータ(「Game」)(「Exe_Path」)(「EAC」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Game」)(「Exe_Path」)(「EAC」)=設定値
		終わり
	終わり
	
	バイナリーパス自動検出という属性
		取得する手順
			プロファイルデータ(「Game」)(「Exe_Path_Auto_Detection」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Game」)(「Exe_Path_Auto_Detection」)=設定値
		終わり
	終わり
	
	ApexLegendsプラットフォームという属性
		取得する手順
			プロファイルデータ(「Game」)(「Platform」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Game」)(「Platform」)=設定値
		終わり
	終わり
	
	EAappSteam経由起動という属性
		取得する手順
			プロファイルデータ(「Game」)(「Launch_EAapp_Via_Steam」)(「Enable」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Game」)(「Launch_EAapp_Via_Steam」)(「Enable」)=設定値
		終わり
	終わり
	
	EAappSteam経由起動AppIDという属性
		取得する手順
			プロファイルデータ(「Game」)(「Launch_EAapp_Via_Steam」)(「AppID」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Game」)(「Launch_EAapp_Via_Steam」)(「AppID」)=設定値
		終わり
	終わり
	
	カーソルロックという属性
		取得する手順
			プロファイルデータ(「Game」)(「CursorLocker」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Game」)(「CursorLocker」)=設定値
		終わり
	終わり
	
	起動引数という属性
		取得する手順
			プロファイルデータ(「Game」)(「Arguments」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Game」)(「Arguments」)=設定値
		終わり
	終わり
	
	// セクション Display
	ゲーム解像度変更という属性
		取得する手順
			プロファイルデータ(「Display」)(「Change_Game_Resolution」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Display」)(「Change_Game_Resolution」)=設定値
		終わり
	終わり
	
	ディスプレイ解像度変更という属性
		取得する手順
			プロファイルデータ(「Display」)(「Change_Display_Resolution」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Display」)(「Change_Display_Resolution」)=設定値
		終わり
	終わり
	
	ディスプレイスケーリングモードという属性
		取得する手順
			プロファイルデータ(「Display」)(「Scaling_Mode」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Display」)(「Scaling_Mode」)=設定値
		終わり
	終わり
	
	-解像度データ:サイズ
	ディスプレイ解像度という属性
		取得する手順
			解像度データ={プロファイルデータ(「Display」)(「Resolution」)(「Width」), プロファイルデータ(「Display」)(「Resolution」)(「Height」)}
			解像度データを返す
		終わり
		設定する手順
			解像度データ=設定値
		終わり
	終わり
	
	ディスプレイ解像度幅という属性
		取得する手順
			プロファイルデータ(「Display」)(「Resolution」)(「Width」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Display」)(「Resolution」)(「Width」)=設定値
		終わり
	終わり
	
	ディスプレイ解像度高さという属性
		取得する手順
			プロファイルデータ(「Display」)(「Resolution」)(「Height」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Display」)(「Resolution」)(「Height」)=設定値
		終わり
	終わり
	
	ディスプレイリフレッシュレートという属性
		取得する手順
			プロファイルデータ(「Display」)(「Refresh_Rate」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Display」)(「Refresh_Rate」)=設定値
		終わり
	終わり
	
	AltEnter自動押下という属性
		取得する手順
			プロファイルデータ(「Display」)(「Alt_Enter_Automatic_Press」)(「Enable」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Display」)(「Alt_Enter_Automatic_Press」)(「Enable」)=設定値
		終わり
	終わり
	
	AltEnter自動押下画像比較という属性
		取得する手順
			プロファイルデータ(「Display」)(「Alt_Enter_Automatic_Press」)(「Image_Matcher」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Display」)(「Alt_Enter_Automatic_Press」)(「Image_Matcher」)=設定値
		終わり
	終わり
	
	AltEnter自動押下待機時間という属性
		取得する手順
			プロファイルデータ(「Display」)(「Alt_Enter_Automatic_Press」)(「Wait_Second」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Display」)(「Alt_Enter_Automatic_Press」)(「Wait_Second」)=設定値
		終わり
	終わり
終わり