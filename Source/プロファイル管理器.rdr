プロファイル管理器とは
	単一種類
	
	+ファイル名正規表現:文字列=「「[\\\/:\*\?\"<>\|]」」
	
	初期プロファイルという属性
		取得する手順
			設定初期プロファイルを返す
		終わり
	終わり
	
	はじめの手順
		自分の一覧=空の辞書
		自分のプロファイルテーブル=空の辞書
		言語読み込む
	終わり
	
	言語読み込む手順
		// 起動引数のローカライズ
		起動引数カテゴリー一覧=[言語管理器で「LaunchOption.__Category.List」を取得したもの]を「,」で区切ったもの
		起動引数テーブルの見出しを【引数】へそれぞれ繰り返す
			// 起動引数テーブルのキーからドットを消したものを生成
			エスケープ引数=引数で「.」を「___dot___」へ置換したもの
			// 起動引数テーブルの値を言語データのものに置き換える
			起動引数テーブル(引数)(「カテゴリー」)=[言語管理器で「LaunchOption.[エスケープ引数].Category」を取得したもの]
			起動引数テーブル(引数)(「名前」)=[言語管理器で「LaunchOption.[エスケープ引数].Name」を取得したもの]
			起動引数テーブル(引数)(「説明」)=[言語管理器で「LaunchOption.[エスケープ引数].Desc」を取得したもの]
			起動引数テーブル(引数)(「無効選択肢」)=[言語管理器で「LaunchOption.[エスケープ引数].DisabledText」を取得したもの]
			もし起動引数テーブル(引数)に「拡張ボタン」が存在するなら起動引数テーブル(引数)(「拡張ボタン」)(1)=[言語管理器で「LaunchOption.[エスケープ引数].AdditionalButtonText」を取得したもの]
			【選択肢カウント:整数】=1
			[[言語管理器で「LaunchOption.[エスケープ引数].Choices」を取得したもの]を「,」で区切ったもの]を【選択肢】へそれぞれ繰り返す
				起動引数テーブル(引数)(「選択肢」)(選択肢カウント)(3)=選択肢
				選択肢カウント=選択肢カウント+1
			繰り返し終わり
			「[引数]: [起動引数テーブル(引数)(「選択肢」)]」をデバッグログへ出力する
		繰り返し終わり
	終わり
	
	+一覧:辞書
	+プロファイルテーブル:辞書
	自分でプロファイル読み込む手順
		【プロファイルID】
		【プロファイル名前】
		【プロファイル辞書:辞書】
		【プロファイル見出し】
		【プロファイル子見出し】
		【プロファイル子子見出し】
		
		【読み込み失敗ファイル一覧:配列】=空の配列
		
		【DX12引数置換リスト:配列】={}
		
		【プロファイルフォルダー:フォルダ情報】=フォルダ情報(「[アプリのコンフィグフォルダー]Profile」)を作ったもの
		
		自分の一覧=空の辞書
		
		[プロファイルフォルダーから「*.json」を列挙したもの]を【ファイルパス】へそれぞれ繰り返す
			例外監視
				「プロファイルチェック: [ファイルパスのファイル名だけ]」をデバッグログへ出力する
				
				// プロファイルをファイルから読み込む
				プロファイル辞書=[[ファイルパスから「UTF-8」で読み込んだもの]をJSON形式として読み取ったもの]
				
				もしプロファイル辞書に「Info」が存在するなら
					もし(プロファイル辞書(「Info」)に「Name」が存在する)かつ(プロファイル辞書(「Info」)に「Id」が存在する)かつ(プロファイル辞書(「Info」)に「Version」が存在する)なら
						// プロファイルの内容をチェック 存在しない項目があった場合は追加する
						設定初期プロファイル(「v2」)の見出しをプロファイル見出しへそれぞれ繰り返す
							//「- 確認: [プロファイル見出し]」をデバッグログへ出力する
							もしプロファイル辞書にプロファイル見出しが存在しないなら
								//「 - 設定: [設定初期プロファイル(「v2」)(プロファイル見出し)]」をデバッグログへ出力する
								プロファイル辞書(プロファイル見出し)=空の辞書
							もし終わり
							
							設定初期プロファイル(「v2」)(プロファイル見出し)の見出しをプロファイル子見出しへそれぞれ繰り返す
								//「  - 確認: [プロファイル子見出し]」をデバッグログへ出力する
								もしプロファイル辞書(プロファイル見出し)にプロファイル子見出しが存在しないなら
									//「   - 設定: [設定初期プロファイル(「v2」)(プロファイル見出し)(プロファイル子見出し)]」をデバッグログへ出力する
									プロファイル辞書(プロファイル見出し)(プロファイル子見出し)=設定初期プロファイル(「v2」)(プロファイル見出し)(プロファイル子見出し)
								もし終わり
								
								もし設定初期プロファイル(「v2」)(プロファイル見出し)(プロファイル子見出し)が辞書であるなら
									設定初期プロファイル(「v2」)(プロファイル見出し)(プロファイル子見出し)の見出しをプロファイル子子見出しへそれぞれ繰り返す
										//「  - 確認: [プロファイル子子見出し]」をデバッグログへ出力する
										もしプロファイル辞書(プロファイル見出し)(プロファイル子見出し)にプロファイル子子見出しが存在しないなら
											//「   - 設定: [設定初期プロファイル(「v2」)(プロファイル見出し)(プロファイル子見出し)(プロファイル子子見出し)]」をデバッグログへ出力する
											プロファイル辞書(プロファイル見出し)(プロファイル子見出し)(プロファイル子子見出し)=設定初期プロファイル(「v2」)(プロファイル見出し)(プロファイル子見出し)(プロファイル子子見出し)
										もし終わり
									繰り返し終わり
								もし終わり
								
							繰り返し終わり
							
						繰り返し終わり
						
						プロファイルID=ファイルパスの名前だけ
						プロファイル名前=プロファイル辞書(「Info」)(「Name」)
						
						// アカウントIDが無の場合はエラー回避のために0へ変更する
						もしプロファイル辞書(「Game」)(「Account」)(「Steam」)が「」ならプロファイル辞書(「Game」)(「Account」)(「Steam」)=「0」
						もしプロファイル辞書(「Game」)(「Account」)(「EAapp」)が「」ならプロファイル辞書(「Game」)(「Account」)(「EAapp」)=「0」
						
						// 総プレイ時間と最終プレイ日時が設定されていない場合は初期値を設定する
						もしプロファイル辞書(「Info」)に「Total_Play_Time_List」が存在しないならプロファイル辞書(「Info」)(「Total_Play_Time_List」)=空の辞書
						もしプロファイル辞書(「Info」)に「Last_Play_Date_And_Time_List」が存在しないならプロファイル辞書(「Info」)(「Last_Play_Date_And_Time_List」)=空の辞書
						もしプロファイル辞書(「Info」)(「Total_Play_Time_List」)が無ならプロファイル辞書(「Info」)(「Total_Play_Time_List」)=空の辞書
						もしプロファイル辞書(「Info」)(「Last_Play_Date_And_Time_List」)が無ならプロファイル辞書(「Info」)(「Last_Play_Date_And_Time_List」)=空の辞書
						
						// DirectX 12 がデフォルトになったので、以前の引数が存在する場合は削除する
						// 旧引数 (シーズン20以前)
						もし[プロファイル辞書(「Game」)(「Arguments」)]から「-eac_launcher_settings SettingsDX12.json」を探したものが1以上なら
							プロファイル辞書(「Game」)(「Arguments」)=[プロファイル辞書(「Game」)(「Arguments」)]で「-eac_launcher_settings SettingsDX12.json」を「」へ置換したもの
							DX12引数置換リストへ「[プロファイル辞書(「Info」)(「Name」)]」を追加する
						もし終わり
						// 新引数 (シーズン21以降)
						もし[プロファイル辞書(「Game」)(「Arguments」)]から「-anticheat_settings=SettingsDX12.json」を探したものが1以上なら
							プロファイル辞書(「Game」)(「Arguments」)=[プロファイル辞書(「Game」)(「Arguments」)]で「-anticheat_settings=SettingsDX12.json」を「」へ置換したもの
							DX12引数置換リストへ「[プロファイル辞書(「Info」)(「Name」)]」を追加する
						もし終わり
						
						自分のプロファイルテーブルへ[プロファイルID]として[プロファイルを作ったもの]を設定する
						自分のプロファイルテーブル(プロファイルID)のプロファイルデータ=プロファイル辞書
						
						// 名前順で並べ替える
						自分で1としてプロファイル並べ替えたもの
					もし終わり
				もし終わり
			発生した場合
				「プロファイル読み込み失敗: [ファイルパス]」を「エラー」としてデバッグログへ出力する
				「[エラーのメッセージ]」を「エラー」としてデバッグログへ出力する
				読み込み失敗ファイル一覧へ[ファイルパスのファイル名だけ]を追加する
				もし[プロファイルID]が無でないなら
					もし自分のプロファイルテーブルに[プロファイルID]が存在するなら
						自分のプロファイルテーブルから[プロファイルID]を消す
					もし終わり
				もし終わり
			監視終わり
		繰り返し終わり
		
		// 読み込みに失敗したプロファイルがある場合はダイアログを表示する
		もし読み込み失敗ファイル一覧の個数が1以上なら
			[言語管理器で「ProfileManagement.Dialog.FailedToLoadProfiles」を{
				「・[読み込み失敗ファイル一覧を「[改行]・」で繋げたもの]」
			}として取得したもの]を「警告アイコン」で表示する
		もし終わり

		// DirectX 12 で起動するための引数が置き換えられている場合はダイアログを表示する
		もしDX12引数置換リストの個数が1以上なら
			[言語管理器で「ProfileManagement.Dialog.ConvertedOldDX12Args」を{
				「・[DX12引数置換リストを「[改行]・」で繋げたもの]」
			}として取得したもの]を「情報アイコン」で表示する
		もし終わり
	終わり
	
	自分でプロファイル保存する手順
		// 読み込まれているすべてのプロファイルを書き出す
		プロファイルテーブルの見出しを【プロファイルID】へそれぞれ繰り返す
			例外監視
				プロファイルテーブル(プロファイルID)を保存する
			発生した場合
				「プロファイル[「][プロファイルデータの名前][」]([プロファイルデータのID]) の保存に失敗しました。[改行][改行][エラーのメッセージ]」を「中止アイコン」で表示する
			監視終わり
		繰り返し終わり
	終わり
	
	自分で【並び替え方法:整数】として〈【プロファイルテーブル:辞書】を〉プロファイル並べ替える手順
		【親プロファイルテーブル:真偽値】=(プロファイルテーブルが無)
		プロファイルテーブルが無ならプロファイルテーブル=自分のプロファイルテーブル
		
		【並び替え対象】=空の配列
		【並び替え対象見出し】=プロファイル管理器のプロファイルテーブルの見出し
		
		//【詳細:配列】
		【対象】
		【対象見出し:文字列】
		
		//「プロファイル並べ替え実行: [並び替え方法]」をデバッグログへ出力する
		
		並び替え方法について分岐
		その他の場合
			並び替え対象見出しを『
				それを{左,右}とみなす
				左=プロファイルテーブル(左)
				右=プロファイルテーブル(右)
				
				左=[左の名前]
				右=[右の名前]
				「- プロファイル名: [左]/[右]」をデバッグログへ出力する
				もし左>右なら
					1を返す
				他でもし左<右なら
					-1を返す
				そうでなければ
					0を返す
				もし終わり
			』で並べ替える
			
		2の場合
			並び替え対象見出しを『
				それを{左,右}とみなす
				左=プロファイルテーブル(左)
				右=プロファイルテーブル(右)
				
				左=[左の名前]
				右=[右の名前]
				「- プロファイル名: [左]/[右]」をデバッグログへ出力する
				もし左>右なら
					-1を返す
				他でもし左<右なら
					1を返す
				そうでなければ
					0を返す
				もし終わり
			』で並べ替える
			
		3の場合
			//「名前 (昇順)」としてプロファイル並べ替える
			並び替え対象見出しを『
				それを{左,右}とみなす
				左=プロファイルテーブル(左)
				右=プロファイルテーブル(右)
				
				もし左のゲーム解像度変更が×なら左=「0」
				そうでなければ左=「1_[左のディスプレイ解像度幅][左のディスプレイ解像度高さ]」
				もし右のゲーム解像度変更が×なら右=「0」
				そうでなければ右=「1_[右のディスプレイ解像度幅][右のディスプレイ解像度高さ]」
				「- プロファイル名: [左]/[右]」をデバッグログへ出力する
				もし左>右なら
					1を返す
				他でもし左<右なら
					-1を返す
				そうでなければ
					0を返す
				もし終わり
			』で並べ替える
			
		4の場合
			//「名前 (降順)」としてプロファイル並べ替える
			並び替え対象見出しを『
				それを{左,右}とみなす
				左=プロファイルテーブル(左)
				右=プロファイルテーブル(右)
				
				もし左のゲーム解像度変更が×なら左=「0」
				そうでなければ左=「1_[左のディスプレイ解像度幅][左のディスプレイ解像度高さ]」
				もし右のゲーム解像度変更が×なら右=「0」
				そうでなければ右=「1_[右のディスプレイ解像度幅][右のディスプレイ解像度高さ]」
				「- プロファイル名: [左]/[右]」をデバッグログへ出力する
				もし左>右なら
					-1を返す
				他でもし左<右なら
					1を返す
				そうでなければ
					0を返す
				もし終わり
			』で並べ替える
			
		5の場合
			並び替え対象見出しを『
				それを{左,右}とみなす
				左=プロファイルテーブル(左)
				右=プロファイルテーブル(右)
				
				左=[左のApexLegendsプラットフォーム]
				右=[右のApexLegendsプラットフォーム]
				「- プロファイル名: [左]/[右]」をデバッグログへ出力する
				もし左>右なら
					1を返す
				他でもし左<右なら
					-1を返す
				そうでなければ
					0を返す
				もし終わり
			』で並べ替える
			
		6の場合
			並び替え対象見出しを『
				それを{左,右}とみなす
				左=プロファイルテーブル(左)
				右=プロファイルテーブル(右)
				
				左=[左のApexLegendsプラットフォーム]
				右=[右のApexLegendsプラットフォーム]
				「- プロファイル名: [左]/[右]」をデバッグログへ出力する
				もし左>右なら
					-1を返す
				他でもし左<右なら
					1を返す
				そうでなければ
					0を返す
				もし終わり
			』で並べ替える
			
		7の場合 // 最終プレイ日時 近い順
			並び替え対象見出しを『
				それを{左,右}とみなす
				左=プロファイルテーブル(左)
				右=プロファイルテーブル(右)
				
				左の最終プレイ日時が無なら左=0
				そうでなければ左=[左の最終プレイ日時のUNIX時間]
				右の最終プレイ日時が無なら右=0
				そうでなければ右=[右の最終プレイ日時のUNIX時間]
				「- プロファイル名: [左]/[右]」をデバッグログへ出力する
				もし左>右なら
					-1を返す
				他でもし左<右なら
					1を返す
				そうでなければ
					0を返す
				もし終わり
			』で並べ替える
			
		8の場合 // 最終プレイ日時 遠い順
			並び替え対象見出しを『
				それを{左,右}とみなす
				左=プロファイルテーブル(左)
				右=プロファイルテーブル(右)
				
				左の最終プレイ日時が無なら左=0
				そうでなければ左=[左の最終プレイ日時のUNIX時間]
				右の最終プレイ日時が無なら右=0
				そうでなければ右=[右の最終プレイ日時のUNIX時間]
				「- プロファイル名: [左]/[右]」をデバッグログへ出力する
				もし左>右なら
					1を返す
				他でもし左<右なら
					-1を返す
				そうでなければ
					0を返す
				もし終わり
			』で並べ替える
			
		9の場合 // 総プレイ時間 短い順
			並び替え対象見出しを『
				それを{左,右}とみなす
				左=プロファイルテーブル(左)
				右=プロファイルテーブル(右)
				
				左の総プレイ時間が無なら左=0
				そうでなければ左=[左の総プレイ時間の合計秒数]
				右の総プレイ時間が無なら右=0
				そうでなければ右=[右の総プレイ時間の合計秒数]
				「- プロファイル名: [左]/[右]」をデバッグログへ出力する
				もし左>右なら
					1を返す
				他でもし左<右なら
					-1を返す
				そうでなければ
					0を返す
				もし終わり
			』で並べ替える
			
		10の場合 // 総プレイ時間 長い順
			並び替え対象見出しを『
				それを{左,右}とみなす
				左=プロファイルテーブル(左)
				右=プロファイルテーブル(右)
				
				左の総プレイ時間が無なら左=0
				そうでなければ左=[左の総プレイ時間の合計秒数]
				右の総プレイ時間が無なら右=0
				そうでなければ右=[右の総プレイ時間の合計秒数]
				「- プロファイル名: [左]/[右]」をデバッグログへ出力する
				もし左>右なら
					-1を返す
				他でもし左<右なら
					1を返す
				そうでなければ
					0を返す
				もし終わり
			』で並べ替える
			
		分岐終わり
		
		【並び替え辞書:辞書】=空の辞書
		並び替え対象見出しを対象見出しへそれぞれ繰り返す
			並び替え辞書(対象見出し)=プロファイルテーブル(対象見出し)
		繰り返し終わり

		親プロファイルテーブルなら
			自分のプロファイルテーブル=並び替え辞書
			
		そうでなければ
			並び替え辞書を返す
			
		そして
	終わり
	
	自分で【ID:文字列】としてプロファイルショートカット作成する手順:真偽値
		もしIDが無なら手順から抜け出す
		
		例外監視
			メイン画面へフォーカスする
			もし[言語管理器で「ProfileManagement.Shortcut.ConfirmCreate」を{[自分のプロファイルテーブル(ID)の名前]}として取得したもの]を「情報アイコン」にして質問したものが「はい」でないなら手順から抜け出す
			
			【ショートカットファイル名】=「[正規表現で[自分のプロファイルテーブル(ID)の名前]をファイル名正規表現から「-」へ置換したもの]」
			ショートカットファイルとして「[プログラムのフォルダ][プログラムのファイル名]」を「/Play "[ID]"」で「[デスクトップ]Apex Legends ([ショートカットファイル名]).lnk」へ作成する
			
			[言語管理器で「ProfileManagement.Shortcut.Created」を{[自分のプロファイルテーブル(ID)の名前]}として取得したもの]を「情報アイコン」で表示する
			
			○を返す
		発生した場合
			エラーのメッセージを「エラー」としてデバッグログへ出力する
			[言語管理器で「ProfileManagement.Shortcut.CannotCreate」を{[エラーのメッセージ]}として取得したもの]を「警告アイコン」で表示する
			×を返す
		監視終わり
	終わり
	
	自分で【名前:文字列】としてプロファイル新規作成する手順:プロファイル
		もし名前が無なら手順から抜け出す
		
		【新規プロファイル:プロファイル】=プロファイルを作ったもの
		【プロファイルID】=新規プロファイルのID
		自分のプロファイルテーブルに[プロファイルID]として[新規プロファイル]を設定する
		自分のプロファイルテーブル(プロファイルID)の名前=名前
		自分のプロファイルテーブル(プロファイルID)を保存する
		
		// プロファイルをファイルから読み込み直してチェックする
		自分でプロファイル読み込む
		
		「名前 (昇順)」としてプロファイル並べ替える
		
		自分のプロファイルテーブル(プロファイルID)を返す
	終わり
	
	自分で【ID:文字列】を【新規名称:文字列】へプロファイル名称変更する手順:真偽値
		もしIDが無なら手順から抜け出す
		
		メイン画面へフォーカスする
		
		もし自分のプロファイルテーブルにIDが存在するなら
			自分のプロファイルテーブル(ID)の名前=新規名称
			
		そうでなければ
			[言語管理器で「ProfileManagement.General.NotFound」を{[ID]}として取得したもの]を「警告アイコン」で表示する
			×を返す
			
		もし終わり
		
		「名前 (昇順)」としてプロファイル並べ替える
		
		○を返す
	終わり
	
	自分で【ID:文字列】をプロファイル削除する手順:真偽値
		もしIDが無なら手順から抜け出す
		
		メイン画面へフォーカスする
		
		もし自分のプロファイルテーブルにIDが存在しないなら
			[言語管理器で「ProfileManagement.General.NotFound」を{[ID]}として取得したもの]を「警告アイコン」で表示する
			×を返す
		もし終わり
		
		もし[言語管理器で「ProfileManagement.Delete.ConfirmDelete」を{[自分のプロファイルテーブル(ID)の名前]}として取得したもの]を「警告アイコン」にして質問したものが「はい」でないなら手順から抜け出す
		
		// プロファイルがDefaultの場合は変更をキャンセルする
		もしIDが「Default」なら
			[言語管理器で「ProfileManagement.Delete.CannotDelete」を{[自分のプロファイルテーブル(ID)の名前]}として取得したもの]を「中止アイコン」で表示する
			×を返す
		もし終わり
		
		自分のプロファイルテーブルからIDを削除する
		// ファイルが存在する場合はファイルを削除する
		もし「[アプリのコンフィグフォルダー]Profile\[ID].json」というファイルが存在するなら「[アプリのコンフィグフォルダー]Profile\[ID].json」を削除する
		// autoexec ファイルが存在する場合は削除する
		もし「[アプリのコンフィグフォルダー]Profile\AutoExecute\autoexec_[ID].cfg」というファイルが存在するなら「[アプリのコンフィグフォルダー]Profile\AutoExecute\autoexec_[ID].cfg」を削除する
		
		「名前 (昇順)」としてプロファイル並べ替える
		
		○を返す
	終わり
	
	// データ
	+プロファイル名正規表現:文字列=「「[\\\/:\*\?\"<>\|]」」
	
	+設定初期プロファイル:辞書={
		「v1」={
			「Apex_Legends」={
				「Platform」=「Steam」,
				「BinaryPath」=「」,
				「BinaryPath_AutoDetection」=○,
				「EACBinaryPath」=「」
			},
			「Change_Display_Resolution」={
				「Enable」=×,
				「Change_System_Resolution」=×,
				「Display_Scaling_Mode」=0,
				「ResolutionWidth」=「1920」,
				「ResolutionHeight」=「1080」,
				「Refresh_Rate」=「60」,
				「Alt_Enter_Automatic_Press」=×,
				「Alt_Enter_Automatic_Press_Wait_Second」=「20」
			},
			「Command_Line_Arguments」={
				「Value」=「」
			}
		},
		「v2」={
			「Info」={
				「Name」=「」,
				「Id」=「」,
				「Version」=「2」,
				「Total_Play_Time_List」=無,
				「Last_Play_Date_And_Time_List」=無
			},
			「Game」={
				「Exe_Path」={
					「R5」=「」,
					「R5_DX12」=「」,
					「EAC」=「」
				},
				「Exe_Path_Auto_Detection」=○,
				「Platform」=「Steam」, // Steam,EA app
				「Account」={
					「Steam」=「0」,
					「EAapp」=「0」
				},
				「Launch_EAapp_Via_Steam」={
					「Enable」=×,
					「AppID」=「」
				},
				「CursorLocker」=○,
				「Arguments」=「」,
				「Config_File」={
					「Type」=2, // 読み込むコンフィグファイル 1=共通 2=プロファイル固有
					「Read_Only」=×
				},
				「Profile_Config_File」={
					「Type」=2,
					「Read_Only」=×
				},
				「Video_Config_File」={
					「Type」=2,
					「Read_Only」=×
				}
			},
			「Display」={
				「Change_Game_Resolution」=×,
				「Change_Display_Resolution」=×,
				「Scaling_Mode」=1,
				「Resolution」={
					「Width」=1920,
					「Height」=1080
				},
				「Refresh_Rate」=60,
				「Alt_Enter_Automatic_Press」={
					「Enable」=×,
					「Wait_Second」=60,
					「Image_Matcher」=×
				}
			}
		}
	}
	
	-プロファイル変換テーブル:辞書={
		「v1_v2」={
			「Apex_Legends」={
				「Platform」=「Game/Platform」,
				「BinaryPath」=「Game/Exe_Path/R5」,
				「BinaryPath_AutoDetection」=「Game/Exe_Path/R5_DX12」,
				「EACBinaryPath」=「Game/Exe_Path/EAC」
			},
			「Change_Display_Resolution」={
				「Enable」=「Display/Change_Game_Resolution」,
				「Change_System_Resolution」=「Display/Change_Display_Resolution」,
				「Display_Scaling_Mode」=「Display/Scaling_Mode」,
				「ResolutionWidth」=「Display/Resolution/Width」,
				「ResolutionHeight」=「Display/Resolution/Height」,
				「Refresh_Rate」=「Display/Refresh_Rate」,
				「Alt_Enter_Automatic_Press」=「Display/Alt_Enter_Automatic_Press/Enable」,
				「Alt_Enter_Automatic_Press_Wait_Second」=「Display/Alt_Enter_Automatic_Press/Wait_Second」,
				「Alt_Enter_Automatic_Press_Use_Image_Matcher」=「Display/Alt_Enter_Automatic_Press/Image_Matcher」
			},
			「Command_Line_Arguments」={
				「Value」=「Game/Arguments」
			}
		}
	}
	
	+起動引数カテゴリー一覧:配列={「コンフィグ」,「全般」,「グラフィック」,「システム」,「CPU」,「マウス/コントローラー」,「Live API」}
	+起動引数テーブル:辞書={
		////////// コンフィグ //////////
		「+exec」={
			「カテゴリー」=「コンフィグ」,
			「名前」=「autoexec を読み込む」,
			「説明」=「ゲームの起動時に autoexec ファイルを読み込んでコンフィグを適用します。[改行]autoexec は[「]コンフィグ[」]タブから編集できます。」,
			「編集可能」=○,
			「入力」=○,
			「入力初期値」=「"autoexec.cfg"」,
			「オプション指定」=○,
			「無効選択肢」=「無効」,
			「選択肢」={
				{「」,2,「プロファイル」,×},
				{「^".*.cfg"$」,3,「指定」,○}
			}
		},
		
		////////// 全般 //////////
		「-novid」={
			「カテゴリー」=「」,
			「名前」=「スプラッシュムービーを無効化」,
			「説明」=「EA特有の爆音スプラッシュムービーを無効化して、起動時間の短縮、及び鼓膜の破壊を防止します。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=×,
			「無効選択肢」=「無効化しない (スプラッシュムービーを再生する)」,
			「選択肢」={
				{「」,2,「スプラッシュムービーを再生しない」,×}
			}
		},
		
		////////// グラフィック //////////
		「-anticheat_settings=SettingsDX11.json」={
			「カテゴリー」=「グラフィック」,
			「名前」=「DirectX 11 を有効化」,
			「説明」=「DirectX 11 でゲームを起動します。」,
			「拡張ボタン」={「DirectX 12/11 に関する詳しい情報は (Reddit)」,「「「https://www.reddit.com/r/apexlegends/comments/1gv3ing/dev_team_update_directx_12/」を「標準」で開く」」},
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「」,
			「オプション指定」=×,
			「無効選択肢」=「無効」,
			「選択肢」={
				{「」,2,「有効」,×}
			}
		},
		「-fullscreen」={
			「カテゴリー」=「グラフィック」,
			「名前」=「フルスクリーン」,
			「説明」=「ウィンドウをフルスクリーンにした状態でゲームを起動します。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「」,
			「オプション指定」=×,
			「無効選択肢」=「無効」,
			「選択肢」={
				{「」,2,「有効」,×}
			}
		},
		「+fps_max」={
			「カテゴリー」=「グラフィック」,
			「名前」=「FPS上限」,
			「説明」=「FPSの上限値を設定します。」,
			「編集可能」=○,
			「入力」=○,
			「入力初期値」=「60」,
			「オプション指定」=○,
			「無効選択肢」=「設定しない」,
			「選択肢」={
				{「^0$」,2,「無制限」,×}, // 正規表現, 選択リストの選択番号, 選択肢の名前, 入力可能
				{「「[0-9]{1,3}」」,3,「指定入力」,○},
				{「60」,4,「60 FPS」,×},
				{「95」,5,「95 FPS」,×},
				{「120」,6,「120 FPS」,×},
				{「144」,7,「144 FPS」,×},
				{「240」,8,「240 FPS」,×},
				{「360」,9,「360 FPS」,×} 
			}
		},
		「-refresh」={
			「カテゴリー」=「グラフィック」,
			「名前」=「リフレッシュレート上限」,
			「説明」=「リフレッシュレートの上限値を設定します。」,
			「編集可能」=○,
			「入力」=○,
			「入力初期値」=「60」,
			「オプション指定」=○,
			「無効選択肢」=「設定しない」,
			「選択肢」={
				//{「^0$」,2,「無制限」,×}, // 正規表現, 選択リストの選択番号, 選択肢の名前, 入力可能
				{「「[0-9]{1,3}」」,2,「指定入力」,○},
				{「60」,3,「60 Hz」,×},
				{「95」,4,「95 Hz」,×},
				{「120」,5,「120 Hz」,×},
				{「144」,6,「144 Hz」,×},
				{「240」,7,「240 Hz」,×},
				{「360」,8,「360 Hz」,×} 
			}
		},
		「-forcenovsync」={
			「カテゴリー」=「グラフィック」,
			「名前」=「垂直同期(V-SYNC)を無効化」,
			「説明」=「垂直同期(V-SYNC)を強制的に無効化します。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=×,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「」,2,「垂直同期(V-SYNC)を無効化」,×}
			}
		},
		「+cl_fovScale」={
			「カテゴリー」=「グラフィック」,
			「名前」=「視野角(FOV)を変更」,
			「説明」=「視野角(FOV)を変更します。」,
			「編集可能」=○,
			「入力」=○,
			「入力初期値」=「1.275」,
			「オプション指定」=○,
			「無効選択肢」=「変更しない」,
			「選択肢」={
				{「「[0-9](\.[0-9][0-9]?[0-9]?)?」」,2,「変更する」,○} 
			}
		},
		「-limitvsconst」={
			「カテゴリー」=「グラフィック」,
			「名前」=「頂点シェーダー数を変更」,
			「説明」=「頂点シェーダー数を256に変更します。変更すると、パフォーマンス向上に繋がる可能性があります。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=×,
			「無効選択肢」=「変更しない」,
			「選択肢」={
				{「」,2,「頂点シェーダー数を変更する」,×}
			}
		},
		「+cl_ragdoll_collide」={
			「カテゴリー」=「グラフィック」,
			「名前」=「物理挙動変更」,
			「説明」=「死体などの物理挙動を変更します。変更すると、パフォーマンス向上に繋がる可能性があります。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=○,
			「無効選択肢」=「変更しない」,
			「選択肢」={
				{「^0$」,2,「有効」,×}
			}
		},
		「+building_cubemaps」={
			「カテゴリー」=「グラフィック」,
			「名前」=「解像度変更設定専用 | +building_cubemaps」,
			「説明」=「この引数は、解像度の変更が有効化されている時、自動的に有効になります。」,
			「編集可能」=×,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=○,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「^1$」,2,「」,×}
			}
		},
		
		////////// システム //////////
		「-preload」={
			「カテゴリー」=「システム」,
			「名前」=「起動時に必要なデータを優先的に読み込む」,
			「説明」=「ゲームの起動時に必要なデータを優先して読み込みます。
プレイ時のパフォーマンス向上に繋がる可能性がありますが、RAMの使用量が増加したり、読み込み時間が長くなる可能性があります。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=×,
			「無効選択肢」=「無効」,
			「選択肢」={
				{「」,2,「有効」,×}
			}
		},
		「+cl_forcepreload」={
			「カテゴリー」=「システム」,
			「名前」=「プレイ時に必要なデータを事前に読み込む」,
			「説明」=「プレイ時に必要なマップやサウンドなどのデータを事前に読み込みます。
プレイ時のパフォーマンス向上に繋がる可能性がありますが、RAMの使用量が増加したり、読み込み時間が長くなる可能性があります。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=○,
			「無効選択肢」=「無効」,
			「選択肢」={
				{「^1$」,2,「有効」,×}
			}
		},
		「+cl_showfps」={
			「カテゴリー」=「システム」,
			「名前」=「パフォーマンス情報のオーバーレイ表示を有効化」,
			「説明」=「FPSやサーバーに対してのPingなどのパフォーマンス情報のオーバーレイ表示を有効化します。[改行]この設定はゲーム内設定の[「]パフォーマンス表示[」]と同様の設定です。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=○,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「^4$」,2,「有効」,×}
			}
		},
		「+cl_showpos」={
			「カテゴリー」=「システム」,
			「名前」=「プレイヤー情報のオーバーレイ表示を有効化」,
			「説明」=「ユーザー名や位置座標、移動速度などの情報のオーバーレイ表示を有効化します。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=○,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「^1$」,2,「有効」,×}
			}
		},
		「+CrossPlay_user_optin」={
			「カテゴリー」=「システム」,
			「名前」=「クロスプレイを無効化」,
			「説明」=「クロスプレイを強制的に無効化します。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=○,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「^0$」,2,「クロスプレイを無効化する」,×}
			}
		},
		
		////////// CPU関連 //////////
		「+mat_queue_mode」={
			「カテゴリー」=「CPU」,
			「名前」=「スレッドモードを変更」,
			「説明」=「CPUのスレッドモードを変更します。設定によっては、パフォーマンス向上に繋がる可能性があります。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「2」,
			「オプション指定」=○,
			「無効選択肢」=「変更しない」,
			「選択肢」={
				{「^2$」,2,「<推奨> マルチ」,×},
				{「^1$」,3,「シングル (非同期)」,×},
				{「^0$」,4,「シングル (同期)」,×},
				{「-1」,5,「システム」,×},
				{「-2」,6,「レガシー」,×}
			}
		},
		「-high」={
			「カテゴリー」=「CPU」,
			「名前」=「優先度を[「]高[」]へ変更」,
			「説明」=「Apex Legends のCPU優先度を[「]高[」]へ変更します。
変更すると、パフォーマンス向上に繋がる可能性がありますが、
Apex Legends のCPU使用率が増加し、システムや他のアプリケーションが不安定になる可能性があります。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=×,
			「無効選択肢」=「無効」,
			「選択肢」={
				{「」,2,「CPU優先度を[「]高[」]へ変更する」,×}
			}
		},
		「-threads」={
			「カテゴリー」=「CPU」,
			「名前」=「スレッド数を変更」,
			「説明」=「Apex Legends が使用するCPUのスレッド数を変更します。
通常、Apex Legends は自動的にすべてのスレッドを使用するため、設定は不要です。
Apex Legends が使用するスレッド数を制限したい場合にこの設定を変更してください。」,
			「編集可能」=○,
			「入力」=○,
			「入力初期値」=「2」,
			「オプション指定」=○,
			「無効選択肢」=「変更しない」,
			「選択肢」={
				{「「[0-9]{1,3}」」,2,「変更する」,○}
			}
		},
		
		////////// 操作関連 //////////
		「+m_rawinput」={
			「カテゴリー」=「マウス/コントローラー」,
			「名前」=「ローインプットを有効化」,
			「説明」=「マウスのローインプットを有効化します。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「」,
			「オプション指定」=○,
			「無効選択肢」=「有効化しない」,
			「選択肢」={
				{「^1$」,2,「有効」,×}
			}
		},
		「-nomouse」={
			「カテゴリー」=「マウス/コントローラー」,
			「名前」=「マウス機能を無効化」,
			「説明」=「マウス機能を無効化します。ゲーム内でマウスを使った操作が行えなくなります。[改行]無効化すると、パフォーマンス向上に繋がる可能性があります。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=×,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「」,2,「マウス機能を無効化する」,×}
			}
		},
		「-nojoy」={
			「カテゴリー」=「マウス/コントローラー」,
			「名前」=「コントローラーのジョイスティック機能を無効化」,
			「説明」=「コントローラーのジョイスティック機能を無効化します。ゲーム内でジョイスティックを使った操作が行えなくなります。[改行]無効化すると、パフォーマンス向上に繋がる可能性があります。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=×,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「」,2,「スティック機能を無効化する」,×}
			}
		},
		「-noff」={
			「カテゴリー」=「マウス/コントローラー」,
			「名前」=「コントローラーの振動機能を無効化」,
			「説明」=「ゲーム内でのコントローラーの振動機能を無効化します。ゲーム内で振動機能が機能しなくなります。[改行]無効化すると、パフォーマンス向上に繋がる可能性があります。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=×,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「」,2,「振動機能を無効化する」,×}
			}
		},
		
		////////// Live API //////////
		「+cl_liveapi_enabled」={
			「カテゴリー」=「Live API」,
			「名前」=「Live API を有効化」,
			「説明」=「Live API を有効化します。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=○,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「^1$」,2,「有効」,×}
			}
		},
		「+cl_liveapi_allow_requests」={
			「カテゴリー」=「Live API」,
			「名前」=「受信したリクエストの処理と実行を許可」,
			「説明」=「受信したリクエストの処理と実行を許可します。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=○,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「^1$」,2,「有効」,×}
			}
		},
		「+cl_liveapi_pretty_print_log」={
			「カテゴリー」=「Live API」,
			「名前」=「JSON出力を整形」,
			「説明」=「JSON出力をより人間に読みやすいものに整形します。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=○,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「^1$」,2,「有効」,×}
			}
		},
		「+cl_liveapi_use_protobuf」={
			「カテゴリー」=「Live API」,
			「名前」=「シリアライズフォーマットとして protobuf を使用」,
			「説明」=「有効にすると、シリアライズフォーマットとして protobuf を使用します。[改行]無効にすると、シリアライズフォーマットとして JSON を使用します。」,
			「編集可能」=○,
			「入力」=×,
			「入力初期値」=「0」,
			「オプション指定」=○,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「^1$」,2,「有効」,×}
			}
		},
		「+cl_liveapi_ws_servers」={
			「カテゴリー」=「Live API」,
			「名前」=「WebSocket | サーバー一覧」,
			「説明」=「WebSocket サーバーを指定します。[改行]複数指定する場合は[「],[」]で区切ります。」,
			「編集可能」=○,
			「入力」=○,
			「入力初期値」=「"ws://127.0.0.1:7777"」,
			「オプション指定」=○,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「.*」,2,「有効」,○}
			}
		},
		「+cl_liveapi_ws_keepalive」={
			「カテゴリー」=「Live API」,
			「名前」=「WebSocket | Ping送信間隔」,
			「説明」=「接続された任意のサーバーにPingを送信する間隔を指定します。」,
			「編集可能」=○,
			「入力」=○,
			「入力初期値」=「30」,
			「オプション指定」=○,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「「[0-9]{1,3}」」,2,「指定」,○}
			}
		},
		「+cl_liveapi_ws_retry_count」={
			「カテゴリー」=「Live API」,
			「名前」=「WebSocket | 再試行回数」,
			「説明」=「接続不可とするまでの再試行回数を指定します。」,
			「編集可能」=○,
			「入力」=○,
			「入力初期値」=「5」,
			「オプション指定」=○,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「「[0-9]{1,3}」」,2,「有効」,○}
			}
		},
		「+cl_liveapi_ws_retry_time」={
			「カテゴリー」=「Live API」,
			「名前」=「WebSocket | 再試行時間」,
			「説明」=「再試行までの時間(秒)を指定します。」,
			「編集可能」=○,
			「入力」=○,
			「入力初期値」=「30」,
			「オプション指定」=○,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「「[0-9]{1,3}」」,2,「有効」,○}
			}
		},
		「+cl_liveapi_ws_timeout」={
			「カテゴリー」=「Live API」,
			「名前」=「WebSocket | タイムアウト時間」,
			「説明」=「タイムアウトまでの時間(秒)を指定します。」,
			「編集可能」=○,
			「入力」=○,
			「入力初期値」=「300」,
			「オプション指定」=○,
			「無効選択肢」=「無効化しない」,
			「選択肢」={
				{「「[0-9]{1,3}」」,2,「有効」,○}
			}
		}
	}
終わり

プロファイルとは
	
	+プロファイルデータ:辞書
	
	はじめの手順
		プロファイルデータ=プロファイル管理器の設定初期プロファイル(「v2」)を複製したもの
		プロファイルデータ(「Info」)(「Id」)=GUID値を生成したもの
		プロファイルデータ(「Info」)(「Name」)=「Profile_[プロファイルデータ(「Info」)(「Id」)]」
		
		バイナリーパス自動検出実行する
		
		// autoexec ファイルを作成
		/*もし「[アプリのコンフィグフォルダー]Profile\AutoExecute\autoexec_[プロファイルデータ(「Info」)(「Id」)].cfg」というファイルが存在しないなら
			「// Auto Execute Config (autoexec)[改行]// Generated by [アプリの名前][改行]」を「[アプリのコンフィグフォルダー]Profile\AutoExecute\autoexec_[プロファイルデータ(「Info」)(「Id」)].cfg」へ「UTF-8」で保存する
		もし終わり*/
	終わり
	
	自分を保存する手順
		プロファイルデータをJSON形式として書き出したものを「[アプリのコンフィグフォルダー]Profile\[ID].json」へ「UTF-8」で保存する
	終わり
	
	自分でコンフィグファイル生成する手順
		// autoexec ファイルを作成
		もし「[アプリのコンフィグフォルダー]Profile\AutoExecute\autoexec_[ID].cfg」が存在しないなら
			「// Auto Execute Config (autoexec)[改行]// Generated by [アプリの名前][改行]」を「[アプリのコンフィグフォルダー]Profile\AutoExecute\autoexec_[ID].cfg」へ「UTF-8」で保存する
		もし終わり
	終わり
	
	自分でバイナリーパス自動検出実行する手順
		【パス】=ApexLegends:ApexLegendsプラットフォームでインストール先取得したもの
		// インストール先が取得できなかった場合は、自動検出を無効にして、インストール先を空欄にする
		もしパスが無なら
			ApexLegendsバイナリーパス=「」
			ApexLegendsDX12バイナリーパス=「」
			//EACバイナリーパス=「」
			
		// 取得できた場合はパスを設定する
		そうでなければ
			ApexLegendsバイナリーパス=「[パス]r5apex.exe」
			ApexLegendsDX12バイナリーパス=「[パス]r5apex_dx12.exe」
			EACバイナリーパス=「[パス]r5apex.exe」
			
		もし終わり
	終わり
	
	コンフィグファイルパスという属性
		取得する手順
			コンフィグ指定について分岐
			「1」の場合
				「[アプリのコンフィグフォルダー]Backup\Config\settings.cfg」を返す
			「2」の場合
				「[アプリのコンフィグフォルダー]Profile\Config\[ID]_[ApexLegendsプラットフォームで「 」を無に置換したもの].cfg」を返す
			分岐終わり
		終わり
	終わり
	
	プロファイルコンフィグファイルパスという属性
		取得する手順
			プロファイルコンフィグ指定について分岐
			「1」の場合
				「[アプリのコンフィグフォルダー]Backup\ProfileConfig\profile.cfg」を返す
			「2」の場合
				「[アプリのコンフィグフォルダー]Profile\ProfileConfig\[ID]_[ApexLegendsプラットフォームで「 」を無に置換したもの].cfg」を返す
			分岐終わり
		終わり
	終わり
	
	ビデオコンフィグファイルパスという属性
		取得する手順
			ビデオコンフィグ指定について分岐
			「1」の場合
				「[アプリのコンフィグフォルダー]Backup\VideoConfig\videoconfig.txt」を返す
			「2」の場合
				「[アプリのコンフィグフォルダー]Profile\VideoConfig\[ID]_[ApexLegendsプラットフォームで「 」を無に置換したもの].txt」を返す
			分岐終わり
		終わり
	終わり
	
	-設定ファイル名:文字列
	ファイル名という属性
		取得する手順
			設定ファイル名を返す
		終わり
		設定する手順
			設定ファイル名=設定値
		終わり
	終わり
	
	// セクション Info
	IDという属性
		取得する手順
			プロファイルデータ(「Info」)(「Id」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Info」)(「Id」)=設定値
		終わり
	終わり
	
	名前という属性
		取得する手順
			プロファイルデータ(「Info」)(「Name」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Info」)(「Name」)=設定値
		終わり
	終わり
	
	バージョンという属性
		取得する手順
			プロファイルデータ(「Info」)(「Version」)を返す
		終わり
	終わり
	
	総プレイ時間一覧という属性
		取得する手順
			プロファイルデータ(「Info」)(「Total_Play_Time_List」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Info」)(「Total_Play_Time_List」)=設定値
		終わり
	終わり
	
	総プレイ時間という属性
		取得する手順
			【値】=[プロファイルデータ(「Info」)(「Total_Play_Time_List」)(「[ApexLegendsプラットフォーム]」)]
			もし値が無なら値を返す
			
			// 日時期間形式に変換して返す
			【時間:日時期間形式】=日時期間形式を作ったもの
			時間へ[値]秒足す
			時間を返す
		終わり
		設定する手順
			プロファイルデータ(「Info」)(「Total_Play_Time_List」)(「[ApexLegendsプラットフォーム]」)=設定値 // 秒
		終わり
	終わり
	
	最終プレイ日時一覧という属性
		取得する手順
			プロファイルデータ(「Info」)(「Last_Play_Date_And_Time_List」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Info」)(「Last_Play_Date_And_Time_List」)=設定値
		終わり
	終わり
	
	最終プレイ日時という属性
		取得する手順
			【値】=[プロファイルデータ(「Info」)(「Last_Play_Date_And_Time_List」)(「[ApexLegendsプラットフォーム]」)]
			もし値が無なら値を返す
			
			// UNIX時間を日時形式に変換して返す
			【日時:日時形式】=[「1970/1/1」を日時形式化したもの]から[値]秒後
			// タイムゾーンを取得して日時表記を調整する
			日時=日時から[ローカルタイムゾーン時差取得したものの合計秒数]秒後
			日時を返す
		終わり
		設定する手順
			プロファイルデータ(「Info」)(「Last_Play_Date_And_Time_List」)(「[ApexLegendsプラットフォーム]」)=設定値 // UNIX時間
		終わり
	終わり
	
	// セクション Game
	ApexLegendsバイナリーパスという属性
		取得する手順
			プロファイルデータ(「Game」)(「Exe_Path」)(「R5」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Game」)(「Exe_Path」)(「R5」)=設定値
		終わり
	終わり
	
	ApexLegendsDX12バイナリーパスという属性
		取得する手順
			プロファイルデータ(「Game」)(「Exe_Path」)(「R5_DX12」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Game」)(「Exe_Path」)(「R5_DX12」)=設定値
		終わり
	終わり
	
	EACバイナリーパスという属性
		取得する手順
			プロファイルデータ(「Game」)(「Exe_Path」)(「EAC」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Game」)(「Exe_Path」)(「EAC」)=設定値
		終わり
	終わり
	
	バイナリーパス自動検出という属性
		取得する手順
			プロファイルデータ(「Game」)(「Exe_Path_Auto_Detection」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Game」)(「Exe_Path_Auto_Detection」)=設定値
		終わり
	終わり
	
	ApexLegendsプラットフォームという属性
		取得する手順
			プロファイルデータ(「Game」)(「Platform」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Game」)(「Platform」)=設定値
		終わり
	終わり
	
	アカウントという属性
		取得する手順
			【アカウントID】
			ApexLegendsプラットフォームについて分岐
			「Steam」の場合
				もしSteamアカウントが0またはSteamアカウントが無ならアカウントID=Steamの現在ユーザーID
				そうでなければアカウントID=Steamアカウント
			「EA app」の場合
				もしEAappアカウントが0またはEAappアカウントが無ならアカウントID=EAappの現在ユーザーID
				そうでなければアカウントID=EAappアカウント
			分岐終わり
			アカウントIDを返す
		終わり
	終わり
	
	Steamアカウントという属性
		取得する手順
			プロファイルデータ(「Game」)(「Account」)(「Steam」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Game」)(「Account」)(「Steam」)=設定値
		終わり
	終わり
	
	EAappアカウントという属性
		取得する手順
			プロファイルデータ(「Game」)(「Account」)(「EAapp」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Game」)(「Account」)(「EAapp」)=設定値
		終わり
	終わり
	
	EAappSteam経由起動という属性
		取得する手順
			プロファイルデータ(「Game」)(「Launch_EAapp_Via_Steam」)(「Enable」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Game」)(「Launch_EAapp_Via_Steam」)(「Enable」)=設定値
		終わり
	終わり
	
	EAappSteam経由起動AppIDという属性
		取得する手順
			プロファイルデータ(「Game」)(「Launch_EAapp_Via_Steam」)(「AppID」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Game」)(「Launch_EAapp_Via_Steam」)(「AppID」)=設定値
		終わり
	終わり
	
	カーソルロックという属性
		取得する手順
			プロファイルデータ(「Game」)(「CursorLocker」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Game」)(「CursorLocker」)=設定値
		終わり
	終わり
	
	起動引数という属性
		取得する手順
			プロファイルデータ(「Game」)(「Arguments」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Game」)(「Arguments」)=設定値
		終わり
	終わり
	
	コンフィグ指定という属性
		取得する手順
			プロファイルデータ(「Game」)(「Config_File」)(「Type」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Game」)(「Config_File」)(「Type」)=設定値
		終わり
	終わり
	
	コンフィグ読み取り専用という属性
		取得する手順
			プロファイルデータ(「Game」)(「Config_File」)(「Read_Only」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Game」)(「Config_File」)(「Read_Only」)=設定値
		終わり
	終わり
	
	プロファイルコンフィグ指定という属性
		取得する手順
			プロファイルデータ(「Game」)(「Profile_Config_File」)(「Type」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Game」)(「Profile_Config_File」)(「Type」)=設定値
		終わり
	終わり
	
	プロファイルコンフィグ読み取り専用という属性
		取得する手順
			プロファイルデータ(「Game」)(「Profile_Config_File」)(「Read_Only」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Game」)(「Profile_Config_File」)(「Read_Only」)=設定値
		終わり
	終わり
	
	ビデオコンフィグ指定という属性
		取得する手順
			プロファイルデータ(「Game」)(「Video_Config_File」)(「Type」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Game」)(「Video_Config_File」)(「Type」)=設定値
		終わり
	終わり
	
	ビデオコンフィグ読み取り専用という属性
		取得する手順
			プロファイルデータ(「Game」)(「Video_Config_File」)(「Read_Only」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Game」)(「Video_Config_File」)(「Read_Only」)=設定値
		終わり
	終わり
	
	// セクション Display
	ゲーム解像度変更という属性
		取得する手順
			プロファイルデータ(「Display」)(「Change_Game_Resolution」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Display」)(「Change_Game_Resolution」)=設定値
		終わり
	終わり
	
	ディスプレイ解像度変更という属性
		取得する手順
			プロファイルデータ(「Display」)(「Change_Display_Resolution」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Display」)(「Change_Display_Resolution」)=設定値
		終わり
	終わり
	
	ディスプレイスケーリングモードという属性
		取得する手順
			プロファイルデータ(「Display」)(「Scaling_Mode」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Display」)(「Scaling_Mode」)=設定値
		終わり
	終わり
	
	-解像度データ:サイズ
	ディスプレイ解像度という属性
		取得する手順
			解像度データ={プロファイルデータ(「Display」)(「Resolution」)(「Width」), プロファイルデータ(「Display」)(「Resolution」)(「Height」)}
			解像度データを返す
		終わり
		設定する手順
			解像度データ=設定値
		終わり
	終わり
	
	ディスプレイ解像度幅という属性
		取得する手順
			プロファイルデータ(「Display」)(「Resolution」)(「Width」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Display」)(「Resolution」)(「Width」)=設定値
		終わり
	終わり
	
	ディスプレイ解像度高さという属性
		取得する手順
			プロファイルデータ(「Display」)(「Resolution」)(「Height」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Display」)(「Resolution」)(「Height」)=設定値
		終わり
	終わり
	
	ディスプレイリフレッシュレートという属性
		取得する手順
			プロファイルデータ(「Display」)(「Refresh_Rate」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Display」)(「Refresh_Rate」)=設定値
		終わり
	終わり
	
	AltEnter自動押下という属性
		取得する手順
			プロファイルデータ(「Display」)(「Alt_Enter_Automatic_Press」)(「Enable」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Display」)(「Alt_Enter_Automatic_Press」)(「Enable」)=設定値
		終わり
	終わり
	
	AltEnter自動押下画像比較という属性
		取得する手順
			プロファイルデータ(「Display」)(「Alt_Enter_Automatic_Press」)(「Image_Matcher」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Display」)(「Alt_Enter_Automatic_Press」)(「Image_Matcher」)=設定値
		終わり
	終わり
	
	AltEnter自動押下待機時間という属性
		取得する手順
			プロファイルデータ(「Display」)(「Alt_Enter_Automatic_Press」)(「Wait_Second」)を返す
		終わり
		設定する手順
			プロファイルデータ(「Display」)(「Alt_Enter_Automatic_Press」)(「Wait_Second」)=設定値
		終わり
	終わり
終わり