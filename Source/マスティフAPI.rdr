マスティフAPIとは
	単一種類
	
	-APIURL:文字列=「https://api.legendutil.milkeyyy.com/mastiff」
	
	はじめの手順
		ニュースデータ=エラーニュースデータ
		ニュース最終取得日時=日時形式(「2000/01/01」)を作る
	終わり
	
	-エラーニュースデータ:配列={
		{
			「title」=「ニュースの取得に失敗しました」,
			「link」=「」,
			「img」=「」,
			「short_desc」=「」
		}
	}
	+ニュースデータ:配列
	-ニュース最終取得日時:日時形式
	+ニュース最大取得数:整数=2
	自分でニュース更新する手順
		// 10秒間隔を空けないと取得できないようにする
		【経過時間:日時期間形式】=ニュース最終取得日時と今の日付差
		もし経過時間の合計秒数が10未満なら
			「間隔が短すぎます。[改行][10-経過時間の合計秒数の整数]秒後にもう一度お試しください。」というエラーを発生させる
			手順から抜け出す
		もし終わり
		
		ニュース最終取得日時=今
		
		// ニュースを取得する
		【データ】
		例外監視
			// 画像ファイルを削除する
			「[アプリのコンフィグフォルダー]Resources\News\Image\*.jpg」を削除する
			データ=「[APIURL]/news」をHTTPで取得したもの
			「マスティフAPI ニュースデータ取得 - ステータスコード: [HTTPのステータスコード]」をデバッグログへ出力する
			ニュースデータ=データをJSON形式として読み取ったものの1番目からニュース最大取得数個切り出したもの
			もしHTTPのステータスコードが200でないなら
				ニュースデータ=エラーニュースデータ
				ニュースデータ(1)(「short_desc」)=「ステータスコード: [HTTPのステータスコード]」
				「[今の位置]Resources\Images\News\Warn.jpg」を「[アプリのコンフィグフォルダー]Resources\News\Image\1.jpg」へコピーする
				手順から抜け出す
			もし終わり
		発生した場合
			エラーのメッセージをデバッグログへ出力する
			ニュースデータ=エラーニュースデータ
			ニュースデータ(1)(「short_desc」)=「内部エラー: [エラーのメッセージ]」
			「[今の位置]Resources\Images\News\Warn.jpg」を「[アプリのコンフィグフォルダー]Resources\News\Image\1.jpg」へコピーする
			手順から抜け出す
		監視終わり
		
		// 画像を取得する
		【カウント:整数】=1
		ニュースデータを【ニュース】へそれぞれ繰り返す
			例外監視
				[ニュース(「img」)]を「[アプリのコンフィグフォルダー]Resources\News\Image\[カウント].jpg」へHTTPでダウンロードする
				もしHTTPのステータスコードが200でないなら「」というエラーを発生させる
			発生した場合
				エラーのメッセージをデバッグログへ出力する
				「[今の位置]Resources\Images\News\Warn.jpg」を「[アプリのコンフィグフォルダー]Resources\News\Image\[カウント].jpg」へコピーする
			監視終わり
			カウント=カウント+1
			// 最大取得数に達したら繰り返しから抜ける
			もしカウントがニュース最大取得数+1以上なら手順から抜け出す
		繰り返し終わり
	終わり
終わり