スプラッシュ画面とは
	ウィンドウを継承する
	はじめの手順
		初期化する
		この内容=アプリの名前
		この設計スケール比率を[アプリの設計スケール比率]に変える
		このアイコンをアプリのアイコンに変える
		この最前面=×
		
		// ロゴのサイズを調整
		ロゴピクチャーの画像=[「Rel1cStyle_Logo_TypographyDeth_1_White.png」を素材リストから画像として取得したもの]
		ロゴピクチャーの幅=ロゴピクチャーの画像の大きさを{1000,ロゴピクチャーの高さ}へサムネイル化したもの(1)
		ロゴピクチャーのマウスカーソル=「手」
		
		// Image by のラベルの高さをロゴピクチャーに合わせる
		ロゴラベルの元実体の「MinimumSize」={0,ロゴピクチャーの高さ}
		
		ステータスラベルの内容=「起動中...」
		ーー貼り付けた部品に対する操作をここに書きます
	終わり
	初期化する手順
		ーー自動生成された手順です。ここにプログラムを書き加えても消える場合があります
		初期化開始する
		このタスクバー表示を×に変える
		この背景色を「黒」に変える
		この実質大きさを｛700,410｝に変える
		この透明色を「Lime」に変える
		この種類を「縁無し」に変える
		この最大化ボタンを×に変える
		この最小化ボタンを×に変える
		このコントロールボックスを×に変える
		この初期位置を「中央」に変える
		この内容を「」に変える
		このフォントを「Yu Gothic UI,9」に変える
		バナーピクチャーというピクチャーを作る
		バナーピクチャーを初期化開始する
			その位置と大きさを｛0,0,700,355｝に変える
			その自動調整を「中央」に変える
			その移動順を7に変える
			そのフォントを「Yu Gothic UI,9」に変える
			その背景色を「黒」に変える
			そのドッキング方向を「全体」に変える
		バナーピクチャーを初期化終了する
		状況パネルというパネルを作る
			その位置と大きさを｛0,355,700,55｝に変える
			その移動順を6に変える
			そのフォントを「Yu Gothic UI,9」に変える
			その背景色を「黒」に変える
			そのドッキング方向を「下」に変える
			その余白を｛15｝に変える
			ステータスラベルというラベルを状況パネルへ作る
				その位置と大きさを｛189,15,496,25｝に変える
				その内容を「ラベル1」に変える
				そのフォントを「Yu Gothic UI,9.75」に変える
				その語尾省略を○に変える
				その文字配置を「右」に変える
				その移動順を1に変える
				その文字色を「白」に変える
				その背景色を「黒」に変える
				そのドッキング方向を「全体」に変える
			ロゴピクチャーというピクチャーを状況パネルへ作る
			ロゴピクチャーを初期化開始する
				その位置と大きさを｛80,15,109,25｝に変える
				その自動調整を「比率維持」に変える
				その移動順を5に変える
				そのフォントを「Yu Gothic UI,9」に変える
				その背景色を「黒」に変える
				そのドッキング方向を「左」に変える
				その余白を｛5｝に変える
			ロゴピクチャーを初期化終了する
			ロゴラベルというラベルを状況パネルへ作る
				その位置と大きさを｛15,15,65,17｝に変える
				その内容を「Image by」に変える
				そのフォントを「Yu Gothic UI,9.75,太字」に変える
				その自動調整を○に変える
				その文字配置を「右上」に変える
				その移動順を6に変える
				その文字色を「白」に変える
				その背景色を「黒」に変える
				そのドッキング方向を「左」に変える
		メインキャンバスというキャンバスを作る
			その位置と大きさを｛0,0,700,120｝に変える
			そのプレスアンドホールドを×に変える
			そのフォントを「Yu Gothic UI,9」に変える
			その移動順を4に変える
			そのフォーカス移動可能を×に変える
		初期化終了する
	終わり
	
	状況という属性
		設定する手順
			ステータスラベルの内容=設定値
			休憩する
		終わり
		取得する手順
			ステータスラベルの内容を返す
		終わり
	終わり
	
	/*-ロゴ配置名:文字列=「左上」
	ロゴ配置という属性
		設定する手順
			ロゴ配置名=設定値
			設定値について分岐
			「左上」の場合
				ロゴピクチャー画像の位置={5,5}
			「左下」の場合
				ロゴピクチャー画像の位置={5,メインキャンバスの高さ-ロゴピクチャー画像の高さ-5}
			「右上」の場合
				ロゴピクチャー画像の位置={メインキャンバスの幅-ロゴピクチャー画像の幅-5,5}
			「右下」の場合
				ロゴピクチャー画像の位置={メインキャンバスの幅-ロゴピクチャー画像の幅-5,メインキャンバスの高さ-ロゴピクチャー画像の高さ-5}
			その他の場合
				ロゴ配置名=「左上」
				ロゴピクチャー画像の位置={5,5}
			分岐終わり
		終わり
		取得する手順
			ロゴ配置名を返す
		終わり
	終わり
	
	-ロゴ背景色値:文字列=「黒」
	ロゴ背景色という属性
		設定する手順
			ロゴ背景色値=設定値
			設定値について分岐
			「黒」の場合
				ロゴピクチャー画像の画像=「LegendUtil_LogoType_Shadow_Black.png」を素材リストから画像として取得したもの
			「白」の場合
				ロゴピクチャー画像の画像=「LegendUtil_LogoType_Shadow_White.png」を素材リストから画像として取得したもの
			「透明」の場合
				ロゴピクチャー画像の画像=「LegendUtil_LogoType_Shadow_None.png」を素材リストから画像として取得したもの
			「縁取り」の場合
				ロゴピクチャー画像の画像=「LegendUtil_LogoType_Transparent_Outline_Gray.png」を素材リストから画像として取得したもの
			その他の場合
				ロゴ背景色値=「黒」
				ロゴピクチャー画像の画像=「LegendUtil_LogoType_Shadow_Black.png」を素材リストから画像として取得したもの
			分岐終わり
		終わり
		取得する手順
			ロゴ背景色値を返す
		終わり
	終わり*/
	
	-デバッグ文字:キャンバス文字
	-ロゴ表示:真偽値=× // ロゴを表示するかどうか
	開いた時の手順
		例外監視
			バナーピクチャーの画像=「SplashImage.jpg」を素材リストから画像として取得したものを{自分の幅,自分の高さ}へサムネイル化したもの
		発生した場合
			エラーのメッセージを「エラー」としてデバッグログへ出力する
		監視終わり
		
		もしロゴ表示なら
			ロゴピクチャーの自動調整=「比率維持」 
			ロゴピクチャーの画像=「LegendUtil_LogoType_Transparent.png」を素材リストから画像として取得したもの
			ロゴピクチャーの幅=ロゴピクチャーの画像の大きさを{自分の幅,ステータスラベルの高さ}へサムネイル化したもの(1)/1.6
		もし終わり
		
		自分を選択する
	終わり
	
	ロゴピクチャーがクリックされた時の手順
		「[アプリのロゴ作者URL]」を開く
	終わり
終わり