メイン画面とは
	ウィンドウを継承する
	
	+例外部品一覧={}
	+アイコン一覧={}
	
	-ヘルプツールチップ:ツールチップ
	
	-現在パネル
	
	-タブパネル一覧:配列
	
	// パネルたち
	+メインメニューパネル:メインメニューパネル部品
	+アプリ設定パネル:アプリ設定パネル部品
	+アカウント管理パネル:アカウント管理パネル部品
	+プロファイル情報パネル:プロファイル管理パネル部品
	+プロファイル作成ウィザードパネル:プロファイル作成ウィザードパネル部品
	+プロファイル編集パネル:プロファイル編集パネル部品
	+起動中パネル:起動中パネル部品
	
	+タブ一覧:辞書
	
	はじめの手順
		初期化する
		この元実体の「AutoScaleMode」=アプリの設計スケールモード
		この設計スケール比率=アプリの設計スケール比率
		この内容=「[アプリの名前]」
		このアイコン=アプリのアイコン
		この部品キーイベント=○
		
		ヘルプツールチップというツールチップを作る
			その待機時間=0.1
			その表示時間=120000
		
		タブパネル一覧=空の配列
		
		メインパネルをウィンドウ管理器で初期化開始する
		
		スプラッシュ画面の状況=言語管理器で「SplashWindow.Status.GeneratingControl」を取得したもの
		
		スプラッシュ画面の状況=言語管理器で「SplashWindow.Status.GeneratingControl_MainMenuPanel」を取得したもの
		タブパネル一覧へ[メインメニューパネルというメインメニューパネル部品を作る]を追加する
		起動中パネル=メインメニューパネルの起動中パネル
		
		スプラッシュ画面の状況=言語管理器で「SplashWindow.Status.GeneratingControl_AppSettingsPanel」を取得したもの
		タブパネル一覧へ[アプリ設定パネルというアプリ設定パネル部品をメインパネルへ作る]を追加する
		アプリ設定パネルへメイン設定を適用する
		
		スプラッシュ画面の状況=言語管理器で「SplashWindow.Status.GeneratingControl_AccountManagePanel」を取得したもの
		タブパネル一覧へ[アカウント管理パネルというアカウント管理パネル部品をメインパネルへ作る]を追加する
		
		スプラッシュ画面の状況=言語管理器で「SplashWindow.Status.GeneratingControl_ProfileManagePanel」を取得したもの
		タブパネル一覧へ[プロファイル情報パネルというプロファイル管理パネル部品をメインパネルへ作る]を追加する
		
		スプラッシュ画面の状況=言語管理器で「SplashWindow.Status.GeneratingControl_ProfileCreateWizardPanel」を取得したもの
		タブパネル一覧へ[プロファイル作成ウィザードパネルというプロファイル作成ウィザードパネル部品をメインパネルへ作る]を追加する
		
		スプラッシュ画面の状況=言語管理器で「SplashWindow.Status.GeneratingControl_ProfileEditPanel」を取得したもの
		タブパネル一覧へ[プロファイル編集パネルというプロファイル編集パネル部品をメインパネルへ作る]を追加する
		
		スプラッシュ画面の状況=言語管理器で「SplashWindow.Status.LoadingWindow_MainWindow」を取得したもの
		
		ロゴピクチャーの幅=ロゴピクチャーの高さ
		ロゴピクチャーの画像=アプリのアイコン透過画像
		ロゴピクチャーのマウスカーソル=「手」
		
		Kofiバナーピクチャーの自動調整=「比率維持」
		Kofiバナーピクチャーの画像=「kofi_button_red.png」を素材リストから画像として取得したもの
		Kofiバナーピクチャーの大きさ=Kofiバナーピクチャーの画像の大きさを{ツールバーメインパネルの実質大きさの幅-ツールバーメインパネルの余白の左右,ツールバーメインパネルの実質大きさの高さ+ツールバーメインパネルの余白の上下}へサムネイル化したもの
		Kofiバナーピクチャーのマウスカーソル=「手」
		
		// タブテーブル
		タブ一覧={
			「プレイ」={
				メインメニューパネル, // 対象の部品
				『
					メイン画面のメインメニューパネルへプロファイル読み込む // 表示時の手順
					メイン画面のメインメニューパネル:大きさが変わった
				』
			},
			「プロファイル」={
				プロファイル情報パネル,
				『
					メイン画面のプロファイル情報パネルへプロファイル読み込む
				』
			},
			「アカウント」={
				アカウント管理パネル,
				『
					メイン画面のアカウント管理パネルでアカウント読み込む
				』
			},
			「設定」={
				アプリ設定パネル,
				『』
			}
		}
		// タブ部品を生成する
		タブ生成する
		
		パネル閉じる
		メインパネルをウィンドウ管理器で初期化終了する
		自分のメインパネルへ○をウィンドウ部品制御でダブルバッファリング設定する
		
		アプリケーション情報ラベルの元実体の「MinimumSize」={0,ツールバーメインパネルの高さ}
		アプリケーション情報ラベルの内容=「[アプリのバージョン表記]」
		
		アップデートチェックボタンの元実体の「FlatAppearance」の「BorderSize」=0
		アップデートチェックボタンの幅=アップデートチェックボタンの高さ
		アップデートチェックボタンの背景画像=[ウィンドウ管理器:「update_FILL1_wght400_GRAD0_opsz48」を[ウィンドウ管理器のテーマアイコン色]でアイコン取得したもの]
		
		パネル閉じるボタンを隠す
		パネルタイトルラベルを隠す
		
		ツールバーパネルを最背面
		ロゴピクチャーを最背面
		読み込み中パネルを最前面
		読み込み中パネルを隠す
		ーー貼り付けた部品に対する操作をここに書きます
	終わり
	初期化する手順
		ーー自動生成された手順です。ここにプログラムを書き加えても消える場合があります
		初期化開始する
		この実質大きさを｛784,461｝に変える
		この最小サイズを｛800,500｝に変える
		この初期位置を「手動」に変える
		この内容を「メイン画面」に変える
		このフォントを「Yu Gothic UI,9」に変える
		この文字色を「標準の文字」に変える
		この間隔を｛2｝に変える
		メインパネルというパネルを作る
			その位置と大きさを｛0,68,784,393｝に変える
			そのフォントを「Yu Gothic UI,9」に変える
			その文字色を「標準の文字」に変える
			そのドッキング方向を「全体」に変える
			その余白を｛5｝に変える
		読み込み中パネルというパネルを作る
			その位置と大きさを｛77,132,425,127｝に変える
			その移動順を1に変える
			そのフォントを「Yu Gothic UI,9」に変える
			その文字色を「標準の文字」に変える
			その余白を｛10｝に変える
			読み込み中ラベルというラベルを読み込み中パネルへ作る
				その位置と大きさを｛10,10,405,107｝に変える
				その内容を「読み込み中」に変える
				そのフォントを「Yu Gothic UI,11.25,太字」に変える
				その文字配置を「中央」に変える
				その文字色を「標準の文字」に変える
				そのドッキング方向を「全体」に変える
		ツールバーパネルというパネルを作る
			その位置と大きさを｛0,0,784,68｝に変える
			その移動順を1に変える
			その自動調整を○に変える
			そのフォントを「Yu Gothic UI,9」に変える
			その文字色を「標準の文字」に変える
			そのドッキング方向を「上」に変える
			その余白を｛5｝に変える
			ツールバータブパネルというパネルをツールバーパネルへ作る
				その位置と大きさを｛5,40,774,23｝に変える
				その移動順を2に変える
				そのフォントを「Yu Gothic UI,9」に変える
				その文字色を「標準の文字」に変える
				そのドッキング方向を「上」に変える
			ツールバーメインパネルというパネルをツールバーパネルへ作る
				その位置と大きさを｛5,5,774,35｝に変える
				その移動順を4に変える
				そのフォントを「Yu Gothic UI,9」に変える
				その文字色を「標準の文字」に変える
				そのドッキング方向を「上」に変える
				アップデートチェックボタンというボタンをツールバーメインパネルへ作る
					その位置と大きさを｛93,0,34,35｝に変える
					その見た目を「フラット」に変える
					その移動順を6に変える
					そのフォーカス移動可能を×に変える
					そのフォントを「Yu Gothic UI,9」に変える
					その文字色を「標準の文字」に変える
					その背景画像配置を「拡大」に変える
					そのドッキング方向を「左」に変える
				Kofiバナーピクチャーというピクチャーをツールバーメインパネルへ作る
				Kofiバナーピクチャーを初期化開始する
					その位置と大きさを｛487,0,287,35｝に変える
					その移動順を5に変える
					そのフォントを「Yu Gothic UI,9」に変える
					その文字色を「標準の文字」に変える
					そのドッキング方向を「右」に変える
				Kofiバナーピクチャーを初期化終了する
				アプリケーション情報ラベルというラベルをツールバーメインパネルへ作る
					その位置と大きさを｛47,0,46,17｝に変える
					その内容を「ラベル2」に変える
					そのフォントを「Yu Gothic UI,9.75,太字」に変える
					その自動調整を○に変える
					その文字配置を「左」に変える
					その移動順を4に変える
					その文字色を「標準の文字」に変える
					そのドッキング方向を「左」に変える
				ロゴピクチャーというピクチャーをツールバーメインパネルへ作る
				ロゴピクチャーを初期化開始する
					その位置と大きさを｛0,0,47,35｝に変える
					その自動調整を「比率維持」に変える
					その移動順を3に変える
					そのマウスカーソルを「手」に変える
					そのフォントを「Yu Gothic UI,9」に変える
					その文字色を「標準の文字」に変える
					そのドッキング方向を「左」に変える
				ロゴピクチャーを初期化終了する
			パネルタイトルラベルというラベルをツールバーパネルへ作る
				その位置と大きさを｛0,0,54,30｝に変える
				その内容を「ラベル1」に変える
				そのフォントを「Yu Gothic UI,11.25,太字」に変える
				その文字配置を「左」に変える
				その移動順を1に変える
				その文字色を「標準の文字」に変える
			パネル閉じるボタンというボタンをツールバーパネルへ作る
				その位置と大きさを｛0,0,30,30｝に変える
				その見た目を「フラット」に変える
				その移動順を1に変える
				そのマウスカーソルを「手」に変える
				そのフォントを「Yu Gothic UI,9」に変える
				その文字色を「標準の文字」に変える
				その背景画像配置を「拡大」に変える
		初期化終了する
	終わり
	
	-読み込み中設定:真偽値
	読み込み中という属性
		設定する手順
			読み込み中設定=設定値
			
			「読み込み中: [設定値]」をデバッグログへ出力する
			
			もし設定値が○なら
				//休憩する
				このマウスカーソル=「砂時計」
				読み込み中パネルの位置={0,ツールバーパネルの高さ}
				読み込み中パネルの大きさ=自分の実質大きさ
				読み込み中パネルを表示する
				読み込み中パネルを最前面
				休憩する
				
			そうでなければ
				//休憩する
				このマウスカーソル=「標準」
				読み込み中パネルを隠す
				休憩する
				
			もし終わり
		終わり
		取得する手順
			読み込み中設定を返す
		終わり
	終わり
	
	開いた時の手順
		自分の横=メイン設定について「Window_Main」から「Position_X」を取得したもの
		自分の縦=メイン設定について「Window_Main」から「Position_Y」を取得したもの
		自分の幅=メイン設定について「Window_Main」から「Size_W」を取得したもの
		自分の高さ=メイン設定について「Window_Main」から「Size_H」を取得したもの
		
		読み込み中パネルの位置={0,0}
		読み込み中パネルの大きさ=自分の実質大きさ
		
		プロファイル編集パネルへ部品生成する // プロファイルの起動引数辞書を元に部品を生成する
		
		ウィンドウ管理器の部品一覧へ「[自分]」として[ウィンドウ管理器:自分から子部品取得したもの]を設定する
		ウィンドウ管理器:自分を例外部品一覧でデザイン適用する
		
		言語読み込む
		
		// メインメニューパネルの初期化
		メインメニューパネル:言語読み込む
		
		パネル閉じる
		タブ項目一覧(1)でクリック実行する
		
		// サーバーステータスをニュースを更新する
		【API情報更新処理スレッド:スレッド】=スレッドを作ったもの
		API情報更新処理スレッドのバックグラウンド=○
		API情報更新処理スレッドで『
			メインメニューパネルでAPI情報更新開始する
		』を実行する
	終わり
	
	閉じる時の手順
		この時をキャンセルする
		
		// 起動処理中に閉じようとした場合
		もしApexLegendsの起動準備中なら
			// 警告ダイアログを表示する
			もし[言語管理器で「InPlay.Dialog.Window_Close_InLaunchProcess_Confirm」を{アプリの名前}として取得したもの]を「警告アイコン」にして「はいといいえ」で質問したものが「はい」なら
				// はいが選択された場合は Apex Legends の起動処理をキャンセルしてからアプリを終了する
				ApexLegendsの待機キャンセル=○
				ApexLegendsを監視終了する
				
			そうでなければ
				手順から抜け出す
				
			もし終わり
			
		// ゲームプレイ中に閉じようとした場合
		他でもしApexLegendsのプレイ中なら
			// 警告ダイアログを表示する
			もし[言語管理器で「InPlay.Dialog.Window_Close_InPlay_Confirm」を{アプリの名前}として取得したもの]を「警告アイコン」にして「はいといいえ」で質問したものが「はい」なら
				// はいが選択された場合は Apex Legends を強制終了 (終了処理を実行) してからアプリを終了する
				ApexLegendsの監視強制終了=○
				ApexLegendsの終了処理中でない間繰り返す
					0.5秒待つ
				繰り返し終わり
				
			そうでなければ
				手順から抜け出す
				
			もし終わり
		もし終わり
		
		// ウィンドウの位置と大きさを保存
		メイン設定について「Window_Main」で「Position_X」へ自分の横を設定する
		メイン設定について「Window_Main」で「Position_Y」へ自分の縦を設定する
		メイン設定について「Window_Main」で「Size_W」へ自分の幅を設定する
		メイン設定について「Window_Main」で「Size_H」へ自分の高さを設定する
		
		// アプリケーションを終了する
		アプリを終了する
	終わり
	
	大きさが変わった時の手順
		//もし読み込み中が○でないなら手順から抜け出す
		例外監視
			読み込み中パネルの位置={0,ツールバーパネルの高さ}
			読み込み中パネルの大きさ=自分の実質大きさ
		発生した場合
		監視終わり
	終わり
	
	言語読み込む手順
		読み込み中ラベルの内容=言語管理器で「General.General.Loading」を取得したもの
		// 起動中パネルの言語適用
		起動中パネル:言語読み込む
	終わり
	
	+タブ項目一覧:配列
	タブ生成する手順
		【タブ部品】
		【タブ名一覧:配列】=空の配列
		タブ項目一覧=空の配列
		
		「メインメニュー タブ生成開始」をデバッグログへ出力する
		
		タブ名一覧=タブ一覧の見出し
		タブ名一覧を逆に並べ替える
		
		タブ名一覧を【タブ名】へそれぞれ繰り返す
			「- [タブ名]」をデバッグログへ出力する
			「タブ部品=[タブ名]タブ項目というメインメニュータブ部品(タブ名)をツールバータブパネルへ作ったもの」を命令する
			タブ部品の切り替え部品=タブ一覧(タブ名)(1)
			タブ部品の切り替え文=タブ一覧(タブ名)(2)
			タブ項目一覧へタブ部品を追加する
			ツールバータブパネルの高さ=タブ部品の高さ+ツールバータブパネルの余白の上下
			//ロゴピクチャーの幅=ロゴピクチャーの高さ
		繰り返し終わり
		
		タブ項目一覧を逆に並べ替える
		
		// 実験的機能:account_switcher
		// アカウント切り替え機能が有効の場合のみアカウントタブを表示する
		もし実験的機能管理器の機能一覧(「account_switcher」)(「有効」)が○ならタブ項目一覧(3)を表示する
		そうでなければタブ項目一覧(3)を隠す
	終わり
	
	タブ選択解除する手順
		【タブフォント】
		タブ項目一覧を【タブ部品】へそれぞれ繰り返す
			タブフォント=タブ部品のタブラベルのフォント
			タブフォントの装飾=「標準」
			タブ部品のタブラベルのフォント=タブフォント
		繰り返し終わり
	終わり
	
	自分を【部品:カスタムウィンドウ部品】へ〈【読み込み中パネル非表示無効:真偽値】として〉切り替える手順
		読み込み中=○
		
		//ツールバーパネルの有効=○
		//ツールバーパネルを表示する
		//メインメニューパネルを隠す
		//メインメニューパネルの有効=×
		
		「パネル切り替え: [部品の名前]」をデバッグログへ出力する
		
		パネル閉じる
		
		パネルタイトルラベルの内容=部品のタイトル
		
		現在パネル=部品
		
		// ウィンドウのタイトルをパネルに合わせて変更
		もし現在パネルのタイトルが無または現在パネルのタイトルが「」なら自分の内容=「[アプリの名前]」
		そうでなければ自分の内容=「[現在パネルのタイトル] - [アプリの名前]」
		
		メインパネルをウィンドウ管理器で初期化開始する
		部品をウィンドウ管理器で初期化終了する
		部品の有効=○
		部品を表示する
		部品を最前面
		// パネル表示時に実行される手順
		部品の名前について分岐
		「メインメニューパネル」の場合
			RPC管理器で[RPC管理器で「DiscordRPC.MainMenu.Idle_Details」を取得したもの]を[RPC管理器で「DiscordRPC.MainMenu.Idle_State」を取得したもの]としてステータス更新する
			メインメニューパネルへプロファイル読み込む
			メインメニューパネル:大きさが変わった
		「アプリ設定パネル」の場合
			RPC管理器で[RPC管理器で「DiscordRPC.ApplicationSettings.Viewing_Details」を取得したもの]を[RPC管理器で「DiscordRPC.ApplicationSettings.Viewing_State」を取得したもの]としてステータス更新する
			アプリ設定パネルでコンフィグ読み込む
		「プロファイル情報パネル」の場合
			RPC管理器で[RPC管理器で「DiscordRPC.ProfileManage.Viewing_Details」を取得したもの]を[RPC管理器で「DiscordRPC.ProfileManage.Viewing_State」を取得したもの]としてステータス更新する
			プロファイル情報パネルへプロファイル読み込む
		「プロファイル編集パネル」の場合
			部品の読み込み失敗=×
		分岐終わり
		メインパネルをウィンドウ管理器で初期化終了する
		
		もし読み込み中パネル非表示無効が○でないなら読み込み中=×
	終わり
	
	自分でパネル閉じる手順
		もし現在パネルが無でないなら
			「パネル非表示: [現在パネルの名前]」をデバッグログへ出力する
			現在パネルの名前について分岐
			「アプリ設定パネル」の場合
				アプリ設定パネルでコンフィグ保存する
			「プロファイル編集パネル」の場合
				もしプロファイル編集パネルの読み込み失敗が○でないならプロファイル編集パネルで起動引数保存する
			分岐終わり
		もし終わり
		// メインパネルに存在するパネルをすべて非表示にする
		タブパネル一覧を【子部品】へそれぞれ繰り返す
			子部品をウィンドウ管理器で初期化開始する
			子部品を隠す
			子部品の有効=×
		繰り返し終わり
	終わり
	
	ロゴピクチャーがクリックされた時の手順
		アプリで情報表示する
	終わり
	
	Kofiバナーピクチャーのマウスのボタンが押された時の手順
		もしこの時のボタンが「左ボタン」なら
			アプリのKofiURLを開く
		もし終わり
	終わり
	
	パネル閉じるボタンがクリックされた時の手順
		パネル閉じる
	終わり
	
	// シフトキーを押しながらクリックするとバージョンを偽装して強制的にアップデート確認画面を表示する
	【シフトキー有効:真偽値】=×
	キーが押された時の手順
		「メイン画面 キー押下」をデバッグログへ出力する
		「- Shift: [この時のシフトキー]」をデバッグログへ出力する
		シフトキー有効=この時のシフトキー
	終わり
	
	キーが離された時の手順
		「メイン画面 キー解除」をデバッグログへ出力する
		「- Shift: [この時のシフトキー]」をデバッグログへ出力する
		シフトキー有効=×
	終わり
	
	アップデートチェックボタンがクリックされた時の手順
		もしシフトキー有効なら
			シフトキー有効=×
			アップデーターで{「任意」=○,「デバッグ」=○}としてアップデート確認する
			
		そうでなければ
			アップデーターで{「任意」=○}としてアップデート確認する
			
		もし終わり
		アップデートチェックボタンの親を選択する
	終わり
終わり
