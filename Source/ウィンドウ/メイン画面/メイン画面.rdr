メイン画面とは
	ウィンドウを継承する
	
	+例外部品一覧={}
	+アイコン一覧={}
	
	-ヘルプツールチップ:ツールチップ
	
	-現在パネル
	
	-タブ一覧:辞書={
		「プレイ」=『
			メイン画面のメインメニューパネルへプロファイル読み込む
			メイン画面をメイン画面のメインメニューパネルへ切り替える
			メイン画面のメインメニューパネル:大きさが変わった
		』,
		「プロファイル」=『
			メイン画面のプロファイル情報パネルへプロファイル読み込む
			メイン画面をメイン画面のプロファイル情報パネルへ切り替える
		』,
		「設定」=『
			メイン画面をメイン画面のアプリ設定パネルへ切り替える
		』
	}
	
	-タブパネル一覧:配列
	
	// パネルたち
	+メインメニューパネル:メインメニューパネル部品
	+アプリ設定パネル:アプリ設定パネル部品
	+プロファイル情報パネル:プロファイル管理パネル部品
	+プロファイル作成ウィザードパネル:プロファイル作成ウィザードパネル部品
	+プロファイル編集パネル:プロファイル編集パネル部品
	
	はじめの手順
		初期化する
		この元実体の「AutoScaleMode」=アプリの設計スケールモード
		この設計スケール比率=アプリの設計スケール比率
		この内容=「[アプリの名前]」
		このアイコン=アプリのアイコン
		
		ヘルプツールチップというツールチップを作る
			その待機時間=0.1
			その表示時間=120000
		
		タブパネル一覧=空の配列
		
		メインパネルをウィンドウ管理器で初期化開始する
		
		スプラッシュ画面のステータスラベルの内容=「コントロールを生成中」
		
		スプラッシュ画面のステータスラベルの内容=「コントロールを生成中: メインメニューパネル」
		タブパネル一覧へ[メインメニューパネルというメインメニューパネル部品を作る]を追加する
		
		スプラッシュ画面のステータスラベルの内容=「コントロールを生成中: アプリ設定パネル」
		タブパネル一覧へ[アプリ設定パネルというアプリ設定パネル部品をメインパネルへ作る]を追加する
		アプリ設定パネルへメイン設定を適用する
		
		スプラッシュ画面のステータスラベルの内容=「コントロールを生成中: プロファイル管理パネル」
		タブパネル一覧へ[プロファイル情報パネルというプロファイル管理パネル部品をメインパネルへ作る]を追加する
		
		スプラッシュ画面のステータスラベルの内容=「コントロールを生成中: プロファイル作成ウィザードパネル」
		タブパネル一覧へ[プロファイル作成ウィザードパネルというプロファイル作成ウィザードパネル部品をメインパネルへ作る]を追加する
		
		スプラッシュ画面のステータスラベルの内容=「コントロールを生成中: プロファイル編集パネル」
		タブパネル一覧へ[プロファイル編集パネルというプロファイル編集パネル部品をメインパネルへ作る]を追加する
		
		スプラッシュ画面のステータスラベルの内容=「ウィンドウを設定中: メインウィンドウ」
		
		ロゴピクチャーの幅=ロゴピクチャーの高さ
		ロゴピクチャーの画像=アプリのアイコン透過画像
		ロゴピクチャーのマウスカーソル=「手」
		
		Kofiバナーピクチャーの自動調整=「比率維持」
		Kofiバナーピクチャーの画像=「kofi_button_red.png」を素材リストから画像として取得したもの
		Kofiバナーピクチャーの大きさ=Kofiバナーピクチャーの画像の大きさを{パネル1の実質大きさの幅-パネル1の余白の左右,パネル1の実質大きさの高さ+パネル1の余白の上下}へサムネイル化したもの
		//Kofiバナーピクチャーの元実体の「MaximumSize」={パネル1の実質大きさ(1),パネル1の実質大きさ(2)}
		Kofiバナーピクチャーのマウスカーソル=「手」
		
		タブ生成する
		
		パネル閉じる
		メインパネルをウィンドウ管理器で初期化終了する
		自分のメインパネルへ○をウィンドウ部品制御でダブルバッファリング設定する
		
		アプリケーション情報ラベルの内容=「[アプリのバージョン表記]」
		
		パネル閉じるボタンを隠す
		パネルタイトルラベルを隠す
		
		ツールバーパネルを最背面
		ロゴピクチャーを最背面
		読み込み中パネルを最前面
		読み込み中パネルを隠す
		ーー貼り付けた部品に対する操作をここに書きます
	終わり
	初期化する手順
		ーー自動生成された手順です。ここにプログラムを書き加えても消える場合があります
		初期化開始する
		この実質大きさを｛784,461｝に変える
		この最小サイズを｛800,500｝に変える
		この初期位置を「手動」に変える
		この内容を「メイン画面」に変える
		このフォントを「Yu Gothic UI,9」に変える
		この間隔を｛2｝に変える
		メインパネルというパネルを作る
			その位置と大きさを｛0,68,784,393｝に変える
			そのフォントを「Yu Gothic UI,9」に変える
			そのドッキング方向を「全体」に変える
			その余白を｛5｝に変える
		読み込み中パネルというパネルを作る
			その位置と大きさを｛77,132,425,127｝に変える
			その移動順を1に変える
			そのフォントを「Yu Gothic UI,9」に変える
			その余白を｛10｝に変える
			ラベル1というラベルを読み込み中パネルへ作る
				その位置と大きさを｛10,10,405,107｝に変える
				その内容を「読み込み中」に変える
				そのフォントを「Yu Gothic UI,11.25,太字」に変える
				その文字配置を「中央」に変える
				そのドッキング方向を「全体」に変える
		ツールバーパネルというパネルを作る
			その位置と大きさを｛0,0,784,68｝に変える
			その移動順を1に変える
			その自動調整を○に変える
			そのフォントを「Yu Gothic UI,9」に変える
			そのドッキング方向を「上」に変える
			その余白を｛5｝に変える
			ツールバータブパネルというパネルをツールバーパネルへ作る
				その位置と大きさを｛5,40,774,23｝に変える
				その移動順を2に変える
				そのフォントを「Yu Gothic UI,9」に変える
				そのドッキング方向を「上」に変える
			パネル1というパネルをツールバーパネルへ作る
				その位置と大きさを｛5,5,774,35｝に変える
				その移動順を4に変える
				そのフォントを「Yu Gothic UI,9」に変える
				そのドッキング方向を「上」に変える
				Kofiバナーピクチャーというピクチャーをパネル1へ作る
				Kofiバナーピクチャーを初期化開始する
					その位置と大きさを｛487,0,287,35｝に変える
					その移動順を5に変える
					そのフォントを「Yu Gothic UI,9」に変える
					そのドッキング方向を「右」に変える
				Kofiバナーピクチャーを初期化終了する
				アプリケーション情報ラベルというラベルをパネル1へ作る
					その位置と大きさを｛47,0,241,35｝に変える
					その内容を「ラベル2」に変える
					そのフォントを「Yu Gothic UI,9.75,太字」に変える
					その文字配置を「左」に変える
					その移動順を4に変える
					そのドッキング方向を「左」に変える
				ロゴピクチャーというピクチャーをパネル1へ作る
				ロゴピクチャーを初期化開始する
					その位置と大きさを｛0,0,47,35｝に変える
					その自動調整を「比率維持」に変える
					その移動順を3に変える
					そのマウスカーソルを「手」に変える
					そのフォントを「Yu Gothic UI,9」に変える
					そのドッキング方向を「左」に変える
				ロゴピクチャーを初期化終了する
			パネルタイトルラベルというラベルをツールバーパネルへ作る
				その位置と大きさを｛0,0,54,30｝に変える
				その内容を「ラベル1」に変える
				そのフォントを「Yu Gothic UI,11.25,太字」に変える
				その文字配置を「左」に変える
				その移動順を1に変える
			パネル閉じるボタンというボタンをツールバーパネルへ作る
				その位置と大きさを｛0,0,30,30｝に変える
				その見た目を「フラット」に変える
				その移動順を1に変える
				そのマウスカーソルを「手」に変える
				そのフォントを「Yu Gothic UI,9」に変える
				その背景画像配置を「拡大」に変える
		初期化終了する
	終わり
	
	-読み込み中設定:真偽値
	読み込み中という属性
		設定する手順
			読み込み中設定=設定値
			
			もし設定値が○なら
				休憩する
				このマウスカーソル=「砂時計」
				読み込み中パネルの位置={0,ツールバーパネルの高さ}
				読み込み中パネルの大きさ=自分の実質大きさ
				読み込み中パネルを表示する
				読み込み中パネルを最前面
				休憩する
				
			そうでなければ
				休憩する
				このマウスカーソル=「標準」
				読み込み中パネルを隠す
				//休憩する
				
			もし終わり
		終わり
		取得する手順
			読み込み中設定を返す
		終わり
	終わり
	
	開いた時の手順
		自分の横=メイン設定について「Window_Main」から「Position_X」を取得したもの
		自分の縦=メイン設定について「Window_Main」から「Position_Y」を取得したもの
		自分の幅=メイン設定について「Window_Main」から「Size_W」を取得したもの
		自分の高さ=メイン設定について「Window_Main」から「Size_H」を取得したもの
		
		読み込み中パネルの位置={0,0}
		読み込み中パネルの大きさ=自分の実質大きさ
		
		プロファイル編集パネルへ部品生成する // プロファイルの起動引数辞書を元に部品を生成する
		
		ウィンドウ管理器の部品一覧へ「[自分]」として[ウィンドウ管理器:自分から子部品取得したもの]を設定する
		ウィンドウ管理器:自分を例外部品一覧でデザイン適用する
		
		メインメニューパネルへプロファイル読み込む
		
		パネル閉じる
		【タブフォント】=タブ項目一覧(1)のタブラベルのフォント
		タブフォントの装飾=「太字+下線」
		タブ項目一覧(タブ項目一覧の個数)のタブラベルのフォント=タブフォント
		タブ一覧(「プレイ」)を実行する
		
		// サーバーステータスをニュースを更新する
		メインメニューパネルでAPI情報更新開始する
		
		もしコンフィグ管理器の初回起動が○ならアプリ設定パネルへ切り替える
	終わり
	
	閉じる時の手順
		// ウィンドウの位置と大きさを保存
		メイン設定について「Window_Main」で「Position_X」へ自分の横を設定する
		メイン設定について「Window_Main」で「Position_Y」へ自分の縦を設定する
		メイン設定について「Window_Main」で「Size_W」へ自分の幅を設定する
		メイン設定について「Window_Main」で「Size_H」へ自分の高さを設定する
		アプリを終了する
	終わり
	
	大きさが変わった時の手順
		//もし読み込み中が○でないなら手順から抜け出す
		例外監視
			読み込み中パネルの位置={0,ツールバーパネルの高さ}
			読み込み中パネルの大きさ=自分の実質大きさ
		発生した場合
		監視終わり
	終わり
	
	+タブ項目一覧:配列
	タブ生成する手順
		【タブ部品】
		【タブ名一覧:配列】=空の配列
		タブ項目一覧=空の配列
		
		「メインメニュー タブ生成開始」をデバッグログへ出力する
		
		タブ名一覧=タブ一覧の見出し
		タブ名一覧を逆に並べ替える
		
		タブ名一覧を【タブ名】へそれぞれ繰り返す
			「- [タブ名]」をデバッグログへ出力する
			タブ部品=メインメニュータブ部品(タブ名)をツールバータブパネルへ作ったもの
			タブ部品の切り替え文=タブ一覧(タブ名)
			タブ項目一覧へタブ部品を追加する
			ツールバータブパネルの高さ=タブ部品の高さ+ツールバータブパネルの余白の上下
			//ロゴピクチャーの幅=ロゴピクチャーの高さ
		繰り返し終わり
	終わり
	
	タブ選択解除する手順
		【タブフォント】
		タブ項目一覧を【タブ部品】へそれぞれ繰り返す
			タブフォント=タブ部品のタブラベルのフォント
			タブフォントの装飾=「標準」
			タブ部品のタブラベルのフォント=タブフォント
		繰り返し終わり
	終わり
	
	自分を【部品:カスタムウィンドウ部品】へ〈【読み込み中パネル非表示無効:真偽値】として〉切り替える手順
		読み込み中=○
		
		//ツールバーパネルの有効=○
		//ツールバーパネルを表示する
		//メインメニューパネルを隠す
		//メインメニューパネルの有効=×
		
		「パネル切り替え: [部品の名前]」をデバッグログへ出力する
		
		パネル閉じる
		
		パネルタイトルラベルの内容=部品のタイトル
		
		現在パネル=部品
		
		// ウィンドウのタイトルをパネルに合わせて変更
		もし現在パネルのタイトルが無または現在パネルのタイトルが「」なら自分の内容=「[アプリの名前]」
		そうでなければ自分の内容=「[現在パネルのタイトル] - [アプリの名前]」
		
		メインパネルをウィンドウ管理器で初期化開始する
		部品をウィンドウ管理器で初期化終了する
		部品の有効=○
		部品を表示する
		部品を最前面
		// パネル表示時に実行される手順
		部品の名前について分岐
		「アプリ設定パネル」の場合
			アプリ設定パネルでコンフィグ読み込む
		「プロファイル情報パネル」の場合
			プロファイル情報パネルへプロファイル読み込む
		「プロファイル編集パネル」の場合
			部品の読み込み失敗=×
		分岐終わり
		メインパネルをウィンドウ管理器で初期化終了する
		
		もし読み込み中パネル非表示無効が○でないなら読み込み中=×
	終わり
	
	自分でパネル閉じる手順
		読み込み中=○
		もし現在パネルが無でないなら
			「パネル非表示: [現在パネルの名前]」をデバッグログへ出力する
			現在パネルの名前について分岐
			「アプリ設定パネル」の場合
				アプリ設定パネルでコンフィグ保存する
			「プロファイル編集パネル」の場合
				もしプロファイル編集パネルの読み込み失敗が○でないならプロファイル編集パネルで起動引数保存する
			分岐終わり
		もし終わり
		// メインパネルに存在するパネルをすべて非表示にする
		タブパネル一覧を【子部品】へそれぞれ繰り返す
			子部品をウィンドウ管理器で初期化開始する
			子部品を隠す
			子部品の有効=×
		繰り返し終わり
		
		// ウィンドウのタイトルをリセット
		自分の内容=「[アプリの名前]」
		
		//ツールバーパネルを隠す
		//ツールバーパネルの有効=×
		//メインメニューパネルの有効=○
		//メインメニューパネルへプロファイル読み込む
		//メインメニューパネルを表示する
		//メインメニューパネルを最前面
		読み込み中=×
	終わり
	
	ロゴピクチャーがクリックされた時の手順
		アプリで情報表示する
	終わり
	
	Kofiバナーピクチャーのマウスのボタンが押された時の手順
		もしこの時のボタンが「左ボタン」なら
			アプリのKofiURLを開く
		もし終わり
	終わり
	
	パネル閉じるボタンがクリックされた時の手順
		パネル閉じる
	終わり
終わり

メインメニュータブ部品とは
	カスタムウィンドウ部品を継承する
	
	+切り替え文:匿名手順
	
	はじめ(名前)の手順
		初期化する
		このドッキング方向=「左」
		この自動調整=◯
		タブラベルの内容=名前
		ーー貼り付けた部品に対する操作をここに書きます
	終わり
	初期化する手順
		ーー自動生成された手順です。ここにプログラムを書き加えても消える場合があります
		この位置と大きさを｛15,15,150,150｝に変える
		この内容を「メインメニュータブ部品」に変える
		タブスペーサーラベルというラベルを作る
			その位置と大きさを｛43,0,5,150｝に変える
			そのフォントを「Yu Gothic UI,9」に変える
			その移動順を2に変える
			そのドッキング方向を「左」に変える
		タブラベルというラベルを作る
			その位置と大きさを｛0,0,43,21｝に変える
			その内容を「プレイ」に変える
			そのフォントを「Yu Gothic UI,12」に変える
			その語尾省略を○に変える
			その自動調整を○に変える
			その文字配置を「中央」に変える
			その移動順を1に変える
			そのフォーカス移動可能を○に変える
			そのマウスカーソルを「手」に変える
			そのドッキング方向を「左」に変える
	終わり
	
	自分でクリック実行する手順
		「メインメニュー タブクリック: [タブラベルの内容]」をデバッグログへ出力する
		メイン画面:タブ選択解除する
		【タブフォント】=タブラベルのフォント
		タブフォントの装飾=「太字+下線」
		タブラベルのフォント=タブフォント
		切り替え文を実行する
	終わり
	
	タブラベルのマウスのボタンが押された時の手順
		もしこの時のボタンが「左ボタン」でないなら手順から抜け出す
		クリック実行する
	終わり
終わり

メインメニューパネル部品とは
	カスタムウィンドウ部品を継承する
	
	+タイトル:文字列=「」
	
	+読み込み完了:真偽値
	
	-説明ツールチップ:ツールチップ
	
	はじめの手順
		初期化する
		このドッキング方向=「全体」
		
		読み込み中ラベルを隠す
		読み込み中ラベルの位置={0,0}
		読み込み中ラベルの大きさ=自分の実質大きさ
		
		サーバーステータス取得失敗ラベルを隠す
		
		説明ツールチップというツールチップを作る
			その待機時間=0.1
			その表示時間=120000
		
		// ニュース説明ラベルの最大高さを1文字分にする
		ニュース説明ラベルの自動調整=○
		ニュース説明ラベルの内容=「A」
		ニュース説明ラベル最大高さ=ニュース説明ラベルの高さ
		
		ニュースピクチャーの画像=「[今の位置]Resources\Images\News\Warn.jpg」
		
		ニュース次ボタンの背景画像=[ウィンドウ管理器:「arrow_forward_ios_FILL1_wght400_GRAD0_opsz48」を[ウィンドウ管理器のテーマアイコン色]でアイコン取得したもの]
		ニュース次ボタンの元実体の「FlatAppearance」の「BorderSize」=0
		ニュース前ボタンの背景画像=[ウィンドウ管理器:「arrow_back_ios_FILL1_wght400_GRAD0_opsz48」を[ウィンドウ管理器のテーマアイコン色]でアイコン取得したもの]
		ニュース前ボタンの元実体の「FlatAppearance」の「BorderSize」=0
		
		// ApexOauth_Crossplay
		クロスプレイステータス部品というメインメニューサーバーステータス部品をサーバーステータスパネルへ作る
		クロスプレイステータス部品のタイトル=「クロスプレイ認証」
		クロスプレイステータス部品の詳細=「0ms」
		
		// EA_novafusion
		ロビーマッチメイキングステータス部品というメインメニューサーバーステータス部品をサーバーステータスパネルへ作る
		ロビーマッチメイキングステータス部品のタイトル=「ロビー/マッチメイキング」
		ロビーマッチメイキングステータス部品の詳細=「0ms」
		
		// Origin_login
		Originログインステータス部品というメインメニューサーバーステータス部品をサーバーステータスパネルへ作る
		Originログインステータス部品のタイトル=「Origin ログイン」
		Originログインステータス部品の詳細=「0ms」
		
		// EA_accounts
		EAアカウントステータス部品というメインメニューサーバーステータス部品をサーバーステータスパネルへ作る
		EAアカウントステータス部品のタイトル=「EA アカウント」
		EAアカウントステータス部品の詳細=「0ms」
		
		// LegendUtil API
		LegendUtilAPIステータス部品というメインメニューサーバーステータス部品をサーバーステータスパネルへ作る
		LegendUtilAPIステータス部品のタイトル=「LegendUtil API」
		LegendUtilAPIステータス部品の詳細=「」
		
		ニュースベースパネルの表示=×
		サーバーステータスベースパネルの表示=×
		ーー貼り付けた部品に対する操作をここに書きます
	終わり
	初期化する手順
		ーー自動生成された手順です。ここにプログラムを書き加えても消える場合があります
		この位置と大きさを｛15,15,710,600｝に変える
		この内容を「メインメニューランチャーパネル部品」に変える
		このフォントを「Yu Gothic UI,9」に変える
		この余白を｛5｝に変える
		ニュースベースパネルというパネルを作る
			その位置と大きさを｛5,55,700,440｝に変える
			その移動順を5に変える
			そのフォントを「Yu Gothic UI,9」に変える
			そのドッキング方向を「全体」に変える
			ニュースパネルというパネルをニュースベースパネルへ作る
				その位置と大きさを｛0,25,700,390｝に変える
				その枠を「線」に変える
				その移動順を2に変える
				その自動調整を○に変える
				そのフォントを「Yu Gothic UI,9」に変える
				そのドッキング方向を「上」に変える
				その余白を｛5｝に変える
				ニュース前ボタンというボタンをニュースパネルへ作る
					その位置と大きさを｛5,40,50,343｝に変える
					その見た目を「フラット」に変える
					その移動順を10に変える
					そのフォーカス移動可能を×に変える
					そのフォントを「Yu Gothic UI,9」に変える
					その背景画像配置を「中央」に変える
					そのドッキング方向を「左」に変える
				ニュース次ボタンというボタンをニュースパネルへ作る
					その位置と大きさを｛643,40,50,343｝に変える
					その見た目を「フラット」に変える
					その移動順を9に変える
					そのフォーカス移動可能を×に変える
					そのフォントを「Yu Gothic UI,9」に変える
					その背景画像配置を「中央」に変える
					そのドッキング方向を「右」に変える
				"ニュース表示時間プログレスバー"というプログレスバーをニュースパネルへ作る
					その位置と大きさを｛5,377,688,3｝に変える
					その移動順を7に変える
					そのフォントを「Yu Gothic UI,9」に変える
				ニュースドットラベルというラベルをニュースパネルへ作る
					その位置と大きさを｛61,355,588,25｝に変える
					その内容を「○●」に変える
					そのフォントを「Yu Gothic UI,11.25」に変える
					その語尾省略を○に変える
					その文字配置を「中央」に変える
					その移動順を6に変える
					その余白を｛1,0,0,0｝に変える
				ニュース説明ラベルというラベルをニュースパネルへ作る
					その位置と大きさを｛5,318,688,25｝に変える
					その内容を「ラベル1」に変える
					そのフォントを「Yu Gothic UI,9.75」に変える
					その語尾省略を○に変える
					その文字配置を「左下」に変える
					その移動順を2に変える
					その余白を｛1,0,0,0｝に変える
				ニュースタイトルラベルというラベルをニュースパネルへ作る
					その位置と大きさを｛5,293,688,25｝に変える
					その内容を「ラベル1」に変える
					そのフォントを「Yu Gothic UI,12,太字」に変える
					その語尾省略を○に変える
					その文字配置を「左下」に変える
					その移動順を1に変える
					その余白を｛0,5,0,0｝に変える
				ニュースピクチャーというピクチャーをニュースパネルへ作る
				ニュースピクチャーを初期化開始する
					その位置と大きさを｛5,40,688,250｝に変える
					その自動調整を「比率維持」に変える
					その移動順を3に変える
					そのフォントを「Yu Gothic UI,9」に変える
				ニュースピクチャーを初期化終了する
				ニュース見出しラベルというラベルをニュースパネルへ作る
					その位置と大きさを｛5,5,688,35｝に変える
					その内容を「ニュース」に変える
					そのフォントを「Yu Gothic UI,14.25,太字」に変える
					その文字配置を「中央」に変える
					その移動順を5に変える
					その背景画像配置を「拡大」に変える
					そのドッキング方向を「上」に変える
			ニューススペーサーラベルというラベルをニュースベースパネルへ作る
				その位置と大きさを｛0,0,700,25｝に変える
				そのフォントを「Yu Gothic UI,9.75」に変える
				その語尾省略を○に変える
				その文字配置を「左下」に変える
				その移動順を4に変える
				そのドッキング方向を「上」に変える
				その余白を｛1,0,0,0｝に変える
		プレイパネルというパネルを作る
			その位置と大きさを｛5,495,700,100｝に変える
			その移動順を3に変える
			そのフォントを「Yu Gothic UI,9」に変える
			そのドッキング方向を「下」に変える
			その余白を｛0,5,0,0｝に変える
			プレイボタンというボタンをプレイパネルへ作る
				その位置と大きさを｛470,5,230,95｝に変える
				その見た目を「フラット」に変える
				その内容を「プレイ」に変える
				その移動順を1に変える
				そのフォントを「Yu Gothic UI,14.25,太字」に変える
				そのドッキング方向を「右」に変える
			プロファイル選択リストという選択リストをプレイパネルへ作る
				その位置と大きさを｛0,5,225,28｝に変える
				その選択窓幅を225に変える
				その項目高さを20に変える
				その移動順を2に変える
				そのフォントを「Yu Gothic UI,11.25,太字」に変える
		サーバーステータスベースパネルというパネルを作る
			その位置と大きさを｛5,5,700,50｝に変える
			その移動順を5に変える
			その自動調整を○に変える
			そのフォントを「Yu Gothic UI,9」に変える
			そのドッキング方向を「上」に変える
			サーバーステータスパネルという自動配置パネルをサーバーステータスベースパネルへ作る
				その位置と大きさを｛0,20,700,30｝に変える
				その移動順を6に変える
				そのフォントを「Yu Gothic UI,9」に変える
				そのドッキング方向を「上」に変える
			サーバーステータス取得失敗ラベルというラベルをサーバーステータスベースパネルへ作る
				その位置と大きさを｛579,0,99,50｝に変える
				その内容を「サーバーステータスの取得に失敗しました」に変える
				そのフォントを「Yu Gothic UI,11.25,太字」に変える
				その語尾省略を○に変える
				その文字配置を「中央」に変える
				その移動順を8に変える
			サーバーステータス地域ラベルというラベルをサーバーステータスベースパネルへ作る
				その位置と大きさを｛0,0,46,20｝に変える
				その内容を「地域: 」に変える
				そのフォントを「Yu Gothic UI,11.25」に変える
				その自動調整を○に変える
				その文字配置を「左」に変える
				その移動順を7に変える
				そのドッキング方向を「上」に変える
		読み込み中ラベルというラベルを作る
			その位置と大きさを｛567,299,116,67｝に変える
			その内容を「読み込み中」に変える
			そのフォントを「Yu Gothic UI,12,太字」に変える
			その文字配置を「中央」に変える
			その移動順を1に変える
	終わり
	
	読み込み中という属性
		設定する手順
			読み込み中ラベルの表示=設定値
			読み込み中ラベルを最前面
		終わり
		取得する手順
			読み込み中ラベルの表示を返す
		終わり
	終わり
	
	-プロファイルID一覧:配列
	-プロファイル項目一覧:配列
	自分へプロファイル読み込む手順
		【読み込み失敗プロファイル一覧】=空の配列
		
		読み込み中=○
		
		プロファイルID一覧=空の配列
		プロファイル項目一覧=空の配列
		
		プロファイル管理器のプロファイルテーブルの見出しを【ID】へそれぞれ繰り返す
			例外監視
				プロファイルID一覧へIDを追加する
				プロファイル項目一覧へ「[プロファイル管理器のプロファイルテーブル(ID)の名前] | [プロファイル管理器のプロファイルテーブル(ID)のApexLegendsプラットフォーム]」を追加する
			発生した場合
				「メインパネル プロファイル読み込み失敗: [プロファイル管理器のプロファイルテーブル(ID)の名前] ([ID])[改行][エラーのメッセージ]」をデバッグログへ出力する
				読み込み失敗プロファイル一覧へ「[プロファイル管理器のプロファイルテーブル(ID)の名前] ([ID])」を追加する
			監視終わり
		繰り返し終わり
		
		もし読み込み失敗プロファイル一覧の個数が1以上なら
			「プロファイルの読み込みに失敗しました。[改行][改行]<読み込みに失敗したプロファイル>[改行]・[読み込み失敗プロファイル一覧を「[改行]・」で繋げたもの]」を「警告アイコン」で表示する
		もし終わり
		
		プロファイル選択リストをクリアする
		プロファイル選択リストへプロファイル項目一覧を一括追加する
		
		読み込み中=×
		読み込み完了=○
	終わり
	
	【ステータス】をサーバーステータス状態値変換する手順:整数
		もしステータスが「UP」なら
			1を返す
			
		他でもしステータスが「SLOW」なら
			2を返す
			
		他でもしステータスが○なら
			1を返す
			
		そうでなければ
			3を返す
			
		もし終わり
	終わり
	
	-サーバーステータス更新中:真偽値
	自分でサーバーステータス更新する手順
		もしサーバーステータス更新中なら手順から抜け出す
		「サーバーステータス更新開始」をデバッグログへ出力する
		例外監視
			サーバーステータス更新中=○
			サーバーステータスベースパネルの表示=×
			// サーバーステータス情報を更新する
			モザンビークAPIでサーバーステータス更新する
			// LegendUtil APIのステータスを更新する
			【LegendUtilAPIステータス:整数】
			【LegendUtilAPIステータスコード:整数】
			【LegendUtilAPIレイテンシー】=アプリのAPIアドレスからPingでレイテンシー取得したもの
			例外監視
				HTTPでアプリのAPIURLを取得する
				LegendUtilAPIステータスコード=HTTPのステータスコード
			発生した場合
				LegendUtilAPIステータスコード=0
			監視終わり
			もしLegendUtilAPIレイテンシーが0以上なら
				もしLegendUtilAPIステータスコードが200でないなら
					LegendUtilAPIステータス=3
					LegendUtilAPIレイテンシー=「SC: [LegendUtilAPIステータスコード]」
					
				そうでなければ
					LegendUtilAPIステータス=1
					LegendUtilAPIレイテンシー=「[LegendUtilAPIレイテンシー]ms」
					
				もし終わり
				
			そうでなければ
				LegendUtilAPIステータス=3
				LegendUtilAPIレイテンシー=「-」
				
			もし終わり
			
			サーバーステータス地域ラベルの内容=「地域: [モザンビークAPIのサーバーステータス地域] | 最終更新: [モザンビークAPIのサーバーステータス最終取得日時] | Data provided by https://apexlegendsstatus.com/」
			
			// 取得に失敗している場合
			もしモザンビークAPIのサーバーステータスデータに「_error」が存在するなら
				サーバーステータス取得失敗ラベルの内容=「サーバーステータスの取得に失敗しました[改行][モザンビークAPIのサーバーステータスデータ(「_error」)]」
				サーバーステータス取得失敗ラベルを表示する
				サーバーステータス取得失敗ラベルを最前面
				サーバーステータスベースパネルの表示=○
				「サーバーステータス更新終了」をデバッグログへ出力する
				サーバーステータス更新中=×
				手順から抜け出す
				
			そうでなければ
				サーバーステータス取得失敗ラベルの内容=「サーバーステータスの取得に失敗しました」
				サーバーステータス取得失敗ラベルの表示=×
				
			もし終わり
			
			//クロスプレイステータス部品のタイトル=モザンビークAPI(「ApexOauth_Crossplay」)(モザンビークAPIのサーバーステータス地域)
			クロスプレイステータス部品の詳細=「[モザンビークAPIのサーバーステータスデータ(「ApexOauth_Crossplay」)(モザンビークAPIのサーバーステータス地域)(「ResponseTime」)]ms」
			クロスプレイステータス部品の状態=[モザンビークAPIのサーバーステータスデータ(「ApexOauth_Crossplay」)(モザンビークAPIのサーバーステータス地域)](「Status」)をサーバーステータス状態値変換したもの
			//ロビーマッチメイキングステータス部品のタイトル=モザンビークAPI(「EA_novafusion」)(モザンビークAPIのサーバーステータス地域)
			ロビーマッチメイキングステータス部品の詳細=「[モザンビークAPIのサーバーステータスデータ(「EA_novafusion」)(モザンビークAPIのサーバーステータス地域)(「ResponseTime」)]ms」
			ロビーマッチメイキングステータス部品の状態=[モザンビークAPIのサーバーステータスデータ(「EA_novafusion」)(モザンビークAPIのサーバーステータス地域)](「Status」)をサーバーステータス状態値変換したもの
			//Originログインステータス部品のタイトル=モザンビークAPI(「Origin_login」)(モザンビークAPIのサーバーステータス地域)
			Originログインステータス部品の詳細=「[モザンビークAPIのサーバーステータスデータ(「Origin_login」)(モザンビークAPIのサーバーステータス地域)(「ResponseTime」)]ms」
			Originログインステータス部品の状態=[モザンビークAPIのサーバーステータスデータ(「Origin_login」)(モザンビークAPIのサーバーステータス地域)](「Status」)をサーバーステータス状態値変換したもの
			//EAアカウントステータス部品のタイトル=モザンビークAPI(「EA_accounts」)(モザンビークAPIのサーバーステータス地域)
			EAアカウントステータス部品の詳細=「[モザンビークAPIのサーバーステータスデータ(「EA_accounts」)(モザンビークAPIのサーバーステータス地域)(「ResponseTime」)]ms」
			EAアカウントステータス部品の状態=[モザンビークAPIのサーバーステータスデータ(「EA_accounts」)(モザンビークAPIのサーバーステータス地域)](「Status」)をサーバーステータス状態値変換したもの
			
			LegendUtilAPIステータス部品の詳細=LegendUtilAPIレイテンシー
			LegendUtilAPIステータス部品の状態=LegendUtilAPIステータス
			
			サーバーステータスベースパネルの表示=○
			「サーバーステータス更新終了」をデバッグログへ出力する
			サーバーステータス更新中=×
		発生した場合
			「サーバーステータス更新失敗: [エラーのメッセージ]」をデバッグログへ出力する
			サーバーステータスベースパネルの表示=○
			「サーバーステータス更新終了」をデバッグログへ出力する
			サーバーステータス更新中=×
		監視終わり
	終わり
	
	// サーバーステータスとニュースを一定間隔で更新する
	-API情報更新スレッド:スレッド
	+API情報更新実行中:真偽値
	+API情報更新終了:真偽値
	-サーバーステータスURL:文字列
	-サーバーステータス最大数:整数
	自分でAPI情報更新開始する手順
		もしAPI情報更新実行中なら手順から抜け出す
		
		API情報更新スレッドというスレッドを作る
		API情報更新スレッドで『
		API情報更新実行中=◯
		繰り返す
			もしAPI情報更新終了なら繰り返しから抜け出す
			//プレイパネルの有効=×
			読み込み中=○
			ニュース読み込む
			サーバーステータス更新する
			大きさが変わった
			//プレイパネルの有効=○
			読み込み中=×
			600回繰り返す
				もしAPI情報更新終了なら繰り返しから抜け出す
				0.1秒待つ
			繰り返し終わり
		繰り返し終わり
		API情報更新終了=×
		API情報更新実行中=×
		』を実行する
	終わり
	
	-ニュース説明ラベル最大高さ:整数
	ニュース部品サイズ調整する手順
		例外監視
			【パネル部品高さ】=0
			ニュースパネルの子部品一覧を【子部品】へそれぞれ繰り返す
				もし子部品の名前が「ニュースピクチャー」でないかつ子部品の名前が「ニュース次ボタン」でないかつ子部品の名前が「ニュース前ボタン」でないなら
					パネル部品高さ=パネル部品高さ+子部品の高さ
				もし終わり
			繰り返し終わり
			
			【ピクチャー幅:整数】=ニュースベースパネルの実質大きさ(1)-ニュースベースパネルの余白の左右-ニュースパネルの余白の左右-ニュース次ボタンの幅-ニュース前ボタンの幅
			【ピクチャー高さ:整数】=ニュースベースパネルの実質大きさ(2)-ニュースベースパネルの余白の上下-ニュースパネルの余白の上下-パネル部品高さ
			ニュースピクチャーの大きさ=ニュースピクチャーの画像の大きさを{ピクチャー幅,ピクチャー高さ}へサムネイル化したもの
			
			// 各部品の幅を画像に合わせる
			ニュースタイトルラベルの自動調整=○
			ニュースタイトルラベルの元実体の「MinimumSize」={ニュースピクチャーの幅,1}
			
			ニュース説明ラベルの自動調整=○
			ニュース説明ラベルの元実体の「MinimumSize」={ニュースピクチャーの幅,1}
			ニュース説明ラベルの元実体の「MaximumSize」={ニュースピクチャーの幅,ニュース説明ラベル最大高さ}
			
			ニュースドットラベルの幅=ニュースピクチャーの幅
			ニュース表示時間プログレスバーの幅=ニュースピクチャーの幅
			
			ニューススペーサーラベルの高さ=(ニュースベースパネルの実質大きさ(2)-ニュースベースパネルの余白の上下-ニュースパネルの高さ)/2
			【部品横位置】=(ニュースパネルの余白の左+ニュースパネルの実質大きさ(1)-ニュースピクチャーの幅)/2
			ニュースピクチャーの位置={部品横位置,ニュース見出しラベルの高さ+ニュースパネルの余白の上}
			
			ニュースタイトルラベルの位置={部品横位置,ニュース見出しラベルの高さ+ニュースピクチャーの高さ}
			ニュース説明ラベルの位置={部品横位置,ニュースタイトルラベルの縦+ニュースタイトルラベルの高さ}
			ニュースドットラベルの位置={部品横位置,ニュース説明ラベルの縦+ニュース説明ラベルの高さ}
			ニュース表示時間プログレスバーの位置={部品横位置,ニュースドットラベルの縦+ニュースドットラベルの高さ}
		発生した場合
			エラーのメッセージをデバッグログへ出力する
		監視終わり
	終わり
	
	// ニュースを一定間隔で切り替える
	-ニュース更新スレッド:スレッド
	+ニュース定期更新実行中:真偽値
	+ニュース更新終了:真偽値
	-ニュースデータ:配列
	-ニュースURL:文字列
	-ニュース最大数:整数
	-ニュース画像ファイル:画像
	-ニュース表示時間:整数=10 // 秒
	-ニュース次:真偽値
	-ニュース前:真偽値
	ニュース更新開始する手順
		もしニュース定期更新実行中なら手順から抜け出す
		ニュース更新スレッドというスレッドを作る
		ニュース更新スレッドで『
		ニュース定期更新実行中=◯
		「ニュース定期更新開始」をデバッグログへ出力する
		【ニュースカウント:整数】=1
		【ニュース表示時間カウント:整数】=0
		ニュース画像ファイル=画像(「[今の位置]Resources\Images\News\Warn.jpg」)を作ったもの
		
		ニュース表示時間プログレスバーの最大値=ニュース表示時間*10
		
		// 7秒ごとにニュースを切り替える
		繰り返す
			もしニュース更新終了なら繰り返しから抜け出す
			もしニュースデータの個数がニュースカウント未満ならニュースカウント=1
			// 最大表示数を超えたらカウントをリセット
			もしニュースカウントがニュースデータの個数+1ならニュースカウント=1
			// ドットを初期化
			ニュースドットラベルの内容=[「○」を(ニュースデータの個数)回反復文字]
			// ドットを更新
			ニュースドットラベルの内容=[ニュースドットラベルの内容]のニュースカウント文字目から1文字「●」に取り替えたもの
			例外監視
				ニュースタイトルラベルの内容=ニュースデータ(ニュースカウント)の「title」
				ニュース説明ラベルの内容=ニュースデータ(ニュースカウント)の「short_desc」
				
				もし「[アプリのコンフィグフォルダー]Resources\News\Image\[ニュースカウント].jpg」が存在しないなら
					ニュース画像ファイルの内容=「[今の位置]Resources\Images\News\Warn.jpg」
					
				そうでなければ
					ニュース画像ファイルの内容=「[アプリのコンフィグフォルダー]Resources\News\Image\[ニュースカウント].jpg」
					
				もし終わり
				ニュースピクチャーへニュース画像ファイルを開く
				
				ニュースタイトルラベルのマウスカーソル=「手」
				ニュースピクチャーのマウスカーソル=「手」
				
				ニュースURL=ニュースデータ(ニュースカウント)の「link」
			発生した場合
				「[エラーのメッセージ]」をデバッグログへ出力する
				ニュースタイトルラベルの内容=「ニュースの更新に失敗しました」
				ニュース説明ラベルの内容=「内部エラー: [エラーのメッセージ]」
				
				ニュース画像ファイルの内容=「[今の位置]Resources\Images\News\Warn.jpg」
				ニュースピクチャーへニュース画像ファイルを開く
				
				ニュースタイトルラベルのマウスカーソル=「標準」
				ニュースピクチャーのマウスカーソル=「標準」
				
				ニュースURL=「」
			監視終わり
			ニュース部品サイズ調整する
			// 待機
			ニュース表示時間カウント=0
			ニュース表示時間プログレスバーの値=0
			ニュース表示時間*10回繰り返す
				もしニュース更新終了なら繰り返しから抜け出す
				ニュース表示時間カウント=ニュース表示時間カウント+1
				ニュース表示時間プログレスバーの値=ニュース表示時間カウント
				もしニュース次なら
					もしニュースカウントがニュースデータの個数ならニュースカウント=1
					そうでなければニュースカウント=ニュースカウント+1
					繰り返しから抜け出す
					
				他でもしニュース前なら
					もしニュースカウントが1ならニュースカウント=ニュースデータの個数
					そうでなければニュースカウント=ニュースカウント-1
					繰り返しから抜け出す
					
				もし終わり
				0.1秒待つ
			繰り返し終わり
			もしニュース更新終了なら繰り返しから抜け出す
			
			// カウントを増やす
			もしニュース次またはニュース前なら
				ニュース次=×
				ニュース前=×
				
			そうでなければ
				ニュースカウント=ニュースカウント+1
				
			もし終わり
		繰り返し終わり
		ニュース画像ファイルの内容=「[今の位置]Resources\Images\News\Warn.jpg」
		ニュースピクチャーへニュース画像ファイルを開く
		ニュース更新終了=×
		「ニュース定期更新終了」をデバッグログへ出力する
		ニュース定期更新実行中=×
		』を実行する
	終わり
	
	-ニュース更新中:真偽値
	自分でニュース読み込む手順
		もしニュース更新中なら手順から抜け出す
		例外監視
			ニュースベースパネルの表示=×
			ニュース更新終了=○
			ニュース更新中=○
			
			繰り返す
				もしニュース更新スレッドが実行中でないなら繰り返しから抜け出す
				0.1秒待つ
			繰り返し終わり
			
			// ニュースデータを取得する
			モザンビークAPIでニュース更新する
			【ニュース個数:整数】=モザンビークAPIのニュースデータの個数
			【ニュース最大数:整数】=モザンビークAPIのニュース最大取得数
			
			// ニュースデータを結合
			ニュースデータ=モザンビークAPIのニュースデータのクローン
			ニュース最大数=モザンビークAPIのニュース最大取得数
			「ニュース数: [ニュース個数]/[ニュース最大数]」をデバッグログへ出力する
			
			ニュースベースパネルの表示=○
			ニュース更新中=×
			ニュース更新終了=×
		発生した場合
			「ニュース更新失敗: [エラーのメッセージ]」をデバッグログへ出力する
			ニュースデータ=モザンビークAPIのニュースデータのクローン
			ニュースベースパネルの表示=○
			ニュース更新中=×
			ニュース更新終了=×
		監視終わり
		ニュース更新開始する
	終わり
	
	大きさが変わった時の手順
		例外監視
			読み込み中ラベルの位置={0,0}
			読み込み中ラベルの大きさ={自分の実質大きさの幅,自分の実質大きさの高さ-プレイパネルの高さ}
			サーバーステータス取得失敗ラベルの位置={0,0}
			サーバーステータス取得失敗ラベルの大きさ=サーバーステータス取得失敗ラベルの親の大きさ
			// パネルの高さを自動調整する
			サーバーステータスパネルの高さ=(サーバーステータスパネルの子部品一覧すべての縦の最大値)+サーバーステータスパネルの子部品一覧(1)の高さ+サーバーステータスパネルの子部品一覧(1)の間隔(2)+サーバーステータスパネルの子部品一覧(1)の間隔(4)
		発生した場合
			「[エラーのメッセージ]」をデバッグログへ出力する
		監視終わり
		ニュース部品サイズ調整する
	終わり
	
	ニュースピクチャーのマウスのボタンが押された時の手順
		もしこの時のボタンが「左ボタン」なら
			もしニュースURLが無でないならニュースURLを開く
		もし終わり
	終わり
	
	ニュースタイトルラベルのマウスのボタンが押された時の手順
		もしこの時のボタンが「左ボタン」なら
			もしニュースURLが無でないならニュースURLを開く
		もし終わり
	終わり
	
	ニュース前ボタンがクリックされた時の手順
		ニュース前=○
	終わり
	
	ニュース次ボタンがクリックされた時の手順
		ニュース次=○
	終わり
	
	プレイボタンがクリックされた時の手順
		もしプロファイル選択リストの選択番号が0ならプロファイル選択リストの選択番号=1
		ApexLegendsをプロファイルID一覧(プロファイル選択リストの選択番号)で起動する
	終わり
終わり

メインメニューサーバーステータス部品とは
	カスタムウィンドウ部品を継承する
	
	-ステータスアイコン図形:円図形
	
	はじめの手順
		初期化する
		ドッキング方向=「なし」
		
		ステータスアイコンキャンバスのアンチエイリアス=○
		ステータスアイコン図形=ステータスアイコンキャンバスへ円を描いたもの
		ステータスアイコン図形の太さ=0
		
		サイズ調整する
		
		状態=1
		ーー貼り付けた部品に対する操作をここに書きます
	終わり
	初期化する手順
		ーー自動生成された手順です。ここにプログラムを書き加えても消える場合があります
		この位置と大きさを｛15,15,262,24｝に変える
		この内容を「メインメニューサーバーステータス部品」に変える
		このフォーカス移動可能を×に変える
		このフォントを「Yu Gothic UI,9」に変える
		メインパネルというパネルを作る
			その位置と大きさを｛41,3,200,100｝に変える
			その枠を「線」に変える
			その移動順を4に変える
			その自動調整を○に変える
			そのフォントを「Yu Gothic UI,9」に変える
			ステータス詳細ラベルというラベルをメインパネルへ作る
				その位置と大きさを｛39,0,17,20｝に変える
				その内容を「2」に変える
				そのフォントを「Yu Gothic UI,11.25」に変える
				その語尾省略を○に変える
				その自動調整を○に変える
				その文字配置を「左」に変える
				その移動順を2に変える
				そのドッキング方向を「左」に変える
			ステータスタイトルラベルというラベルをメインパネルへ作る
				その位置と大きさを｛24,0,15,20｝に変える
				その内容を「1」に変える
				そのフォントを「Yu Gothic UI,11.25,太字」に変える
				その語尾省略を○に変える
				その自動調整を○に変える
				その文字配置を「左」に変える
				その移動順を1に変える
				そのドッキング方向を「左」に変える
			ステータスアイコンキャンバスというキャンバスをメインパネルへ作る
				その位置と大きさを｛0,0,24,98｝に変える
				そのフォントを「Yu Gothic UI,9」に変える
				その移動順を3に変える
				そのフォーカス移動可能を×に変える
				そのドッキング方向を「左」に変える
		セパレータースペーサーラベル2というラベルを作る
			その位置と大きさを｛6,0,5,24｝に変える
			そのフォントを「Yu Gothic UI,9」に変える
			その移動順を7に変える
			そのドッキング方向を「左」に変える
		セパレーターラベルというラベルを作る
			その位置と大きさを｛5,0,1,24｝に変える
			そのフォントを「Yu Gothic UI,9」に変える
			その枠を「線」に変える
			その移動順を5に変える
			そのドッキング方向を「左」に変える
		セパレータースペーサーラベル1というラベルを作る
			その位置と大きさを｛0,0,5,24｝に変える
			そのフォントを「Yu Gothic UI,9」に変える
			その移動順を6に変える
			そのドッキング方向を「左」に変える
	終わり
	
	+セパレーター表示:真偽値=×
	サイズ調整する手順
		【セパレーター幅:整数】
		もしセパレーター表示なら
			セパレーターラベルを表示する
			セパレータースペーサーラベル1を表示する
			セパレータースペーサーラベル2を表示する
			セパレーター幅=セパレーターラベルの幅+セパレータースペーサーラベル1の幅+セパレータースペーサーラベル2の幅
			
		そうでなければ
			セパレーターラベルを隠す
			セパレータースペーサーラベル1を隠す
			セパレータースペーサーラベル2を隠す
			セパレーター幅=0
			
		もし終わり
		
		メインパネルの余白={3,3,0,4}
		
		メインパネルの高さ=ステータスタイトルラベルの高さ+メインパネルの余白の上下
		「ステータスタイトルラベルサイズ: [ステータスタイトルラベルの大きさ]」をデバッグログへ出力する
		
		ステータスアイコンキャンバスの幅=ステータスアイコンキャンバスの高さ
		「ステータスアイコンサイズ: [ステータスアイコンキャンバスの大きさ]」をデバッグログへ出力する
		
		メインパネルの幅=ステータスアイコンキャンバスの幅+ステータスタイトルラベルの幅+ステータス詳細ラベルの幅-セパレーター幅
		メインパネルの位置={セパレーター幅,0}
		
		ステータスアイコン図形の位置={0,0}
		ステータスアイコン図形の幅=(ステータスアイコンキャンバスの幅-ステータスアイコン図形の横)/(メイン画面の設計スケール比率(1)/96)-1
		ステータスアイコン図形の高さ=(ステータスアイコンキャンバスの高さ-ステータスアイコン図形の縦)/(メイン画面の設計スケール比率(2)/96)-1
		ステータスアイコンキャンバスの大きさ={ステータスアイコンキャンバスの高さ,ステータスアイコンキャンバスの高さ}
		
		大きさ={メインパネルの幅,メインパネルの高さ}
	終わり
	
	-状態データ:整数
	状態という属性
		設定する手順
			設定値について分岐
			1の場合 // 緑
				ステータスアイコン図形の背景色=RGB(119, 205, 111)
			2の場合 // 黃
				ステータスアイコン図形の背景色=RGB(248, 217, 24)
			3の場合 // 赤
				ステータスアイコン図形の背景色=RGB(236, 47, 0)
			その他の場合
				設定値=1
			分岐終わり
			ステータスアイコンキャンバスを更新する
			状態データ=設定値
		終わり
		取得する手順
			状態データを返す
		終わり
	終わり
	
	タイトルという属性
		設定する手順
			ステータスタイトルラベルの内容=設定値
			サイズ調整する
		終わり
		取得する手順
			ステータスタイトルラベルの内容を返す
		終わり
	終わり
	
	詳細という属性
		設定する手順
			ステータス詳細ラベルの内容=設定値
			サイズ調整する
		終わり
		取得する手順
			ステータス詳細ラベルの内容を返す
		終わり
	終わり
終わり

旧メインメニューパネル部品とは
	カスタムウィンドウ部品を継承する
	
	+タイトル:文字列=「」
	
	-説明ツールチップ:ツールチップ
	
	+読み込み完了:真偽値
	
	+選択プロファイル名:文字列
	
	はじめの手順
		初期化する
		このドッキング方向=「全体」
		
		自分へ○をウィンドウ部品制御でダブルバッファリング設定する
		
		読み込み完了=×
		
		バージョン情報ラベルの内容=「[アプリのバージョン表記]」
		
		読み込み中ラベルを隠す
		読み込み中ラベルの大きさ=自分の大きさ
		読み込み中ラベルの位置={0,0}
		
		説明ツールチップというツールチップを作る
			その待機時間=0.1
			その表示時間=120000
		
		アイコンピクチャーの幅=アイコンピクチャーの高さ
		アイコンピクチャーの画像=アプリのアイコン透過画像
		アイコンピクチャーのマウスカーソル=「手」
		「[アプリの名前]」という説明ツールチップをアイコンピクチャーへ設定する
		
		プロファイル並び替え選択リストの一覧={「名前 (昇順)」,「名前 (降順)」,「ディスプレイ設定 (昇順)」,「ディスプレイ設定 (降順)」,「プラットフォーム (昇順)」,「プラットフォーム (降順)」}
		プロファイル並び替え選択リストの選択番号=メイン設定について「Window_Main」から「Profile_Sort_Order」を取得したもの
		
		設定ボタンの背景画像=[ウィンドウ管理器:「settings_FILL1_wght400_GRAD0_opsz48」を[ウィンドウ管理器のテーマアイコン色]でアイコン取得したもの]
		設定ボタンの元実体の「FlatAppearance」の「BorderSize」=1
		設定ボタンのマウスカーソル=「手」
		「アプリケーション設定」という説明ツールチップを設定ボタンに設定する
		
		プロファイル管理ボタンの背景画像=[ウィンドウ管理器:「edit_note_FILL1_wght400_GRAD0_opsz48」を[ウィンドウ管理器のテーマアイコン色]でアイコン取得したもの]
		プロファイル管理ボタンの元実体の「FlatAppearance」の「BorderSize」=1
		プロファイル管理ボタンのマウスカーソル=「手」
		「プロファイル管理」という説明ツールチップをプロファイル管理ボタンに設定する
		
		アップデート確認ボタンの背景画像=[ウィンドウ管理器:「update_FILL1_wght400_GRAD0_opsz48」を[ウィンドウ管理器のテーマアイコン色]でアイコン取得したもの]
		アップデート確認ボタンの元実体の「FlatAppearance」の「BorderSize」=1
		アップデート確認ボタンのマウスカーソル=「手」
		「アップデートを確認」という説明ツールチップをアップデート確認ボタンに設定する
		
		ヘルプボタンの背景画像=[ウィンドウ管理器:「help_FILL1_wght400_GRAD0_opsz48」を[ウィンドウ管理器のテーマアイコン色]でアイコン取得したもの]
		ヘルプボタンの元実体の「FlatAppearance」の「BorderSize」=1
		ヘルプボタンのマウスカーソル=「手」
		「ヘルプ」という説明ツールチップをヘルプボタンに設定する
	終わり
	初期化する手順
		ーー自動生成された手順です。ここにプログラムを書き加えても消える場合があります
		この位置と大きさを｛15,15,583,371｝に変える
		この内容を「アプリ設定パネル」に変える
		このフォントを「Yu Gothic UI,9」に変える
		この余白を｛5｝に変える
		ベースパネルというパネルを作る
			その位置と大きさを｛5,86,573,280｝に変える
			その移動順を4に変える
			そのフォントを「Yu Gothic UI,9」に変える
			そのドッキング方向を「全体」に変える
			プロファイルパネルという自動配置パネルをベースパネルへ作る
				その位置と大きさを｛0,0,573,280｝に変える
				その自動調整方法を「伸縮」に変える
				そのスクロールバー表示を○に変える
				その自動調整を○に変える
				そのフォントを「Yu Gothic UI,9」に変える
				そのドッキング方向を「全体」に変える
				その間隔を｛2｝に変える
				その余白を｛8｝に変える
		ツールパネルというパネルを作る
			その位置と大きさを｛5,5,573,81｝に変える
			その移動順を2に変える
			その自動調整を○に変える
			そのフォントを「Yu Gothic UI,9」に変える
			そのドッキング方向を「上」に変える
			その余白を｛0,0,0,5｝に変える
			プロファイルツールパネルというパネルをツールパネルへ作る
				その位置と大きさを｛373,45,200,30｝に変える
				そのフォントを「Yu Gothic UI,9」に変える
				そのドッキング方向を「上」に変える
				プロファイル並び替え選択リストという選択リストをプロファイルツールパネルへ作る
					その位置と大きさを｛40,0,160,23｝に変える
					その入力可能を×に変える
					その選択窓幅を128に変える
					その項目高さを15に変える
					そのマウスカーソルを「手」に変える
					そのフォントを「Yu Gothic UI,9」に変える
					そのドッキング方向を「右」に変える
			メインパネルというパネルをツールパネルへ作る
				その位置と大きさを｛373,0,200,45｝に変える
				その移動順を5に変える
				そのフォントを「Yu Gothic UI,9」に変える
				そのドッキング方向を「上」に変える
				その余白を｛0,0,0,5｝に変える
				ヘルプボタンというボタンをメインパネルへ作る
					その位置と大きさを｛40,0,40,40｝に変える
					その見た目を「フラット」に変える
					その画像配置を「下中央」に変える
					その文字画像配置を「縦に画像と文字」に変える
					そのフォントを「Yu Gothic UI,9,太字」に変える
					その背景画像配置を「拡大」に変える
					そのドッキング方向を「右」に変える
					その間隔を｛2｝に変える
				アップデート確認ボタンというボタンをメインパネルへ作る
					その位置と大きさを｛80,0,40,40｝に変える
					その見た目を「フラット」に変える
					その画像配置を「下中央」に変える
					その文字画像配置を「縦に画像と文字」に変える
					その移動順を1に変える
					そのフォントを「Yu Gothic UI,9,太字」に変える
					その背景画像配置を「拡大」に変える
					そのドッキング方向を「右」に変える
					その間隔を｛2｝に変える
				プロファイル管理ボタンというボタンをメインパネルへ作る
					その位置と大きさを｛120,0,40,40｝に変える
					その見た目を「フラット」に変える
					その画像配置を「下中央」に変える
					その文字画像配置を「縦に画像と文字」に変える
					その移動順を2に変える
					そのフォントを「Yu Gothic UI,9,太字」に変える
					その背景画像配置を「拡大」に変える
					そのドッキング方向を「右」に変える
					その間隔を｛2｝に変える
				設定ボタンというボタンをメインパネルへ作る
					その位置と大きさを｛160,0,40,40｝に変える
					その見た目を「フラット」に変える
					その画像配置を「下中央」に変える
					その文字画像配置を「縦に画像と文字」に変える
					その移動順を3に変える
					そのフォントを「Yu Gothic UI,9,太字」に変える
					その背景画像配置を「拡大」に変える
					そのドッキング方向を「右」に変える
					その間隔を｛2｝に変える
			バージョン情報ラベルというラベルをツールパネルへ作る
				その位置と大きさを｛76,0,297,75｝に変える
				その内容を「Version 0.0.0-release」に変える
				そのフォントを「Yu Gothic UI,9.75,太字」に変える
				その語尾省略を○に変える
				その文字配置を「左」に変える
				その移動順を3に変える
				そのドッキング方向を「左」に変える
				その余白を｛5,0,0,0｝に変える
			アイコンピクチャーというピクチャーをツールパネルへ作る
			アイコンピクチャーを初期化開始する
				その位置と大きさを｛0,0,76,75｝に変える
				その自動調整を「比率維持」に変える
				その移動順を4に変える
				そのフォントを「Yu Gothic UI,9」に変える
				そのドッキング方向を「左」に変える
			アイコンピクチャーを初期化終了する
			セパレーターラベルというラベルをツールパネルへ作る
				その位置と大きさを｛0,75,573,1｝に変える
				そのフォントを「Yu Gothic UI,9」に変える
				その枠を「線」に変える
				その移動順を4に変える
				そのドッキング方向を「下」に変える
		読み込み中ラベルというラベルを作る
			その位置と大きさを｛567,299,116,67｝に変える
			そのフォントを「Yu Gothic UI,9」に変える
			その移動順を3に変える
	終わり
	
	読み込み中という属性
		設定する手順
			読み込み中ラベルの表示=設定値
		終わり
		取得する手順
			読み込み中ラベルの表示を返す
		終わり
	終わり
	
	大きさが変わった時の手順
		もし読み込み完了が○でないなら手順から抜け出す
		【最大幅:整数】=250
		【パネル幅:整数】=プロファイルパネルの幅-プロファイルパネルの余白の左右-プロファイルパネルの間隔の左右
		【値:整数】=(パネル幅/(パネル幅/最大幅を切り捨てたもの))-プロファイルパネルの間隔の左右-8
		プロファイルパネルの子部品一覧を【子部品】へそれぞれ繰り返す
			子部品の幅=値
		繰り返し終わり
	終わり
	
	【プロファイル項目一覧:配列】
	自分へプロファイル読み込む手順
		【読み込み失敗プロファイル一覧】=空の配列
		プロファイル項目一覧=空の配列
		【項目部品】
		
		読み込み中=○
		
		プロファイル管理器でプロファイル並び替え選択リストの選択項目としてプロファイル並び替える
		
		ウィンドウ管理器でプロファイルパネルを初期化開始する
		プロファイルパネルの子部品一覧すべてを解放する
		プロファイルパネルをクリアする
		プロファイル管理器のプロファイルテーブルの見出しを【ID】へそれぞれ繰り返す
			例外監視
				項目部品=プロファイル項目部品をプロファイルパネルへ作る
					項目部品のプロファイルID=ID
					項目部品のプロファイル名=プロファイル管理器のプロファイルテーブル(ID)の名前
					項目部品の設定ラベルの内容=「プラットフォーム: [プロファイル管理器のプロファイルテーブル(ID)のApexLegendsプラットフォーム]」
					もしプロファイル管理器のプロファイルテーブル(ID)のゲーム解像度変更が○なら
						項目部品のディスプレイ設定=「1_[プロファイル管理器のプロファイルテーブル(ID)のディスプレイ解像度の幅]×[プロファイル管理器のプロファイルテーブル(ID)のディスプレイ解像度の高さ]」
						項目部品の設定ラベルの内容=「[その設定ラベルの内容][改行]解像度: [プロファイル管理器のプロファイルテーブル(ID)のディスプレイ解像度の幅]×[プロファイル管理器のプロファイルテーブル(ID)のディスプレイ解像度の高さ] ([{[プロファイル管理器のプロファイルテーブル(ID)のディスプレイ解像度の幅], [プロファイル管理器のプロファイルテーブル(ID)のディスプレイ解像度の高さ]}からアスペクト比算出したもの]) - [プロファイル管理器のプロファイルテーブル(ID)のディスプレイリフレッシュレート] Hz」
						
					そうでなければ
						項目部品のディスプレイ設定=「0」
						項目部品の設定ラベルの内容=「[その設定ラベルの内容][改行]解像度: ネイティブ」
						
					もし終わり
					項目部品の起動ボタンへ「[プロファイル管理器のプロファイルテーブル(ID)の名前] でプレイ」という説明ツールチップを設定する
			発生した場合
				「メインパネル プロファイル読み込み失敗: [プロファイル管理器のプロファイルテーブル(ID)の名前] ([ID])[改行][エラーのメッセージ]」をデバッグログへ出力する
				読み込み失敗プロファイル一覧へ「[プロファイル管理器のプロファイルテーブル(ID)の名前] ([ID])」を追加する
				//項目部品を解放する
				//項目部品を消す
			監視終わり
		繰り返し終わり
		
		プロファイル新規作成項目部品をプロファイルパネルへ作る
		
		プロファイルパネルのスクロール位置={0,0}
		ウィンドウ管理器でプロファイルパネルを初期化終了する
		
		もし読み込み失敗プロファイル一覧の個数が1以上なら
			「プロファイルの読み込みに失敗しました。[改行][改行]<読み込みに失敗したプロファイル>[改行]・[読み込み失敗プロファイル一覧を「[改行]・」で繋げたもの]」を「警告アイコン」で表示する
		もし終わり
		
		//プロファイル並び替え選択リストの選択項目としてプロファイル項目並び替える
		
		大きさが変わった
		
		読み込み中=×
		読み込み完了=○
	終わり
	
	自分で【並び替え方法:文字列】としてプロファイル項目並び替える手順
		プロファイル管理器で並び替え方法としてプロファイル並び替える
		
		自分へプロファイル読み込む
		
		/*自分をウィンドウ管理器で初期化開始する
		並び替え対象見出しを対象へそれぞれ繰り返す
			対象を最背面
		繰り返し終わり
		自分をウィンドウ管理器で初期化終了する*/
	終わり
	
	プロファイル並び替え選択リストが選択された時の手順
		メイン設定について「Window_Main」で「Profile_Sort_Order」へプロファイル並び替え選択リストの選択番号を設定する
		プロファイル並び替え選択リストの選択項目としてプロファイル項目並び替える
	終わり
	
	ヘルプボタンがクリックされた時の手順
		ツールパネルを選択する
		ヘルプ画面を表示する
	終わり
	
	設定ボタンがクリックされた時の手順
		ツールパネルを選択する
		メイン画面をメイン画面のアプリ設定パネルへ切り替える
	終わり
	
	プロファイル管理ボタンがクリックされた時の手順
		ツールパネルを選択する
		メイン画面のプロファイル情報パネルへプロファイル読み込む
		メイン画面をメイン画面のプロファイル情報パネルへ切り替える
	終わり
	
	アップデート確認ボタンがクリックされた時の手順
		ツールパネルを選択する
		アップデーターで{「任意」=○}としてアップデート確認する
	終わり
	
	バージョン情報ラベルが左クリックされた時の手順
		//アプリで情報表示する
	終わり
	
	アイコンピクチャーが左クリックされた時の手順
		ツールパネルを選択する
		アプリで情報表示する
	終わり
終わり

プロファイル項目部品とは
	カスタムウィンドウ部品を継承する
	
	-ヘルプツールチップ:ツールチップ
	
	はじめの手順
		初期化する
		
		ツールボタンパネルの子部品一覧を【子部品】へそれぞれ繰り返す
			もし(子部品がボタンである)なら
				子部品の元実体の「FlatAppearance」の「BorderSize」=0
			もし終わり
		繰り返し終わり
		
		ヘルプツールチップというツールチップを作る
			その待機時間=0.1
			その表示時間=120000
		
		起動ボタンの背景画像=[ウィンドウ管理器:「play_arrow_FILL1_wght400_GRAD0_opsz48」を[ウィンドウ管理器のテーマアイコン色]でアイコン取得したもの]
		「編集」というヘルプツールチップを編集ボタンへ設定する
		編集ボタンの背景画像=[ウィンドウ管理器:「edit_FILL1_wght400_GRAD0_opsz48」を[ウィンドウ管理器のテーマアイコン色]でアイコン取得したもの]
		「ショートカットを作成」というヘルプツールチップをショートカット作成ボタンへ設定する
		ショートカット作成ボタンの背景画像=[ウィンドウ管理器:「switch_access_shortcut_add_FILL1_wght400_GRAD0_opsz48」を[ウィンドウ管理器のテーマアイコン色]でアイコン取得したもの]
		ーー貼り付けた部品に対する操作をここに書きます
	終わり
	初期化する手順
		ーー自動生成された手順です。ここにプログラムを書き加えても消える場合があります
		この位置と大きさを｛15,15,250,140｝に変える
		この内容を「プロファイル項目部品」に変える
		このフォントを「Yu Gothic UI,9」に変える
		メインパネルというパネルを作る
			その位置と大きさを｛0,0,250,140｝に変える
			その枠を「線」に変える
			その移動順を4に変える
			そのフォントを「Yu Gothic UI,9」に変える
			そのドッキング方向を「全体」に変える
			その余白を｛5｝に変える
			設定ラベルというラベルをメインパネルへ作る
				その位置と大きさを｛5,30,238,68｝に変える
				その内容を「解像度: 1920×1080
引き伸ばし: 有効」に変える
				そのフォントを「Yu Gothic UI,9」に変える
				その語尾省略を○に変える
				その文字配置を「中央」に変える
				その移動順を2に変える
				そのドッキング方向を「全体」に変える
			名前ラベルというラベルをメインパネルへ作る
				その位置と大きさを｛5,5,238,25｝に変える
				その内容を「NameNameName」に変える
				そのフォントを「Yu Gothic UI,11.25,太字」に変える
				その語尾省略を○に変える
				その文字配置を「下中央」に変える
				その移動順を1に変える
				そのドッキング方向を「上」に変える
			ラベル2というラベルをメインパネルへ作る
				その位置と大きさを｛5,98,238,0｝に変える
				そのフォントを「Yu Gothic UI,9」に変える
				その移動順を4に変える
				そのドッキング方向を「下」に変える
			ツールボタンパネルというパネルをメインパネルへ作る
				その位置と大きさを｛5,98,238,35｝に変える
				その移動順を3に変える
				そのフォントを「Yu Gothic UI,9」に変える
				そのドッキング方向を「下」に変える
				起動ボタンというボタンをツールボタンパネルへ作る
					その位置と大きさを｛0,0,35,35｝に変える
					その見た目を「フラット」に変える
					その移動順を5に変える
					そのフォーカス移動可能を×に変える
					そのマウスカーソルを「手」に変える
					そのフォントを「Yu Gothic UI,9」に変える
					その背景画像配置を「拡大」に変える
					そのドッキング方向を「左」に変える
				ショートカット作成ボタンというボタンをツールボタンパネルへ作る
					その位置と大きさを｛163,0,35,35｝に変える
					その見た目を「フラット」に変える
					その移動順を3に変える
					そのフォーカス移動可能を×に変える
					そのマウスカーソルを「手」に変える
					そのフォントを「Yu Gothic UI,9」に変える
					その背景画像配置を「拡大」に変える
					そのドッキング方向を「右」に変える
				ラベル1というラベルをツールボタンパネルへ作る
					その位置と大きさを｛198,0,5,35｝に変える
					そのフォントを「Yu Gothic UI,9」に変える
					その移動順を4に変える
					そのドッキング方向を「右」に変える
				編集ボタンというボタンをツールボタンパネルへ作る
					その位置と大きさを｛203,0,35,35｝に変える
					その見た目を「フラット」に変える
					その移動順を2に変える
					そのフォーカス移動可能を×に変える
					そのマウスカーソルを「手」に変える
					そのフォントを「Yu Gothic UI,9」に変える
					その背景画像配置を「拡大」に変える
					そのドッキング方向を「右」に変える
	終わり
	
	+ディスプレイ設定:文字列
	+プロファイルID:文字列
	
	プロファイル名という属性
		設定する手順
			自分のメインパネルの名前ラベルの内容=設定値
		終わり
		取得する手順
			自分のメインパネルの名前ラベルの内容を返す
		終わり
	終わり
	
	ApexLegends起動する手順
		ApexLegendsをプロファイルIDで起動する
	終わり
	
	マウスカーソルが入った時の手順
		//自分の背景色=RGB(140,140,140)
	終わり
	
	マウスカーソルが離れた時の手順
		//自分の背景色=テーマ背景色
	終わり
	
	名前ラベルのマウスカーソルが入った時の手順
		マウスカーソルが入った
	終わり
	
	設定ラベルのマウスカーソルが入った時の手順
		マウスカーソルが入った
	終わり
	
	名前ラベルのマウスカーソルが離れた時の手順
		マウスカーソルが離れた
	終わり
	
	設定ラベルのマウスカーソルが離れた時の手順
		マウスカーソルが離れた
	終わり
	
	名前ラベルのマウスのボタンが押された時の手順
		もしこの時のボタンが「左ボタン」なら
			//ApexLegends起動する
			
		他でもしこの時のボタンが「右ボタン」なら
			/*メイン画面のメインメニューパネルの選択プロファイル名=名前ラベルの内容
			メインメニューコンテキストメニューのメインパネルのプロファイル名ラベルの内容=名前ラベルの内容
			// コンテキストメニューを表示
			メインメニューコンテキストメニューを表示する
			メインメニューコンテキストメニューの位置を{マウスカーソルの位置(1),マウスカーソルの位置(2)}に変える
			メインメニューコンテキストメニューの透明度=100
			メインメニューコンテキストメニューを選択する*/
			
		もし終わり
	終わり
	
	設定ラベルのマウスのボタンが押された時の手順
		もしこの時のボタンが「左ボタン」なら
			//ApexLegends起動する
			
		他でもしこの時のボタンが「右ボタン」なら
			/*メイン画面のメインメニューパネルの選択プロファイル名=名前ラベルの内容
			メインメニューコンテキストメニューのメインパネルのプロファイル名ラベルの内容=名前ラベルの内容
			// コンテキストメニューを表示
			メインメニューコンテキストメニューを表示する
			メインメニューコンテキストメニューの位置を{マウスカーソルの位置(1),マウスカーソルの位置(2)}に変える
			メインメニューコンテキストメニューの透明度=100
			メインメニューコンテキストメニューを選択する*/
			
		もし終わり
	終わり
	
	起動ボタンがクリックされた時の手順
		ApexLegends起動する
	終わり
	
	編集ボタンがクリックされた時の手順
		メインパネルを選択する
		メイン画面を[メイン画面のプロファイル編集パネル]へ○として切り替える
		メイン画面のプロファイル編集パネルへ[プロファイルID]を×で読み込む
	終わり
	
	ショートカット作成ボタンがクリックされた時の手順
		メインパネルを選択する
		プロファイル管理器で[プロファイルID]としてプロファイルショートカット作成する
	終わり
終わり

プロファイル新規作成項目部品とは
	カスタムウィンドウ部品を継承する
	
	はじめの手順
		初期化する
		メインボタンの元実体の「FlatAppearance」の「BorderSize」=0
		メインボタンの画像=[ウィンドウ管理器:「add_FILL1_wght400_GRAD0_opsz48」を[ウィンドウ管理器のテーマアイコン色]でアイコン取得したもの]
		ーー貼り付けた部品に対する操作をここに書きます
	終わり
	初期化する手順
		ーー自動生成された手順です。ここにプログラムを書き加えても消える場合があります
		この位置と大きさを｛15,15,250,140｝に変える
		この内容を「プロファイル項目部品」に変える
		このフォントを「Yu Gothic UI,9」に変える
		メインボタンというボタンを作る
			その位置と大きさを｛0,0,250,140｝に変える
			その見た目を「フラット」に変える
			その文字画像配置を「横に画像と文字」に変える
			その内容を「プロファイルを新規作成」に変える
			その移動順を1に変える
			そのマウスカーソルを「手」に変える
			そのフォントを「Yu Gothic UI,11.25,太字」に変える
			そのドッキング方向を「全体」に変える
	終わり
	
	新規作成する手順
		プロファイル作成画面をダイアログで表示する
	終わり
	
	メインボタンがクリックされた時の手順
		メイン画面のメインメニューパネルのプロファイルパネルを選択する
		新規作成する
	終わり
終わり