ApexLegendsとは
	単一種類
	
	+監視有効:真偽値
	+監視スレッド:スレッド
	+プロセス:プロセス
	+プロセス起動中:真偽値
	+インストールパス:文字列
	+プロファイル:辞書
	
	はじめの手順
		監視有効=×
		プロセス起動中=×
	終わり
	
	起動引数という属性
		取得する手順
			起動引数取得したものを返す
		終わり
	終わり
	
	+Steam32ID一覧:配列
	Steam32ID取得する手順
		
	終わり
	
	+EAトークン一覧:配列
	EAトークン一覧取得する手順
		
	終わり
	
	〈【プラットフォーム:文字列】から〉起動引数取得する手順:文字列
		// EA Desktop
		例外監視
			【フォルダー:文字列】=「C:\Users\[ウィンドウズのユーザ名]\AppData\Local\Electronic Arts\EA Desktop\」
			【テレメトリー:辞書】=[「[フォルダー]telemetry.ini」から「UTF-8」で読み込んだもの]を辞書化したもの
			// telemetry.ini にIDの項目が存在する場合はそこから取得する
			もしテレメトリーに「token」が存在するなら
				【ユーザーデータ:辞書】=[「[フォルダー]user_[テレメトリー(「token」)].ini」から「UTF-8」で読み込んだもの]を辞書化したもの
				
			そうでなければ
				【ユーザーデータファイル一覧】=空の配列
				「[フォルダー]」のファイルの一覧を【ファイル】へそれぞれ繰り返す
					もしファイルが「user_」で始まるかつファイルの拡張子だけが「ini」なら
						ユーザーデータファイル一覧へファイルを追加する
					もし終わり
				繰り返し終わり
				
			もし終わり
			ユーザーデータ(「user.gamecommandline.origin.ofr.50.0002694」)を返す
		発生した場合
			「起動引数の読み込みに失敗しました。[改行][改行][エラーのメッセージ]」を「中止アイコン」で表示する
			「」を返す
		監視終わり
	終わり
	
	インストール先一覧という属性
		取得する手順
			{0}でインストール先一覧取得したものを返す
		終わり
	終わり
	
	【プラットフォーム:配列】でインストール先一覧取得する手順:配列
		【一覧】=空の配列
		【プラットフォーム番号一覧:配列】=プラットフォーム
		
		もしプラットフォームが無ならプラットフォーム番号一覧={0}
		そうでなければプラットフォーム番号一覧=プラットフォーム
		もしプラットフォーム番号一覧が「{0}」ならプラットフォーム番号一覧={1,2}
		
		【インストール先】
		プラットフォーム番号一覧を【プラットフォーム番号】へそれぞれ繰り返す
			インストール先=プラットフォーム番号でインストール先取得したもの
			もしインストール先というフォルダが存在するなら一覧へインストール先を追加する
		繰り返し終わり
		一覧を返す
	終わり
	
	【プラットフォーム】でインストール先取得する手順:文字列
		【パス】=「」
		【インストール先】=「」
		プラットフォーム=「[プラットフォーム]」
		プラットフォームについて分岐
		「1」の場合 // Steam
			例外監視
			// レジストリーからSteamのインストール先を取得する
			【Steamパス】=[レジストリから「HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Valve\Steam\InstallPath」を取得したもの]
			// 取得したインストール先とライブラリーフォルダーのファイルが存在する場合、インストール先一覧に加える
			もし(Steamパスというフォルダが存在する)かつ(「[Steamパス]\steamapps\libraryfolders.vdf」というファイルが存在する)なら
				【Steamライブラリーフォルダー一覧ファイル】=「[Steamパス]\steamapps\libraryfolders.vdf」から「UTF-8」で読み込んだもの
				【Steamライブラリーフォルダー一覧】というVDF(Steamライブラリーフォルダー一覧ファイル)を作る
				Steamライブラリーフォルダー一覧の辞書(「libraryfolders」)の見出しを【番号】へそれぞれ繰り返す
					Steamライブラリーフォルダー一覧の辞書(「libraryfolders」)(番号)(「apps」)の見出しを【AppID】へそれぞれ繰り返す
						もしAppIDが「1172470」なら
							パス=[Steamライブラリーフォルダー一覧の辞書(「libraryfolders」)(番号)(「path」)]&「\steamapps\common\Apex Legends」
							もしパスというフォルダが存在するなら
								もしパスが「\」で終わらないならパス=パス&「\」
								インストール先=「」&パス
							もし終わり
						もし終わり
					繰り返し終わり
				繰り返し終わり
			もし終わり
			発生した場合
				インストール先=無
			監視終わり
			
		「2」の場合 // EA Desktop (Origin)
			例外監視
			// レジストリーからApex Legendsのインストール先を取得する
			パス=レジストリから「HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Respawn\Apex\Install Dir」を取得したもの
			// 取得したインストール先フォルダーが存在する場合、インストール先一覧に加える
			もしパスというフォルダが存在するなら
				もしパスが「\」で終わらないならパス=パス&「\」
				インストール先=「」&パス
			もし終わり
			発生した場合
				インストール先=無
			監視終わり
			
		分岐終わり
		インストール先をデバッグログへ出力する
		
		インストール先を返す
	終わり
	
	自分を〈【プロファイル名】で〉起動する手順
		// プロファイルを読み込む
		もしプロファイル名が無でないなら
			プロファイル=プロファイル管理器の一覧(プロファイル名)
			
		// プロファイル名が指定されていない場合は「Default」を読み込む
		そうでなければ
			プロファイル=プロファイル管理器の一覧(「Default」)
			
		もし終わり
		
		メイン画面のメインメニューパネルの有効=×
		
		インストールパス=プロファイル(「Apex_Legends」)(「EACBinaryPath」)
		
		// Apex Legends を起動する
		もしインストールパスというファイルが存在しないなら×を返す
		「"」&インストールパス&「"」を起動する
		
		// ディスプレイの解像度を変更する
		画面領域サイズを{プロファイル(「Fullscreen_Stretched_Resolution」)(「ResolutionWidth」), プロファイル(「Fullscreen_Stretched_Resolution」)(「ResolutionHeight」), プロファイル(「Fullscreen_Stretched_Resolution」)(「Refresh_Rate」)}へ変更する
		
		// Apex Legends が起動するまで待つ
		【Apexプロセス】=無
		繰り返す
			例外監視
				もし「r5apex」のプロセス一覧の個数が1以上なら
					Apexプロセス=「r5apex」のプロセス
				もし終わり
			発生した場合
				Apexプロセス=無
			監視終わり
			もしApexプロセスが無でないなら繰り返しから抜け出す
			1秒待つ
		繰り返し終わり
		5秒待つ
		Apexプロセス=無
		繰り返す
			例外監視
				もし「r5apex」のプロセス一覧の個数が1以上なら
					Apexプロセス=「r5apex」のプロセス
				もし終わり
			発生した場合
				Apexプロセス=無
			監視終わり
			もしApexプロセスが無でないなら繰り返しから抜け出す
			1秒待つ
		繰り返し終わり

		
		自分を監視開始する
		
		30秒待つ
		
		// Alt+Enter の自動押下処理
		もしApexプロセスの起動中が○なら
			プロセスへ「%{Enter}」を入力する
			2秒待つ
			プロセスへ「%{Enter}」を入力する
		もし終わり
		
		もし(インストールパスというファイルが存在する)かつ(Apexプロセスの起動中が○)なら○を返す
		そうでなければ×を返す
	終わり
	
	自分を監視開始する手順
		もし監視有効が○なら手順から抜け出す
		監視スレッドというスレッドを作る
		監視スレッドで『
			監視有効=○
			メイン画面を表示する
			メイン画面の起動中パネルを表示する
			監視有効が○の間、繰り返す
				// Apex Legendsが起動しているかチェック
				例外監視
					プロセス=「r5apex」のプロセス
					プロセス起動中=○
				発生した場合
					プロセス起動中=×
				監視終わり
				もしプロセスが空ならプロセス起動中=×
				
				// Apex Legendsが起動していて、かつウィンドウを選択している場合、カーソルのロックを有効化する
				プロセス起動中について分岐
				○の場合
					もしプロセス拡張の選択プロセスの名前が「r5apex」なら
						もしロック有効が○でないならマウスカーソルロッカーでロックする
						メイン画面の起動中パネルのPIDラベルの内容=プロセスのID
						
					そうでなければ
						もしロック有効が×でないならマウスカーソルロッカーでロック解除する
						メイン画面の起動中パネルのPIDラベルの内容=プロセスのID
						
					もし終わり
					メイン画面の起動中パネルのカーソル状態ラベルの内容=マウスカーソルロッカーのロック中
					
				×の場合
					メイン画面の起動中パネルのPIDラベルの内容=「」
					マウスカーソルロッカーでロック解除する
					// ディスプレイの解像度を戻す
					画面領域サイズを{メイン設定について「Display」から「Resolution_Width」を取得したもの, メイン設定について「Display」から「Resolution_Width」を取得したもの, メイン設定について「Display」から「RefreshRate」を取得したもの}へ変更する
					アプリを終了する
					
				分岐終わり
				0.1秒待つ
			繰り返し終わり
		』を実行する
	終わり
終わり